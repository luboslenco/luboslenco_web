attribute highp vec3 vertexPosition;
attribute highp vec2 texPosition;
attribute highp vec3 normalPosition;
attribute highp vec4 vertexColor;
attribute highp vec4 bone;
attribute highp vec4 weight;
uniform highp mat4 mvpMatrix;
uniform highp mat4 dbmvpMatrix;
uniform highp mat4 viewMatrix;
uniform highp mat4 projectionMatrix;
uniform bool lighting;
uniform bool rim;
uniform sampler2D skinning;
varying highp vec2 texCoord;
varying highp vec3 norm;
varying highp vec4 color;
varying highp vec4 shadowCoord;
varying highp vec4 viewSpacePos;
highp float packColor(in highp vec4 color){
return ((color.x + (color.y * 256.0)) + ((color.z * 256.0) * 256.0));
}
highp vec4 skinningRead(in highp float id){
highp float r = packColor(texture2D(skinning, vec2(0.0, (((id * 4.0) + 0.0) / 8191.0))));
highp float g = packColor(texture2D(skinning, vec2(0.0, (((id * 4.0) + 1.0) / 8191.0))));
highp float b = packColor(texture2D(skinning, vec2(0.0, (((id * 4.0) + 2.0) / 8191.0))));
highp float a = packColor(texture2D(skinning, vec2(0.0, (((id * 4.0) + 3.0) / 8191.0))));
highp vec4 res = vec4(r, g, b, a);
return res;
}
highp mat4 skinWorldMatrix(in highp vec4 bone){
highp float b;
highp float o = 1024.0;
highp vec4 l0, l1, l2;
(b = (bone[0] * 3.0));
(l0 = skinningRead(b));
(l1 = skinningRead((b + 1.0)));
(l2 = skinningRead((b + 2.0)));
highp mat4 j0 = mat4(l0.x, l0.y, l0.z, l0.w, l1.x, l1.y, l1.z, l1.w, l2.x, l2.y, l2.z, l2.w, 0.0, 0.0, 0.0, 1.0);
(l0 = skinningRead((b + o)));
(l1 = skinningRead(((b + 1.0) + o)));
(l2 = skinningRead(((b + 2.0) + o)));
highp mat4 b0 = mat4(l0.x, l0.y, l0.z, l0.w, l1.x, l1.y, l1.z, l1.w, l2.x, l2.y, l2.z, l2.w, 0.0, 0.0, 0.0, 1.0);
(b = (bone[1] * 3.0));
(l0 = skinningRead(b));
(l1 = skinningRead((b + 1.0)));
(l2 = skinningRead((b + 2.0)));
highp mat4 j1 = mat4(l0.x, l0.y, l0.z, l0.w, l1.x, l1.y, l1.z, l1.w, l2.x, l2.y, l2.z, l2.w, 0.0, 0.0, 0.0, 1.0);
(l0 = skinningRead((b + o)));
(l1 = skinningRead(((b + 1.0) + o)));
(l2 = skinningRead(((b + 2.0) + o)));
highp mat4 b1 = mat4(l0.x, l0.y, l0.z, l0.w, l1.x, l1.y, l1.z, l1.w, l2.x, l2.y, l2.z, l2.w, 0.0, 0.0, 0.0, 1.0);
(b = (bone[2] * 3.0));
(l0 = skinningRead(b));
(l1 = skinningRead((b + 1.0)));
(l2 = skinningRead((b + 2.0)));
highp mat4 j2 = mat4(l0.x, l0.y, l0.z, l0.w, l1.x, l1.y, l1.z, l1.w, l2.x, l2.y, l2.z, l2.w, 0.0, 0.0, 0.0, 1.0);
(l0 = skinningRead((b + o)));
(l1 = skinningRead(((b + 1.0) + o)));
(l2 = skinningRead(((b + 2.0) + o)));
highp mat4 b2 = mat4(l0.x, l0.y, l0.z, l0.w, l1.x, l1.y, l1.z, l1.w, l2.x, l2.y, l2.z, l2.w, 0.0, 0.0, 0.0, 1.0);
(b = (bone[3] * 3.0));
(l0 = skinningRead(b));
(l1 = skinningRead((b + 1.0)));
(l2 = skinningRead((b + 2.0)));
highp mat4 j3 = mat4(l0.x, l0.y, l0.z, l0.w, l1.x, l1.y, l1.z, l1.w, l2.x, l2.y, l2.z, l2.w, 0.0, 0.0, 0.0, 1.0);
(l0 = skinningRead((b + o)));
(l1 = skinningRead(((b + 1.0) + o)));
(l2 = skinningRead(((b + 2.0) + o)));
highp mat4 b3 = mat4(l0.x, l0.y, l0.z, l0.w, l1.x, l1.y, l1.z, l1.w, l2.x, l2.y, l2.z, l2.w, 0.0, 0.0, 0.0, 1.0);
return mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);
}
void kore(){
highp vec4 lv = vec4(vertexPosition, 1.0);
highp vec3 ln = vec3(normalPosition);
highp mat4 wm = skinWorldMatrix(bone);
(norm = (ln * mat3(wm)));
(gl_Position = (((projectionMatrix * viewMatrix) * wm) * lv));
(color = vertexColor);
highp vec4 lightDir = vec4(0.30000001, 0.30000001, 0.30000001, 1.0);
highp vec4 ambient = vec4(0.2, 0.2, 0.2, 1.0);
(ambient = (ambient * color));
highp vec4 diffuse = color;
(color = (ambient + (diffuse * dot(lightDir, vec4(normalPosition, 1.0)))));
(texCoord = texPosition);
}
void main(){
kore();
}
