// Generated by Haxe 3.4.2
(function ($hx_exports, $global) { "use strict";
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
;$hx_exports["kha"]["_Color"] = $hx_exports["kha"]["_Color"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = true;
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = true;
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,first: function() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = true;
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = true;
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var kha_WindowMode = $hxClasses["kha.WindowMode"] = { __ename__ : true, __constructs__ : ["Window","BorderlessWindow","Fullscreen"] };
kha_WindowMode.Window = ["Window",0];
kha_WindowMode.Window.toString = $estr;
kha_WindowMode.Window.__enum__ = kha_WindowMode;
kha_WindowMode.BorderlessWindow = ["BorderlessWindow",1];
kha_WindowMode.BorderlessWindow.toString = $estr;
kha_WindowMode.BorderlessWindow.__enum__ = kha_WindowMode;
kha_WindowMode.Fullscreen = ["Fullscreen",2];
kha_WindowMode.Fullscreen.toString = $estr;
kha_WindowMode.Fullscreen.__enum__ = kha_WindowMode;
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = true;
Main.main = function() {
	iron_object_BoneAnimation.skinMaxBones = 8;
	iron_object_LampObject.cascadeCount = 4;
	iron_object_LampObject.cascadeSplitFactor = 0.800000011920929;
	Main.state = 1;
	Main.state--;
	Main.start();
};
Main.start = function() {
	if(Main.state > 0) {
		return;
	}
	armory_object_Uniforms.register();
	if(Main.projectWindowMode == kha_WindowMode.Fullscreen) {
		Main.projectWindowMode = kha_WindowMode.BorderlessWindow;
		Main.projectWidth = kha_DisplayImpl.width(0);
		Main.projectHeight = kha_DisplayImpl.height(0);
	}
	kha_System.init({ title : "untitled", width : Main.projectWidth, height : Main.projectHeight, samplesPerPixel : 1, vSync : true, windowMode : Main.projectWindowMode, resizable : false, maximizable : false, minimizable : true},function() {
		iron_App.init(function() {
			iron_App.notifyOnRender2D(armory_trait_internal_LoadBar.render);
			iron_Scene.setActive("Scene",function(object) {
			});
		});
	});
};
Math.__name__ = true;
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = true;
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = true;
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = true;
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a > b;
	}
};
_$UInt_UInt_$Impl_$.gte = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a >= b;
	}
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	var $int = this1;
	if($int < 0) {
		return 4294967296.0 + $int;
	} else {
		return $int + 0.0;
	}
};
var armory_object_Uniforms = function() { };
$hxClasses["armory.object.Uniforms"] = armory_object_Uniforms;
armory_object_Uniforms.__name__ = true;
armory_object_Uniforms.register = function() {
	iron_object_Uniforms.externalTextureLinks = [armory_object_Uniforms.externalTextureLink];
	iron_object_Uniforms.externalVec3Links = [armory_object_Uniforms.externalVec3Link];
	iron_object_Uniforms.externalFloatLinks = [armory_object_Uniforms.externalFloatLink];
};
armory_object_Uniforms.externalTextureLink = function(tulink) {
	if(tulink == "_smaaSearch") {
		var _this = iron_Scene.active.embedded;
		if(__map_reserved["smaa_search.png"] != null) {
			return _this.getReserved("smaa_search.png");
		} else {
			return _this.h["smaa_search.png"];
		}
	} else if(tulink == "_smaaArea") {
		var _this1 = iron_Scene.active.embedded;
		if(__map_reserved["smaa_area.png"] != null) {
			return _this1.getReserved("smaa_area.png");
		} else {
			return _this1.h["smaa_area.png"];
		}
	} else if(tulink == "_lensTexture") {
		var _this2 = iron_Scene.active.embedded;
		if(__map_reserved["lenstexture.jpg"] != null) {
			return _this2.getReserved("lenstexture.jpg");
		} else {
			return _this2.h["lenstexture.jpg"];
		}
	} else if(tulink == "_cloudsTexture") {
		var _this3 = iron_Scene.active.embedded;
		if(__map_reserved["cloudstexture.png"] != null) {
			return _this3.getReserved("cloudstexture.png");
		} else {
			return _this3.h["cloudstexture.png"];
		}
	}
	return null;
};
armory_object_Uniforms.externalVec3Link = function(clink) {
	var v = null;
	return v;
};
armory_object_Uniforms.externalFloatLink = function(clink) {
	if(clink == "_dynamicScale") {
		return armory_renderpath_DynamicResolutionScale.dynamicScale;
	}
	return 0.0;
};
var armory_renderpath_DynamicResolutionScale = function() { };
$hxClasses["armory.renderpath.DynamicResolutionScale"] = armory_renderpath_DynamicResolutionScale;
armory_renderpath_DynamicResolutionScale.__name__ = true;
var armory_trait_internal_LoadBar = function() { };
$hxClasses["armory.trait.internal.LoadBar"] = armory_trait_internal_LoadBar;
armory_trait_internal_LoadBar.__name__ = true;
armory_trait_internal_LoadBar.render = function(g) {
	if(iron_Scene.active != null && iron_Scene.active.ready) {
		iron_App.removeRender2D(armory_trait_internal_LoadBar.render);
		return;
	}
	g.set_color(-3200189);
	g.fillRect(0,kha_System.windowHeight() - 4,kha_System.windowWidth() / 8 * iron_data_Data.assetsLoaded,4);
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = true;
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = true;
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = true;
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = true;
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return Type.resolveClass(name);
	}
	,resolveEnum: function(name) {
		return Type.resolveEnum(name);
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = true;
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.buf.charCodeAt(this.pos++);
		switch(_g) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Type.createEmptyInstance(cl1);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Type.createEmptyInstance(cl2);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32;
haxe_crypto_Adler32.__name__ = true;
haxe_crypto_Adler32.read = function(i) {
	var a = new haxe_crypto_Adler32();
	var a2a = i.readByte();
	var a2b = i.readByte();
	var a1a = i.readByte();
	var a1b = i.readByte();
	a.a1 = a1a << 8 | a1b;
	a.a2 = a2a << 8 | a2b;
	return a;
};
haxe_crypto_Adler32.prototype = {
	update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var p = _g1++;
			var c = b.b[p];
			a1 = (a1 + c) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,equals: function(a) {
		if(a.a1 == this.a1) {
			return a.a2 == this.a2;
		} else {
			return false;
		}
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = true;
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.b = [];
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = true;
haxe_io_BytesBuffer.prototype = {
	getBytes: function() {
		var bytes = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
		this.b = null;
		return bytes;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = true;
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			if (eof instanceof js__$Boot_HaxeError) eof = eof.val;
			if( js_Boot.__instanceof(eof,haxe_io_Eof) ) {
			} else throw(eof);
		}
		return len - k;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readFloat: function() {
		return haxe_io_FPHelper.i32ToFloat(this.readInt32());
	}
	,readDouble: function() {
		var i1 = this.readInt32();
		var i2 = this.readInt32();
		if(this.bigEndian) {
			return haxe_io_FPHelper.i64ToDouble(i2,i1);
		} else {
			return haxe_io_FPHelper.i64ToDouble(i1,i2);
		}
	}
	,readInt8: function() {
		var n = this.readByte();
		if(n >= 128) {
			return n - 256;
		}
		return n;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,__class__: haxe_io_Input
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = true;
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
	,__properties__: $extend(haxe_io_Input.prototype.__properties__,{set_position:"set_position"})
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = true;
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = true;
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.b.push(c);
	}
	,writeBytes: function(buf,pos,len) {
		var _this = this.b;
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b1 = _this.b;
		var b2 = buf.b;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			_this.b.push(b2[i]);
		}
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = true;
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else if(!isFinite(v)) {
		if(v > 0) {
			i64.low = 0;
			i64.high = 2146435072;
		} else {
			i64.low = 0;
			i64.high = -1048576;
		}
	} else {
		var av = v < 0 ? -v : v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0 ? -2147483648 : 0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_io__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt8Array.UInt8Array_Impl_"] = haxe_io__$UInt8Array_UInt8Array_$Impl_$;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__name__ = true;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var haxe_zip_ExtraField = $hxClasses["haxe.zip.ExtraField"] = { __ename__ : true, __constructs__ : ["FUnknown","FInfoZipUnicodePath","FUtf8"] };
haxe_zip_ExtraField.FUnknown = function(tag,bytes) { var $x = ["FUnknown",0,tag,bytes]; $x.__enum__ = haxe_zip_ExtraField; $x.toString = $estr; return $x; };
haxe_zip_ExtraField.FInfoZipUnicodePath = function(name,crc) { var $x = ["FInfoZipUnicodePath",1,name,crc]; $x.__enum__ = haxe_zip_ExtraField; $x.toString = $estr; return $x; };
haxe_zip_ExtraField.FUtf8 = ["FUtf8",2];
haxe_zip_ExtraField.FUtf8.toString = $estr;
haxe_zip_ExtraField.FUtf8.__enum__ = haxe_zip_ExtraField;
var haxe_zip_Huffman = $hxClasses["haxe.zip.Huffman"] = { __ename__ : true, __constructs__ : ["Found","NeedBit","NeedBits"] };
haxe_zip_Huffman.Found = function(i) { var $x = ["Found",0,i]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
haxe_zip_Huffman.NeedBit = function(left,right) { var $x = ["NeedBit",1,left,right]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
haxe_zip_Huffman.NeedBits = function(n,table) { var $x = ["NeedBits",2,n,table]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
var haxe_zip_HuffTools = function() {
};
$hxClasses["haxe.zip.HuffTools"] = haxe_zip_HuffTools;
haxe_zip_HuffTools.__name__ = true;
haxe_zip_HuffTools.prototype = {
	treeDepth: function(t) {
		switch(t[1]) {
		case 0:
			return 0;
		case 1:
			var b = t[3];
			var a = t[2];
			var da = this.treeDepth(a);
			var db = this.treeDepth(b);
			return 1 + (da < db ? da : db);
		case 2:
			throw new js__$Boot_HaxeError("assert");
			break;
		}
	}
	,treeCompress: function(t) {
		var d = this.treeDepth(t);
		if(d == 0) {
			return t;
		}
		if(d == 1) {
			if(t[1] == 1) {
				var b = t[3];
				var a = t[2];
				return haxe_zip_Huffman.NeedBit(this.treeCompress(a),this.treeCompress(b));
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
		}
		var size = 1 << d;
		var table = [];
		var _g1 = 0;
		var _g = size;
		while(_g1 < _g) {
			var i = _g1++;
			table.push(haxe_zip_Huffman.Found(-1));
		}
		this.treeWalk(table,0,0,d,t);
		return haxe_zip_Huffman.NeedBits(d,table);
	}
	,treeWalk: function(table,p,cd,d,t) {
		if(t[1] == 1) {
			var b = t[3];
			var a = t[2];
			if(d > 0) {
				this.treeWalk(table,p,cd + 1,d - 1,a);
				this.treeWalk(table,p | 1 << cd,cd + 1,d - 1,b);
			} else {
				table[p] = this.treeCompress(t);
			}
		} else {
			table[p] = this.treeCompress(t);
		}
	}
	,treeMake: function(bits,maxbits,v,len) {
		if(len > maxbits) {
			throw new js__$Boot_HaxeError("Invalid huffman");
		}
		var idx = v << 5 | len;
		if(bits.h.hasOwnProperty(idx)) {
			return haxe_zip_Huffman.Found(bits.h[idx]);
		}
		v <<= 1;
		++len;
		return haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,v,len),this.treeMake(bits,maxbits,v | 1,len));
	}
	,make: function(lengths,pos,nlengths,maxbits) {
		var counts = [];
		var tmp = [];
		if(maxbits > 32) {
			throw new js__$Boot_HaxeError("Invalid huffman");
		}
		var _g1 = 0;
		var _g = maxbits;
		while(_g1 < _g) {
			var i = _g1++;
			counts.push(0);
			tmp.push(0);
		}
		var _g11 = 0;
		var _g2 = nlengths;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var p = lengths[i1 + pos];
			if(p >= maxbits) {
				throw new js__$Boot_HaxeError("Invalid huffman");
			}
			counts[p]++;
		}
		var code = 0;
		var _g12 = 1;
		var _g3 = maxbits - 1;
		while(_g12 < _g3) {
			var i2 = _g12++;
			code = code + counts[i2] << 1;
			tmp[i2] = code;
		}
		var bits = new haxe_ds_IntMap();
		var _g13 = 0;
		var _g4 = nlengths;
		while(_g13 < _g4) {
			var i3 = _g13++;
			var l = lengths[i3 + pos];
			if(l != 0) {
				var n = tmp[l - 1];
				tmp[l - 1] = n + 1;
				bits.h[n << 5 | l] = i3;
			}
		}
		return this.treeCompress(haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,0,1),this.treeMake(bits,maxbits,1,1)));
	}
	,__class__: haxe_zip_HuffTools
};
var haxe_zip__$InflateImpl_Window = function(hasCrc) {
	this.buffer = new haxe_io_Bytes(new ArrayBuffer(65536));
	this.pos = 0;
	if(hasCrc) {
		this.crc = new haxe_crypto_Adler32();
	}
};
$hxClasses["haxe.zip._InflateImpl.Window"] = haxe_zip__$InflateImpl_Window;
haxe_zip__$InflateImpl_Window.__name__ = true;
haxe_zip__$InflateImpl_Window.prototype = {
	slide: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,32768);
		}
		var b = new haxe_io_Bytes(new ArrayBuffer(65536));
		this.pos -= 32768;
		b.blit(0,this.buffer,32768,this.pos);
		this.buffer = b;
	}
	,addBytes: function(b,p,len) {
		if(this.pos + len > 65536) {
			this.slide();
		}
		this.buffer.blit(this.pos,b,p,len);
		this.pos += len;
	}
	,addByte: function(c) {
		if(this.pos == 65536) {
			this.slide();
		}
		this.buffer.b[this.pos] = c & 255;
		this.pos++;
	}
	,getLastChar: function() {
		return this.buffer.b[this.pos - 1];
	}
	,available: function() {
		return this.pos;
	}
	,checksum: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,this.pos);
		}
		return this.crc;
	}
	,__class__: haxe_zip__$InflateImpl_Window
};
var haxe_zip__$InflateImpl_State = $hxClasses["haxe.zip._InflateImpl.State"] = { __ename__ : true, __constructs__ : ["Head","Block","CData","Flat","Crc","Dist","DistOne","Done"] };
haxe_zip__$InflateImpl_State.Head = ["Head",0];
haxe_zip__$InflateImpl_State.Head.toString = $estr;
haxe_zip__$InflateImpl_State.Head.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Block = ["Block",1];
haxe_zip__$InflateImpl_State.Block.toString = $estr;
haxe_zip__$InflateImpl_State.Block.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.CData = ["CData",2];
haxe_zip__$InflateImpl_State.CData.toString = $estr;
haxe_zip__$InflateImpl_State.CData.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Flat = ["Flat",3];
haxe_zip__$InflateImpl_State.Flat.toString = $estr;
haxe_zip__$InflateImpl_State.Flat.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Crc = ["Crc",4];
haxe_zip__$InflateImpl_State.Crc.toString = $estr;
haxe_zip__$InflateImpl_State.Crc.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Dist = ["Dist",5];
haxe_zip__$InflateImpl_State.Dist.toString = $estr;
haxe_zip__$InflateImpl_State.Dist.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.DistOne = ["DistOne",6];
haxe_zip__$InflateImpl_State.DistOne.toString = $estr;
haxe_zip__$InflateImpl_State.DistOne.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Done = ["Done",7];
haxe_zip__$InflateImpl_State.Done.toString = $estr;
haxe_zip__$InflateImpl_State.Done.__enum__ = haxe_zip__$InflateImpl_State;
var haxe_zip_InflateImpl = function(i,header,crc) {
	if(crc == null) {
		crc = true;
	}
	if(header == null) {
		header = true;
	}
	this["final"] = false;
	this.htools = new haxe_zip_HuffTools();
	this.huffman = this.buildFixedHuffman();
	this.huffdist = null;
	this.len = 0;
	this.dist = 0;
	this.state = header ? haxe_zip__$InflateImpl_State.Head : haxe_zip__$InflateImpl_State.Block;
	this.input = i;
	this.bits = 0;
	this.nbits = 0;
	this.needed = 0;
	this.output = null;
	this.outpos = 0;
	this.lengths = [];
	var _g = 0;
	while(_g < 19) {
		var i1 = _g++;
		this.lengths.push(-1);
	}
	this.window = new haxe_zip__$InflateImpl_Window(crc);
};
$hxClasses["haxe.zip.InflateImpl"] = haxe_zip_InflateImpl;
haxe_zip_InflateImpl.__name__ = true;
haxe_zip_InflateImpl.prototype = {
	buildFixedHuffman: function() {
		if(haxe_zip_InflateImpl.FIXED_HUFFMAN != null) {
			return haxe_zip_InflateImpl.FIXED_HUFFMAN;
		}
		var a = [];
		var _g = 0;
		while(_g < 288) {
			var n = _g++;
			a.push(n <= 143 ? 8 : n <= 255 ? 9 : n <= 279 ? 7 : 8);
		}
		haxe_zip_InflateImpl.FIXED_HUFFMAN = this.htools.make(a,0,288,10);
		return haxe_zip_InflateImpl.FIXED_HUFFMAN;
	}
	,readBytes: function(b,pos,len) {
		this.needed = len;
		this.outpos = pos;
		this.output = b;
		if(len > 0) {
			while(this.inflateLoop()) {
			}
		}
		return len - this.needed;
	}
	,getBits: function(n) {
		while(this.nbits < n) {
			this.bits |= this.input.readByte() << this.nbits;
			this.nbits += 8;
		}
		var b = this.bits & (1 << n) - 1;
		this.nbits -= n;
		this.bits >>= n;
		return b;
	}
	,getBit: function() {
		if(this.nbits == 0) {
			this.nbits = 8;
			this.bits = this.input.readByte();
		}
		var b = (this.bits & 1) == 1;
		this.nbits--;
		this.bits >>= 1;
		return b;
	}
	,getRevBits: function(n) {
		if(n == 0) {
			return 0;
		} else if(this.getBit()) {
			return 1 << n - 1 | this.getRevBits(n - 1);
		} else {
			return this.getRevBits(n - 1);
		}
	}
	,resetBits: function() {
		this.bits = 0;
		this.nbits = 0;
	}
	,addBytes: function(b,p,len) {
		this.window.addBytes(b,p,len);
		this.output.blit(this.outpos,b,p,len);
		this.needed -= len;
		this.outpos += len;
	}
	,addByte: function(b) {
		this.window.addByte(b);
		this.output.b[this.outpos] = b & 255;
		this.needed--;
		this.outpos++;
	}
	,addDistOne: function(n) {
		var c = this.window.getLastChar();
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) {
			var i = _g1++;
			this.addByte(c);
		}
	}
	,addDist: function(d,len) {
		this.addBytes(this.window.buffer,this.window.pos - d,len);
	}
	,applyHuffman: function(h) {
		switch(h[1]) {
		case 0:
			var n = h[2];
			return n;
		case 1:
			var b = h[3];
			var a = h[2];
			return this.applyHuffman(this.getBit() ? b : a);
		case 2:
			var tbl = h[3];
			var n1 = h[2];
			return this.applyHuffman(tbl[this.getBits(n1)]);
		}
	}
	,inflateLengths: function(a,max) {
		var i = 0;
		var prev = 0;
		while(i < max) {
			var n = this.applyHuffman(this.huffman);
			switch(n) {
			case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:
				prev = n;
				a[i] = n;
				++i;
				break;
			case 16:
				var end = i + 3 + this.getBits(2);
				if(end > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				while(i < end) {
					a[i] = prev;
					++i;
				}
				break;
			case 17:
				i += 3 + this.getBits(3);
				if(i > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				break;
			case 18:
				i += 11 + this.getBits(7);
				if(i > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
		}
	}
	,inflateLoop: function() {
		var _g = this.state;
		switch(_g[1]) {
		case 0:
			var cmf = this.input.readByte();
			var cm = cmf & 15;
			var cinfo = cmf >> 4;
			if(cm != 8) {
				throw new js__$Boot_HaxeError("Invalid data");
			}
			var flg = this.input.readByte();
			var fdict = (flg & 32) != 0;
			if(((cmf << 8) + flg) % 31 != 0) {
				throw new js__$Boot_HaxeError("Invalid data");
			}
			if(fdict) {
				throw new js__$Boot_HaxeError("Unsupported dictionary");
			}
			this.state = haxe_zip__$InflateImpl_State.Block;
			return true;
		case 1:
			this["final"] = this.getBit();
			var _g1 = this.getBits(2);
			switch(_g1) {
			case 0:
				this.len = this.input.readUInt16();
				var nlen = this.input.readUInt16();
				if(nlen != 65535 - this.len) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.state = haxe_zip__$InflateImpl_State.Flat;
				var r = this.inflateLoop();
				this.resetBits();
				return r;
			case 1:
				this.huffman = this.buildFixedHuffman();
				this.huffdist = null;
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			case 2:
				var hlit = this.getBits(5) + 257;
				var hdist = this.getBits(5) + 1;
				var hclen = this.getBits(4) + 4;
				var _g11 = 0;
				var _g2 = hclen;
				while(_g11 < _g2) {
					var i = _g11++;
					this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[i]] = this.getBits(3);
				}
				var _g3 = hclen;
				while(_g3 < 19) {
					var i1 = _g3++;
					this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[i1]] = 0;
				}
				this.huffman = this.htools.make(this.lengths,0,19,8);
				var lengths = [];
				var _g12 = 0;
				var _g4 = hlit + hdist;
				while(_g12 < _g4) {
					var i2 = _g12++;
					lengths.push(0);
				}
				this.inflateLengths(lengths,hlit + hdist);
				this.huffdist = this.htools.make(lengths,hlit,hdist,16);
				this.huffman = this.htools.make(lengths,0,hlit,16);
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
			break;
		case 2:
			var n = this.applyHuffman(this.huffman);
			if(n < 256) {
				this.addByte(n);
				return this.needed > 0;
			} else if(n == 256) {
				this.state = this["final"] ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
				return true;
			} else {
				n -= 257;
				var extra_bits = haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL[n];
				if(extra_bits == -1) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.len = haxe_zip_InflateImpl.LEN_BASE_VAL_TBL[n] + this.getBits(extra_bits);
				var dist_code = this.huffdist == null ? this.getRevBits(5) : this.applyHuffman(this.huffdist);
				extra_bits = haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL[dist_code];
				if(extra_bits == -1) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.dist = haxe_zip_InflateImpl.DIST_BASE_VAL_TBL[dist_code] + this.getBits(extra_bits);
				if(this.dist > this.window.available()) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.state = this.dist == 1 ? haxe_zip__$InflateImpl_State.DistOne : haxe_zip__$InflateImpl_State.Dist;
				return true;
			}
			break;
		case 3:
			var rlen = this.len < this.needed ? this.len : this.needed;
			var bytes = this.input.read(rlen);
			this.len -= rlen;
			this.addBytes(bytes,0,rlen);
			if(this.len == 0) {
				this.state = this["final"] ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
			}
			return this.needed > 0;
		case 4:
			var calc = this.window.checksum();
			if(calc == null) {
				this.state = haxe_zip__$InflateImpl_State.Done;
				return true;
			}
			var crc = haxe_crypto_Adler32.read(this.input);
			if(!calc.equals(crc)) {
				throw new js__$Boot_HaxeError("Invalid CRC");
			}
			this.state = haxe_zip__$InflateImpl_State.Done;
			return true;
		case 5:
			while(this.len > 0 && this.needed > 0) {
				var rdist = this.len < this.dist ? this.len : this.dist;
				var rlen1 = this.needed < rdist ? this.needed : rdist;
				this.addDist(this.dist,rlen1);
				this.len -= rlen1;
			}
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 6:
			var rlen2 = this.len < this.needed ? this.len : this.needed;
			this.addDistOne(rlen2);
			this.len -= rlen2;
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 7:
			return false;
		}
	}
	,__class__: haxe_zip_InflateImpl
};
var haxe_zip_Reader = function(i) {
	this.i = i;
};
$hxClasses["haxe.zip.Reader"] = haxe_zip_Reader;
haxe_zip_Reader.__name__ = true;
haxe_zip_Reader.readZip = function(i) {
	var r = new haxe_zip_Reader(i);
	return r.read();
};
haxe_zip_Reader.unzip = function(f) {
	if(!f.compressed) {
		return f.data;
	}
	var c = new haxe_zip_Uncompress(-15);
	var s = new haxe_io_Bytes(new ArrayBuffer(f.fileSize));
	var r = c.execute(f.data,0,s,0);
	c.close();
	if(!r.done || r.read != f.data.length || r.write != f.fileSize) {
		throw new js__$Boot_HaxeError("Invalid compressed data for " + f.fileName);
	}
	f.compressed = false;
	f.dataSize = f.fileSize;
	f.data = s;
	return f.data;
};
haxe_zip_Reader.prototype = {
	readZipDate: function() {
		var t = this.i.readUInt16();
		var hour = t >> 11 & 31;
		var min = t >> 5 & 63;
		var sec = t & 31;
		var d = this.i.readUInt16();
		var year = d >> 9;
		var month = d >> 5 & 15;
		var day = d & 31;
		return new Date(year + 1980,month - 1,day,hour,min,sec << 1);
	}
	,readExtraFields: function(length) {
		var fields = new List();
		while(length > 0) {
			if(length < 4) {
				throw new js__$Boot_HaxeError("Invalid extra fields data");
			}
			var tag = this.i.readUInt16();
			var len = this.i.readUInt16();
			if(length < len) {
				throw new js__$Boot_HaxeError("Invalid extra fields data");
			}
			if(tag == 28789) {
				var version = this.i.readByte();
				if(version != 1) {
					var data = new haxe_io_BytesBuffer();
					data.b.push(version);
					var src = this.i.read(len - 1);
					var b1 = data.b;
					var b2 = src.b;
					var _g1 = 0;
					var _g = src.length;
					while(_g1 < _g) {
						var i = _g1++;
						data.b.push(b2[i]);
					}
					fields.add(haxe_zip_ExtraField.FUnknown(tag,data.getBytes()));
				} else {
					var crc = this.i.readInt32();
					var name = this.i.read(len - 5).toString();
					fields.add(haxe_zip_ExtraField.FInfoZipUnicodePath(name,crc));
				}
			} else {
				fields.add(haxe_zip_ExtraField.FUnknown(tag,this.i.read(len)));
			}
			length -= 4 + len;
		}
		return fields;
	}
	,readEntryHeader: function() {
		var i = this.i;
		var h = i.readInt32();
		if(h == 33639248 || h == 101010256) {
			return null;
		}
		if(h != 67324752) {
			throw new js__$Boot_HaxeError("Invalid Zip Data");
		}
		var version = i.readUInt16();
		var flags = i.readUInt16();
		var utf8 = (flags & 2048) != 0;
		if((flags & 63473) != 0) {
			throw new js__$Boot_HaxeError("Unsupported flags " + flags);
		}
		var compression = i.readUInt16();
		var compressed = compression != 0;
		if(compressed && compression != 8) {
			throw new js__$Boot_HaxeError("Unsupported compression " + compression);
		}
		var mtime = this.readZipDate();
		var crc32 = i.readInt32();
		var csize = i.readInt32();
		var usize = i.readInt32();
		var fnamelen = i.readInt16();
		var elen = i.readInt16();
		var fname = i.readString(fnamelen);
		var fields = this.readExtraFields(elen);
		if(utf8) {
			fields.push(haxe_zip_ExtraField.FUtf8);
		}
		var data = null;
		if((flags & 8) != 0) {
			crc32 = null;
		}
		return { fileName : fname, fileSize : usize, fileTime : mtime, compressed : compressed, dataSize : csize, data : data, crc32 : crc32, extraFields : fields};
	}
	,read: function() {
		var l = new List();
		var buf = null;
		var tmp = null;
		while(true) {
			var e = this.readEntryHeader();
			if(e == null) {
				break;
			}
			if(e.crc32 == null) {
				if(e.compressed) {
					var bufSize = 65536;
					if(tmp == null) {
						tmp = new haxe_io_Bytes(new ArrayBuffer(bufSize));
					}
					var out = new haxe_io_BytesBuffer();
					var z = new haxe_zip_InflateImpl(this.i,false,false);
					while(true) {
						var n = z.readBytes(tmp,0,bufSize);
						if(n < 0 || n > tmp.length) {
							throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
						}
						var b1 = out.b;
						var b2 = tmp.b;
						var _g1 = 0;
						var _g = n;
						while(_g1 < _g) {
							var i = _g1++;
							out.b.push(b2[i]);
						}
						if(n < bufSize) {
							break;
						}
					}
					e.data = out.getBytes();
				} else {
					e.data = this.i.read(e.dataSize);
				}
				e.crc32 = this.i.readInt32();
				if(e.crc32 == 134695760) {
					e.crc32 = this.i.readInt32();
				}
				e.dataSize = this.i.readInt32();
				e.fileSize = this.i.readInt32();
				e.dataSize = e.fileSize;
				e.compressed = false;
			} else {
				e.data = this.i.read(e.dataSize);
			}
			l.add(e);
		}
		return l;
	}
	,__class__: haxe_zip_Reader
};
var haxe_zip_Uncompress = function(windowBits) {
	throw new js__$Boot_HaxeError("Not implemented for this platform");
};
$hxClasses["haxe.zip.Uncompress"] = haxe_zip_Uncompress;
haxe_zip_Uncompress.__name__ = true;
haxe_zip_Uncompress.prototype = {
	execute: function(src,srcPos,dst,dstPos) {
		return null;
	}
	,close: function() {
	}
	,__class__: haxe_zip_Uncompress
};
var iron_App = function(_appReady) {
	_appReady();
	kha_System.notifyOnRender(iron_App.render);
	kha_Scheduler.addTimeTask(iron_App.update,0,0.0166666666666666664 * iron_system_Time.scale);
};
$hxClasses["iron.App"] = iron_App;
iron_App.__name__ = true;
iron_App.init = function(_appReady) {
	new iron_App(_appReady);
};
iron_App.update = function() {
	if(iron_App.pauseUpdates) {
		return;
	}
	iron_system_Tween.update();
	iron_system_Time.update();
	if(iron_Scene.active != null) {
		iron_Scene.active.updateFrame();
	}
	if(iron_App.traitInits.length > 0) {
		var _g = 0;
		var _g1 = iron_App.traitInits;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(iron_App.traitInits.length == 0) {
				break;
			}
			f();
		}
		iron_App.traitInits.splice(0,iron_App.traitInits.length);
	}
	var i = 0;
	var l = iron_App.traitUpdates.length;
	while(i < l) {
		iron_App.traitUpdates[i]();
		if(l == iron_App.traitUpdates.length) {
			++i;
		} else {
			l = iron_App.traitUpdates.length;
		}
	}
	i = 0;
	l = iron_App.traitLateUpdates.length;
	while(i < l) {
		iron_App.traitLateUpdates[i]();
		if(l == iron_App.traitLateUpdates.length) {
			++i;
		} else {
			l = iron_App.traitLateUpdates.length;
		}
	}
	iron_system_Input.endFrame();
};
iron_App.render = function(frame) {
	if(iron_App.traitInits.length > 0) {
		var _g = 0;
		var _g1 = iron_App.traitInits;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(iron_App.traitInits.length == 0) {
				break;
			}
			f();
		}
		iron_App.traitInits.splice(0,iron_App.traitInits.length);
	}
	if(iron_Scene.active != null) {
		iron_Scene.active.renderFrame(frame.get_g4());
	}
	var _g2 = 0;
	var _g11 = iron_App.traitRenders;
	while(_g2 < _g11.length) {
		var f1 = _g11[_g2];
		++_g2;
		if(iron_App.traitRenders.length == 0) {
			break;
		}
		f1(frame.get_g4());
	}
	frame.get_g2().begin(false);
	var _g3 = 0;
	var _g12 = iron_App.traitRenders2D;
	while(_g3 < _g12.length) {
		var f2 = _g12[_g3];
		++_g3;
		if(iron_App.traitRenders2D.length == 0) {
			break;
		}
		f2(frame.get_g2());
	}
	frame.get_g2().end();
};
iron_App.removeInit = function(f) {
	HxOverrides.remove(iron_App.traitInits,f);
};
iron_App.removeUpdate = function(f) {
	HxOverrides.remove(iron_App.traitUpdates,f);
};
iron_App.removeLateUpdate = function(f) {
	HxOverrides.remove(iron_App.traitLateUpdates,f);
};
iron_App.removeRender = function(f) {
	HxOverrides.remove(iron_App.traitRenders,f);
};
iron_App.notifyOnRender2D = function(f) {
	iron_App.traitRenders2D.push(f);
};
iron_App.removeRender2D = function(f) {
	HxOverrides.remove(iron_App.traitRenders2D,f);
};
iron_App.prototype = {
	__class__: iron_App
};
var kha_math_FastMatrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = true;
kha_math_FastMatrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	var tx = -(right + left) / (right - left);
	var ty = -(top + bottom) / (top - bottom);
	var tz = -(zf + zn) / (zf - zn);
	return new kha_math_FastMatrix4(2 / (right - left),0,0,tx,0,2 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
};
kha_math_FastMatrix4.prototype = {
	__class__: kha_math_FastMatrix4
};
var iron_math_Vec4 = function(x,y,z,w) {
	if(w == null) {
		w = 1.0;
	}
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["iron.math.Vec4"] = iron_math_Vec4;
iron_math_Vec4.__name__ = true;
iron_math_Vec4.lerp = function(v1,v2,t) {
	var target = new iron_math_Vec4();
	target.x = v2.x + (v1.x - v2.x) * t;
	target.y = v2.y + (v1.y - v2.y) * t;
	target.z = v2.z + (v1.z - v2.z) * t;
	return target;
};
iron_math_Vec4.distance3d = function(v1,v2) {
	var vx = v1.x - v2.x;
	var vy = v1.y - v2.y;
	var vz = v1.z - v2.z;
	return Math.sqrt(vx * vx + vy * vy + vz * vz);
};
iron_math_Vec4.distance3df = function(v1x,v1y,v1z,v2x,v2y,v2z) {
	var vx = v1x - v2x;
	var vy = v1y - v2y;
	var vz = v1z - v2z;
	return Math.sqrt(vx * vx + vy * vy + vz * vz);
};
iron_math_Vec4.xAxis = function() {
	return new iron_math_Vec4(1.0,0.0,0.0);
};
iron_math_Vec4.yAxis = function() {
	return new iron_math_Vec4(0.0,1.0,0.0);
};
iron_math_Vec4.zAxis = function() {
	return new iron_math_Vec4(0.0,0.0,1.0);
};
iron_math_Vec4.prototype = {
	set: function(x,y,z,w) {
		if(w == null) {
			w = 1.0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
		return this;
	}
	,addvecs: function(a,b) {
		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;
		return this;
	}
	,mult: function(f) {
		this.x *= f;
		this.y *= f;
		this.z *= f;
		return this;
	}
	,__class__: iron_math_Vec4
};
var iron_math_Mat4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this.self = new kha_math_FastMatrix4(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
};
$hxClasses["iron.math.Mat4"] = iron_math_Mat4;
iron_math_Mat4.__name__ = true;
iron_math_Mat4.identity = function() {
	return new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
};
iron_math_Mat4.fromFloat32Array = function(a,offset) {
	if(offset == null) {
		offset = 0;
	}
	return new iron_math_Mat4(a[offset],a[1 + offset],a[2 + offset],a[3 + offset],a[4 + offset],a[5 + offset],a[6 + offset],a[7 + offset],a[8 + offset],a[9 + offset],a[10 + offset],a[11 + offset],a[12 + offset],a[13 + offset],a[14 + offset],a[15 + offset]);
};
iron_math_Mat4.perspective = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	var uw = uh / aspect;
	return new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
iron_math_Mat4.orthogonal = function(left,right,bottom,top,near,far,orthoScale) {
	if(orthoScale == null) {
		orthoScale = 2;
	}
	var w = right - left;
	var h = top - bottom;
	var p = far - near;
	var x = (right + left) / w;
	var y = (top + bottom) / h;
	var z = (far + near) / p;
	return new iron_math_Mat4(orthoScale / w,0,0,-x,0,orthoScale / h,0,-y,0,0,-orthoScale / p,-z,0,0,0,1);
};
iron_math_Mat4.prototype = {
	compose: function(location,quaternion,sc) {
		this.fromQuaternion(quaternion);
		this.scale(sc);
		this.setLocation(location);
		return this;
	}
	,decompose: function(location,quaternion,scale) {
		iron_math_Mat4.helpVec.w = 0.0;
		var _this = iron_math_Mat4.helpVec.set(this.self._00,this.self._01,this.self._02);
		var sx = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		var _this1 = iron_math_Mat4.helpVec.set(this.self._10,this.self._11,this.self._12);
		var sy = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		var _this2 = iron_math_Mat4.helpVec.set(this.self._20,this.self._21,this.self._22);
		var sz = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this3 = this.self;
		var m3 = _this3._12;
		var m4 = _this3._22;
		var m5 = _this3._32;
		var m6 = _this3._13;
		var m7 = _this3._23;
		var m8 = _this3._33;
		var c00 = _this3._11 * (m4 * m8 - m5 * m7) - _this3._21 * (m3 * m8 - m5 * m6) + _this3._31 * (m3 * m7 - m4 * m6);
		var m31 = _this3._12;
		var m41 = _this3._22;
		var m51 = _this3._32;
		var m61 = _this3._13;
		var m71 = _this3._23;
		var m81 = _this3._33;
		var c01 = _this3._10 * (m41 * m81 - m51 * m71) - _this3._20 * (m31 * m81 - m51 * m61) + _this3._30 * (m31 * m71 - m41 * m61);
		var m32 = _this3._11;
		var m42 = _this3._21;
		var m52 = _this3._31;
		var m62 = _this3._13;
		var m72 = _this3._23;
		var m82 = _this3._33;
		var c02 = _this3._10 * (m42 * m82 - m52 * m72) - _this3._20 * (m32 * m82 - m52 * m62) + _this3._30 * (m32 * m72 - m42 * m62);
		var m33 = _this3._11;
		var m43 = _this3._21;
		var m53 = _this3._31;
		var m63 = _this3._12;
		var m73 = _this3._22;
		var m83 = _this3._32;
		var c03 = _this3._10 * (m43 * m83 - m53 * m73) - _this3._20 * (m33 * m83 - m53 * m63) + _this3._30 * (m33 * m73 - m43 * m63);
		var det = _this3._00 * c00 - _this3._01 * c01 + _this3._02 * c02 - _this3._03 * c03;
		if(det < 0.0) {
			sx = -sx;
		}
		location.x = this.self._30;
		location.y = this.self._31;
		location.z = this.self._32;
		iron_math_Mat4.helpMat.self._00 = this.self._00;
		iron_math_Mat4.helpMat.self._10 = this.self._10;
		iron_math_Mat4.helpMat.self._20 = this.self._20;
		iron_math_Mat4.helpMat.self._30 = this.self._30;
		iron_math_Mat4.helpMat.self._01 = this.self._01;
		iron_math_Mat4.helpMat.self._11 = this.self._11;
		iron_math_Mat4.helpMat.self._21 = this.self._21;
		iron_math_Mat4.helpMat.self._31 = this.self._31;
		iron_math_Mat4.helpMat.self._02 = this.self._02;
		iron_math_Mat4.helpMat.self._12 = this.self._12;
		iron_math_Mat4.helpMat.self._22 = this.self._22;
		iron_math_Mat4.helpMat.self._32 = this.self._32;
		iron_math_Mat4.helpMat.self._03 = this.self._03;
		iron_math_Mat4.helpMat.self._13 = this.self._13;
		iron_math_Mat4.helpMat.self._23 = this.self._23;
		iron_math_Mat4.helpMat.self._33 = this.self._33;
		var invSX = 1.0 / sx;
		var invSY = 1.0 / sy;
		var invSZ = 1.0 / sz;
		var _g = iron_math_Mat4.helpMat;
		_g.self._00 *= invSX;
		var _g1 = iron_math_Mat4.helpMat;
		_g1.self._01 *= invSX;
		var _g2 = iron_math_Mat4.helpMat;
		_g2.self._02 *= invSX;
		iron_math_Mat4.helpMat.self._03 = 0.0;
		var _g3 = iron_math_Mat4.helpMat;
		_g3.self._10 *= invSY;
		var _g4 = iron_math_Mat4.helpMat;
		_g4.self._11 *= invSY;
		var _g5 = iron_math_Mat4.helpMat;
		_g5.self._12 *= invSY;
		iron_math_Mat4.helpMat.self._13 = 0.0;
		var _g6 = iron_math_Mat4.helpMat;
		_g6.self._20 *= invSZ;
		var _g7 = iron_math_Mat4.helpMat;
		_g7.self._21 *= invSZ;
		var _g8 = iron_math_Mat4.helpMat;
		_g8.self._22 *= invSZ;
		iron_math_Mat4.helpMat.self._23 = 0.0;
		iron_math_Mat4.helpMat.self._30 = 0.0;
		iron_math_Mat4.helpMat.self._31 = 0.0;
		iron_math_Mat4.helpMat.self._32 = 0.0;
		iron_math_Mat4.helpMat.self._33 = 0.0;
		quaternion.fromRotationMat(iron_math_Mat4.helpMat);
		scale.x = sx;
		scale.y = sy;
		scale.z = sz;
		return this;
	}
	,setLocation: function(v) {
		this.self._30 = v.x;
		this.self._31 = v.y;
		this.self._32 = v.z;
		return this;
	}
	,fromQuaternion: function(q) {
		var x = q.x;
		var y = q.y;
		var z = q.z;
		var w = q.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		this.self._00 = 1.0 - (yy + zz);
		this.self._10 = xy - wz;
		this.self._20 = xz + wy;
		this.self._01 = xy + wz;
		this.self._11 = 1.0 - (xx + zz);
		this.self._21 = yz - wx;
		this.self._02 = xz - wy;
		this.self._12 = yz + wx;
		this.self._22 = 1.0 - (xx + yy);
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	,setIdentity: function() {
		this.self._00 = 1.0;
		this.self._01 = 0.0;
		this.self._02 = 0.0;
		this.self._03 = 0.0;
		this.self._10 = 0.0;
		this.self._11 = 1.0;
		this.self._12 = 0.0;
		this.self._13 = 0.0;
		this.self._20 = 0.0;
		this.self._21 = 0.0;
		this.self._22 = 1.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	,initTranslate: function(x,y,z) {
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		this.self._00 = 1.0;
		this.self._01 = 0.0;
		this.self._02 = 0.0;
		this.self._03 = 0.0;
		this.self._10 = 0.0;
		this.self._11 = 1.0;
		this.self._12 = 0.0;
		this.self._13 = 0.0;
		this.self._20 = 0.0;
		this.self._21 = 0.0;
		this.self._22 = 1.0;
		this.self._23 = 0.0;
		this.self._30 = x;
		this.self._31 = y;
		this.self._32 = z;
		this.self._33 = 1.0;
	}
	,scale: function(v) {
		var _g = this;
		_g.self._00 *= v.x;
		var _g1 = this;
		_g1.self._01 *= v.x;
		var _g2 = this;
		_g2.self._02 *= v.x;
		var _g3 = this;
		_g3.self._03 *= v.x;
		var _g4 = this;
		_g4.self._10 *= v.y;
		var _g5 = this;
		_g5.self._11 *= v.y;
		var _g6 = this;
		_g6.self._12 *= v.y;
		var _g7 = this;
		_g7.self._13 *= v.y;
		var _g8 = this;
		_g8.self._20 *= v.z;
		var _g9 = this;
		_g9.self._21 *= v.z;
		var _g10 = this;
		_g10.self._22 *= v.z;
		var _g11 = this;
		_g11.self._23 *= v.z;
	}
	,multmat3x4: function(a,b) {
		var m11 = a.self._00;
		var m12 = a.self._01;
		var m13 = a.self._02;
		var m21 = a.self._10;
		var m22 = a.self._11;
		var m23 = a.self._12;
		var a31 = a.self._20;
		var a32 = a.self._21;
		var a33 = a.self._22;
		var a41 = a.self._30;
		var a42 = a.self._31;
		var a43 = a.self._32;
		var b11 = b.self._00;
		var b12 = b.self._01;
		var b13 = b.self._02;
		var b21 = b.self._10;
		var b22 = b.self._11;
		var b23 = b.self._12;
		var b31 = b.self._20;
		var b32 = b.self._21;
		var b33 = b.self._22;
		var b41 = b.self._30;
		var b42 = b.self._31;
		var b43 = b.self._32;
		this.self._00 = m11 * b11 + m12 * b21 + m13 * b31;
		this.self._01 = m11 * b12 + m12 * b22 + m13 * b32;
		this.self._02 = m11 * b13 + m12 * b23 + m13 * b33;
		this.self._03 = 0.0;
		this.self._10 = m21 * b11 + m22 * b21 + m23 * b31;
		this.self._11 = m21 * b12 + m22 * b22 + m23 * b32;
		this.self._12 = m21 * b13 + m22 * b23 + m23 * b33;
		this.self._13 = 0.0;
		this.self._20 = a31 * b11 + a32 * b21 + a33 * b31;
		this.self._21 = a31 * b12 + a32 * b22 + a33 * b32;
		this.self._22 = a31 * b13 + a32 * b23 + a33 * b33;
		this.self._23 = 0.0;
		this.self._30 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
		this.self._31 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
		this.self._32 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
		this.self._33 = 1.0;
	}
	,multmat2: function(m) {
		var a11 = this.self._00;
		var a12 = this.self._01;
		var a13 = this.self._02;
		var a14 = this.self._03;
		var a21 = this.self._10;
		var a22 = this.self._11;
		var a23 = this.self._12;
		var a24 = this.self._13;
		var a31 = this.self._20;
		var a32 = this.self._21;
		var a33 = this.self._22;
		var a34 = this.self._23;
		var a41 = this.self._30;
		var a42 = this.self._31;
		var a43 = this.self._32;
		var a44 = this.self._33;
		var b11 = m.self._00;
		var b12 = m.self._01;
		var b13 = m.self._02;
		var b14 = m.self._03;
		var b21 = m.self._10;
		var b22 = m.self._11;
		var b23 = m.self._12;
		var b24 = m.self._13;
		var b31 = m.self._20;
		var b32 = m.self._21;
		var b33 = m.self._22;
		var b34 = m.self._23;
		var b41 = m.self._30;
		var b42 = m.self._31;
		var b43 = m.self._32;
		var b44 = m.self._33;
		this.self._00 = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		this.self._01 = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		this.self._02 = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		this.self._03 = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		this.self._10 = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		this.self._11 = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		this.self._12 = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		this.self._13 = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		this.self._20 = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		this.self._21 = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		this.self._22 = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		this.self._23 = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		this.self._30 = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		this.self._31 = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		this.self._32 = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		this.self._33 = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		return this;
	}
	,multmats: function(a,b) {
		var a11 = a.self._00;
		var a12 = a.self._10;
		var a13 = a.self._20;
		var a14 = a.self._30;
		var a21 = a.self._01;
		var a22 = a.self._11;
		var a23 = a.self._21;
		var a24 = a.self._31;
		var a31 = a.self._02;
		var a32 = a.self._12;
		var a33 = a.self._22;
		var a34 = a.self._32;
		var a41 = a.self._03;
		var a42 = a.self._13;
		var a43 = a.self._23;
		var a44 = a.self._33;
		var b11 = b.self._00;
		var b12 = b.self._10;
		var b13 = b.self._20;
		var b14 = b.self._30;
		var b21 = b.self._01;
		var b22 = b.self._11;
		var b23 = b.self._21;
		var b24 = b.self._31;
		var b31 = b.self._02;
		var b32 = b.self._12;
		var b33 = b.self._22;
		var b34 = b.self._32;
		var b41 = b.self._03;
		var b42 = b.self._13;
		var b43 = b.self._23;
		var b44 = b.self._33;
		this.self._00 = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		this.self._10 = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		this.self._20 = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		this.self._30 = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		this.self._01 = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		this.self._11 = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		this.self._21 = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		this.self._31 = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		this.self._02 = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		this.self._12 = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		this.self._22 = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		this.self._32 = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		this.self._03 = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		this.self._13 = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		this.self._23 = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		this.self._33 = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		return this;
	}
	,getInverse: function(m) {
		var n11 = m.self._00;
		var n12 = m.self._10;
		var n13 = m.self._20;
		var n14 = m.self._30;
		var n21 = m.self._01;
		var n22 = m.self._11;
		var n23 = m.self._21;
		var n24 = m.self._31;
		var n31 = m.self._02;
		var n32 = m.self._12;
		var n33 = m.self._22;
		var n34 = m.self._32;
		var n41 = m.self._03;
		var n42 = m.self._13;
		var n43 = m.self._23;
		var n44 = m.self._33;
		this.self._00 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;
		this.self._10 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;
		this.self._20 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;
		this.self._30 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
		this.self._01 = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;
		this.self._11 = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;
		this.self._21 = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;
		this.self._31 = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;
		this.self._02 = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;
		this.self._12 = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;
		this.self._22 = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;
		this.self._32 = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;
		this.self._03 = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;
		this.self._13 = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;
		this.self._23 = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;
		this.self._33 = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;
		var det = n11 * this.self._00 + n21 * this.self._10 + n31 * this.self._20 + n41 * this.self._30;
		if(det == 0.0) {
			return this.setIdentity();
		}
		this.mult(1.0 / det);
		return this;
	}
	,setF32: function(a,offset) {
		if(offset == null) {
			offset = 0;
		}
		this.self._00 = a[offset];
		this.self._10 = a[1 + offset];
		this.self._20 = a[2 + offset];
		this.self._30 = a[3 + offset];
		this.self._01 = a[4 + offset];
		this.self._11 = a[5 + offset];
		this.self._21 = a[6 + offset];
		this.self._31 = a[7 + offset];
		this.self._02 = a[8 + offset];
		this.self._12 = a[9 + offset];
		this.self._22 = a[10 + offset];
		this.self._32 = a[11 + offset];
		this.self._03 = a[12 + offset];
		this.self._13 = a[13 + offset];
		this.self._23 = a[14 + offset];
		this.self._33 = a[15 + offset];
	}
	,setFrom: function(m) {
		this.self._00 = m.self._00;
		this.self._01 = m.self._01;
		this.self._02 = m.self._02;
		this.self._03 = m.self._03;
		this.self._10 = m.self._10;
		this.self._11 = m.self._11;
		this.self._12 = m.self._12;
		this.self._13 = m.self._13;
		this.self._20 = m.self._20;
		this.self._21 = m.self._21;
		this.self._22 = m.self._22;
		this.self._23 = m.self._23;
		this.self._30 = m.self._30;
		this.self._31 = m.self._31;
		this.self._32 = m.self._32;
		this.self._33 = m.self._33;
	}
	,getScale: function() {
		return new iron_math_Vec4(Math.sqrt(this.self._00 * this.self._00 + this.self._10 * this.self._10 + this.self._20 * this.self._20),Math.sqrt(this.self._01 * this.self._01 + this.self._11 * this.self._11 + this.self._21 * this.self._21),Math.sqrt(this.self._02 * this.self._02 + this.self._12 * this.self._12 + this.self._22 * this.self._22));
	}
	,mult: function(s) {
		var _g = this;
		_g.self._00 *= s;
		var _g1 = this;
		_g1.self._10 *= s;
		var _g2 = this;
		_g2.self._20 *= s;
		var _g3 = this;
		_g3.self._30 *= s;
		var _g4 = this;
		_g4.self._01 *= s;
		var _g5 = this;
		_g5.self._11 *= s;
		var _g6 = this;
		_g6.self._21 *= s;
		var _g7 = this;
		_g7.self._31 *= s;
		var _g8 = this;
		_g8.self._02 *= s;
		var _g9 = this;
		_g9.self._12 *= s;
		var _g10 = this;
		_g10.self._22 *= s;
		var _g11 = this;
		_g11.self._32 *= s;
		var _g12 = this;
		_g12.self._03 *= s;
		var _g13 = this;
		_g13.self._13 *= s;
		var _g14 = this;
		_g14.self._23 *= s;
		var _g15 = this;
		_g15.self._33 *= s;
		return this;
	}
	,__class__: iron_math_Mat4
};
var iron_RenderPath = function() {
	this.depthToRenderTarget = new haxe_ds_StringMap();
	this.renderTargets = new haxe_ds_StringMap();
	this.commands = null;
	this.loading = 0;
	this.currentLampIndex = 0;
	this.lastH = 0;
	this.lastW = 0;
};
$hxClasses["iron.RenderPath"] = iron_RenderPath;
iron_RenderPath.__name__ = true;
iron_RenderPath.prototype = {
	get_ready: function() {
		return this.loading == 0;
	}
	,renderFrame: function(g) {
		if(!this.get_ready()) {
			return;
		}
		if(this.lastW > 0 && (this.lastW != kha_System.windowWidth() || this.lastH != kha_System.windowHeight())) {
			this.resize();
		}
		this.lastW = kha_System.windowWidth();
		this.lastH = kha_System.windowHeight();
		this.frameG = iron_Scene.active.camera.data.mirror == null ? g : iron_Scene.active.camera.data.mirror.get_g4();
		this.currentG = this.frameG;
		this.currentW = kha_System.windowWidth();
		this.currentH = kha_System.windowHeight();
		this.currentD = 1;
		this.currentCube = false;
		this.currentFace = -1;
		this.meshesSorted = false;
		this.currentLampIndex = 0;
		var _g = 0;
		var _g1 = iron_Scene.active.lamps;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(l.visible) {
				l.buildMatrices(iron_Scene.active.camera);
			}
		}
		this.commands();
	}
	,resize: function() {
		var _this = this.renderTargets;
		var rt = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(rt.hasNext()) {
			var rt1 = rt.next();
			if(rt1.raw.width == 0) {
				rt1.image.unload();
				rt1.image = this.createImage(rt1.raw,rt1.depthStencil);
				if(rt1.depthStencilFrom != "") {
					var key = rt1.depthStencilFrom;
					var _this1 = this.depthToRenderTarget;
					rt1.image.setDepthStencilFrom((__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).image);
				}
			}
		}
	}
	,createImage: function(t,depthStencil) {
		var width = t.width == 0 ? kha_System.windowWidth() : t.width;
		var height = t.height == 0 ? kha_System.windowHeight() : t.height;
		var depth = t.depth != null ? t.depth : 0;
		if(t.displayp != null) {
			if(width > height) {
				height = height * (t.displayp / width) | 0;
				width = t.displayp;
			} else {
				width = width * (t.displayp / height) | 0;
				height = t.displayp;
			}
		}
		if(t.scale != null) {
			width = width * t.scale | 0;
			height = height * t.scale | 0;
			depth = depth * t.scale | 0;
		}
		if(t.depth != null && t.depth > 1) {
			var tmp;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					tmp = kha_graphics4_TextureFormat.A16;
					break;
				case "A32":
					tmp = kha_graphics4_TextureFormat.A32;
					break;
				case "A8":
					tmp = kha_graphics4_TextureFormat.L8;
					break;
				case "DEPTH16":
					tmp = kha_graphics4_TextureFormat.DEPTH16;
					break;
				case "R16":
					tmp = kha_graphics4_TextureFormat.A16;
					break;
				case "R32":
					tmp = kha_graphics4_TextureFormat.A32;
					break;
				case "R8":
					tmp = kha_graphics4_TextureFormat.L8;
					break;
				case "RGBA128":
					tmp = kha_graphics4_TextureFormat.RGBA128;
					break;
				case "RGBA32":
					tmp = kha_graphics4_TextureFormat.RGBA32;
					break;
				case "RGBA64":
					tmp = kha_graphics4_TextureFormat.RGBA64;
					break;
				default:
					tmp = kha_graphics4_TextureFormat.RGBA32;
				}
			} else {
				tmp = kha_graphics4_TextureFormat.RGBA32;
			}
			return kha_Image.create3D(width,height,depth,tmp);
		} else if(t.is_image != null && t.is_image) {
			var tmp1;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					tmp1 = kha_graphics4_TextureFormat.A16;
					break;
				case "A32":
					tmp1 = kha_graphics4_TextureFormat.A32;
					break;
				case "A8":
					tmp1 = kha_graphics4_TextureFormat.L8;
					break;
				case "DEPTH16":
					tmp1 = kha_graphics4_TextureFormat.DEPTH16;
					break;
				case "R16":
					tmp1 = kha_graphics4_TextureFormat.A16;
					break;
				case "R32":
					tmp1 = kha_graphics4_TextureFormat.A32;
					break;
				case "R8":
					tmp1 = kha_graphics4_TextureFormat.L8;
					break;
				case "RGBA128":
					tmp1 = kha_graphics4_TextureFormat.RGBA128;
					break;
				case "RGBA32":
					tmp1 = kha_graphics4_TextureFormat.RGBA32;
					break;
				case "RGBA64":
					tmp1 = kha_graphics4_TextureFormat.RGBA64;
					break;
				default:
					tmp1 = kha_graphics4_TextureFormat.RGBA32;
				}
			} else {
				tmp1 = kha_graphics4_TextureFormat.RGBA32;
			}
			return kha_Image.create(width,height,tmp1);
		} else {
			var tmp2;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					tmp2 = kha_graphics4_TextureFormat.A16;
					break;
				case "A32":
					tmp2 = kha_graphics4_TextureFormat.A32;
					break;
				case "A8":
					tmp2 = kha_graphics4_TextureFormat.L8;
					break;
				case "DEPTH16":
					tmp2 = kha_graphics4_TextureFormat.DEPTH16;
					break;
				case "R16":
					tmp2 = kha_graphics4_TextureFormat.A16;
					break;
				case "R32":
					tmp2 = kha_graphics4_TextureFormat.A32;
					break;
				case "R8":
					tmp2 = kha_graphics4_TextureFormat.L8;
					break;
				case "RGBA128":
					tmp2 = kha_graphics4_TextureFormat.RGBA128;
					break;
				case "RGBA32":
					tmp2 = kha_graphics4_TextureFormat.RGBA32;
					break;
				case "RGBA64":
					tmp2 = kha_graphics4_TextureFormat.RGBA64;
					break;
				default:
					tmp2 = kha_graphics4_TextureFormat.RGBA32;
				}
			} else {
				tmp2 = kha_graphics4_TextureFormat.RGBA32;
			}
			return kha_Image.createRenderTarget(width,height,tmp2,depthStencil);
		}
	}
	,__class__: iron_RenderPath
	,__properties__: {get_ready:"get_ready"}
};
var iron_RenderTargetRaw = function() {
	this.is_image = null;
	this.depth = null;
	this.displayp = null;
	this.scale = null;
	this.format = null;
};
$hxClasses["iron.RenderTargetRaw"] = iron_RenderTargetRaw;
iron_RenderTargetRaw.__name__ = true;
iron_RenderTargetRaw.prototype = {
	__class__: iron_RenderTargetRaw
};
var iron_RenderTarget = function() {
	this.image = null;
	this.depthStencilFrom = "";
};
$hxClasses["iron.RenderTarget"] = iron_RenderTarget;
iron_RenderTarget.__name__ = true;
iron_RenderTarget.prototype = {
	__class__: iron_RenderTarget
};
var iron_Scene = function() {
	this.traitInits = [];
	this.groups = null;
	this.meshBatch = null;
	this.meshes = [];
	this.lamps = [];
	this.cameras = [];
	this.speakers = [];
	this.decals = [];
	this.empties = [];
	this.animations = [];
	this.armatures = [];
	this.embedded = new haxe_ds_StringMap();
	this.root = new iron_object_Object();
	this.root.name = "Root";
	this.traitInits = [];
	if(iron_Scene.global == null) {
		iron_Scene.global = new iron_object_Object();
	}
};
$hxClasses["iron.Scene"] = iron_Scene;
iron_Scene.__name__ = true;
iron_Scene.create = function(format,done) {
	iron_Scene.active = new iron_Scene();
	iron_Scene.active.ready = false;
	iron_Scene.active.raw = format;
	iron_data_Data.getWorld(format.name,format.world_ref,function(world) {
		iron_Scene.active.world = world;
		iron_Scene.active.addScene(format.name,null,function(sceneObject) {
			if(iron_Scene.active.cameras.length == 0) {
				haxe_Log.trace("No camera found for scene \"" + format.name + "\"!",{ fileName : "Scene.hx", lineNumber : 91, className : "iron.Scene", methodName : "create"});
				done(null);
			}
			iron_Scene.active.camera = iron_Scene.active.getCamera(format.camera_ref);
			done(sceneObject);
			var _g = 0;
			var _g1 = iron_Scene.active.traitInits;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			iron_Scene.active.traitInits = [];
		});
	});
};
iron_Scene.setActive = function(sceneName,done) {
	if(!iron_Scene.framePassed) {
		return;
	}
	iron_Scene.framePassed = false;
	if(iron_Scene.active != null) {
		iron_Scene.active.remove();
	}
	iron_data_Data.getSceneRaw(sceneName,function(format) {
		iron_Scene.create(format,function(o) {
			if(done != null) {
				done(o);
			}
			iron_Scene.active.ready = true;
		});
	});
};
iron_Scene.generateTranform = function(object,transform) {
	transform.world = iron_math_Mat4.fromFloat32Array(object.transform.values);
	transform.world.decompose(transform.loc,transform.rot,transform.scale);
	if(object.local_transform_only != null) {
		transform.localOnly = object.local_transform_only;
	}
	if(transform.object.parent != null) {
		transform.update();
	}
};
iron_Scene.createTraits = function(traits,object) {
	if(traits == null) {
		return;
	}
	var _g = 0;
	while(_g < traits.length) {
		var t = traits[_g];
		++_g;
		if(t.type == "Script") {
			var args = [];
			if(t.parameters != null) {
				var _g1 = 0;
				var _g2 = t.parameters;
				while(_g1 < _g2.length) {
					var param = _g2[_g1];
					++_g1;
					args.push(iron_Scene.parseArg(param));
				}
			}
			var traitInst = iron_Scene.createTraitClassInstance(t.class_name,args);
			if(traitInst == null) {
				haxe_Log.trace("Error: Trait '" + t.class_name + "' referenced in object '" + object.name + "' not found",{ fileName : "Scene.hx", lineNumber : 575, className : "iron.Scene", methodName : "createTraits"});
				continue;
			}
			if(t.props != null) {
				var _g21 = 0;
				var _g11 = t.props.length / 2 | 0;
				while(_g21 < _g11) {
					var i = _g21++;
					var pname = t.props[i * 2];
					var pval = t.props[i * 2 + 1];
					if(pval != "") {
						Reflect.setProperty(traitInst,pname,iron_Scene.parseArg(pval));
					}
				}
			}
			object.addTrait(traitInst);
		}
	}
};
iron_Scene.parseArg = function(str) {
	if(str == "true") {
		return true;
	} else if(str == "false") {
		return false;
	} else if(str == "null") {
		return null;
	} else if(str.charAt(0) == "'") {
		return StringTools.replace(str,"'","");
	} else if(str.charAt(0) == "\"") {
		return StringTools.replace(str,"\"","");
	} else if(str.charAt(0) == "[") {
		str = StringTools.replace(str,"[","");
		str = StringTools.replace(str,"]","");
		str = StringTools.replace(str," ","");
		var ar = [];
		var s = str.split(",");
		var _g = 0;
		while(_g < s.length) {
			var childStr = s[_g];
			++_g;
			ar.push(iron_Scene.parseArg(childStr));
		}
		return ar;
	} else {
		var f = parseFloat(str);
		var i = Std.parseInt(str);
		if(f == i) {
			return i;
		} else {
			return f;
		}
	}
};
iron_Scene.createConstraints = function(constraints,object) {
	if(constraints == null) {
		return;
	}
	object.constraints = [];
	var _g = 0;
	while(_g < constraints.length) {
		var c = constraints[_g];
		++_g;
		var constr = new iron_object_Constraint(c);
		object.constraints.push(constr);
	}
};
iron_Scene.createTraitClassInstance = function(traitName,args) {
	var cname = Type.resolveClass(traitName);
	if(cname == null) {
		return null;
	}
	return Type.createInstance(cname,args);
};
iron_Scene.prototype = {
	remove: function() {
		if(this.meshBatch != null) {
			this.meshBatch.remove();
		}
		var _g = 0;
		var _g1 = this.meshes;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.remove();
		}
		var _g2 = 0;
		var _g11 = this.lamps;
		while(_g2 < _g11.length) {
			var o1 = _g11[_g2];
			++_g2;
			o1.remove();
		}
		var _g3 = 0;
		var _g12 = this.cameras;
		while(_g3 < _g12.length) {
			var o2 = _g12[_g3];
			++_g3;
			o2.remove();
		}
		var _g4 = 0;
		var _g13 = this.speakers;
		while(_g4 < _g13.length) {
			var o3 = _g13[_g4];
			++_g4;
			o3.remove();
		}
		var _g5 = 0;
		var _g14 = this.decals;
		while(_g5 < _g14.length) {
			var o4 = _g14[_g5];
			++_g5;
			o4.remove();
		}
		var _g6 = 0;
		var _g15 = this.empties;
		while(_g6 < _g15.length) {
			var o5 = _g15[_g6];
			++_g6;
			o5.remove();
		}
		this.groups = null;
		this.root.remove();
	}
	,updateFrame: function() {
		if(!this.ready) {
			return;
		}
		var _g = 0;
		var _g1 = this.animations;
		while(_g < _g1.length) {
			var anim = _g1[_g];
			++_g;
			anim.update(0.0166666666666666664 * iron_system_Time.scale);
		}
		var _g2 = 0;
		var _g11 = this.empties;
		while(_g2 < _g11.length) {
			var e = _g11[_g2];
			++_g2;
			if(e != null && e.parent != null) {
				e.transform.update();
			}
		}
	}
	,renderFrame: function(g) {
		if(!this.ready || iron_RenderPath.active == null) {
			return;
		}
		iron_Scene.framePassed = true;
		var activeCamera = this.camera;
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) {
			var cam = _g1[_g];
			++_g;
			if(cam.data.mirror != null) {
				this.camera = cam;
				this.camera.renderFrame(g);
			}
		}
		this.camera = activeCamera;
		this.camera.renderFrame(g);
	}
	,addObject: function(parent) {
		var object = new iron_object_Object();
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,getChild: function(name) {
		return this.root.getChild(name);
	}
	,getCamera: function(name) {
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.name == name) {
				return c;
			}
		}
		return null;
	}
	,addMeshObject: function(data,materials,parent) {
		var object = new iron_object_MeshObject(data,materials);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addLampObject: function(data,parent) {
		var object = new iron_object_LampObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addCameraObject: function(data,parent) {
		var object = new iron_object_CameraObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addSpeakerObject: function(data,parent) {
		var object = new iron_object_SpeakerObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addDecalObject: function(material,parent) {
		var object = new iron_object_DecalObject(material);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addScene: function(sceneName,parent,done) {
		var _gthis = this;
		if(parent == null) {
			parent = this.addObject();
			parent.name = sceneName;
		}
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			iron_Scene.createTraits(format.traits,parent);
			_gthis.loadEmbeddedData(format.embedded_datas,function() {
				var objectsTraversed = 0;
				var objectsCount = _gthis.getObjectsCount(format.objects);
				var traverseObjects = null;
				traverseObjects = function(parent1,objects,parentObject,done1) {
					if(objects == null) {
						return;
					}
					var _g1 = 0;
					var _g = objects.length;
					while(_g1 < _g) {
						var i = _g1++;
						var o = [objects[i]];
						if(o[0].spawn != null && o[0].spawn == false) {
							if((objectsTraversed += 1) == objectsCount) {
								done1();
							}
							continue;
						}
						var o1 = o[0];
						var traverseObjects1 = (function(o2) {
							return function(object) {
								if(object != null) {
									traverseObjects(object,o2[0].children,o2[0],done1);
								}
								if((objectsTraversed += 1) == objectsCount) {
									done1();
								}
							};
						})(o);
						_gthis.createObject(o1,format,parent1,parentObject,traverseObjects1);
					}
				};
				var traverseObjects2 = traverseObjects;
				traverseObjects2(parent,format.objects,null,function() {
					done(parent);
				});
			});
		});
	}
	,getObjectsCount: function(objects,discardNoSpawn) {
		if(discardNoSpawn == null) {
			discardNoSpawn = true;
		}
		var result = objects.length;
		var _g = 0;
		while(_g < objects.length) {
			var o = objects[_g];
			++_g;
			if(discardNoSpawn && o.spawn != null && o.spawn == false) {
				continue;
			}
			if(o.children != null) {
				result += this.getObjectsCount(o.children);
			}
		}
		return result;
	}
	,spawnObject: function(name,parent,done,spawnChildren) {
		if(spawnChildren == null) {
			spawnChildren = true;
		}
		var _gthis = this;
		var objectsTraversed = 0;
		var obj = this.getObj(this.raw,name);
		var objectsCount = spawnChildren ? this.getObjectsCount([obj],false) : 1;
		var spawnObjectTree = null;
		spawnObjectTree = function(obj1,parent1,done1) {
			_gthis.createObject(obj1,_gthis.raw,parent1,null,function(object) {
				if(spawnChildren && obj1.children != null) {
					var _g = 0;
					var _g1 = obj1.children;
					while(_g < _g1.length) {
						var child = _g1[_g];
						++_g;
						spawnObjectTree(child,object,done1);
					}
				}
				if((objectsTraversed += 1) == objectsCount) {
					done1(object);
				}
			});
		};
		var spawnObjectTree1 = spawnObjectTree;
		spawnObjectTree1(obj,parent,done);
	}
	,getObj: function(format,name) {
		return this.traverseObjs(format.objects,name);
	}
	,traverseObjs: function(children,name) {
		var _g = 0;
		while(_g < children.length) {
			var o = children[_g];
			++_g;
			if(o.name == name) {
				return o;
			}
			if(o.children != null) {
				var res = this.traverseObjs(o.children,name);
				if(res != null) {
					return res;
				}
			}
		}
		return null;
	}
	,createObject: function(o,format,parent,parentObject,done) {
		var _gthis = this;
		var sceneName = format.name;
		if(o.type == "camera_object") {
			iron_data_Data.getCamera(sceneName,o.data_ref,function(b) {
				var object = _gthis.addCameraObject(b,parent);
				_gthis.returnObject(object,o,done);
			});
		} else if(o.type == "lamp_object") {
			iron_data_Data.getLamp(sceneName,o.data_ref,function(b1) {
				var object1 = _gthis.addLampObject(b1,parent);
				_gthis.returnObject(object1,o,done);
			});
		} else if(o.type == "mesh_object") {
			if(o.material_refs == null || o.material_refs.length == 0) {
				var object2 = this.addObject(parent);
				this.returnObject(object2,o,done);
			} else {
				var length = o.material_refs.length;
				var this1 = new Array(length);
				var materials = this1;
				var materialsLoaded = 0;
				var _g1 = 0;
				var _g = o.material_refs.length;
				while(_g1 < _g) {
					var i = [_g1++];
					var ref = o.material_refs[i[0]];
					var tmp = (function(i1) {
						return function(mat) {
							materials[i1[0]] = mat;
							materialsLoaded += 1;
							if(materialsLoaded == o.material_refs.length) {
								var ref1 = o.data_ref.split("/");
								var object_file = "";
								var data_ref = "";
								if(ref1.length == 2) {
									object_file = ref1[0];
									data_ref = ref1[1];
								} else {
									object_file = sceneName;
									data_ref = o.data_ref;
								}
								if(parentObject != null && parentObject.bone_actions != null) {
									var bactions = [];
									var _g2 = 0;
									var _g3 = parentObject.bone_actions;
									while(_g2 < _g3.length) {
										var ref2 = _g3[_g2];
										++_g2;
										iron_data_Data.getSceneRaw(ref2,(function() {
											return function(action) {
												bactions.push(action);
												if(bactions.length == parentObject.bone_actions.length) {
													var armature = new iron_data_Armature(parentObject.name,bactions);
													_gthis.armatures.push(armature);
													_gthis.returnMeshObject(object_file,data_ref,sceneName,armature,materials,parent,o,done);
												}
											};
										})());
									}
								} else {
									_gthis.returnMeshObject(object_file,data_ref,sceneName,null,materials,parent,o,done);
								}
							}
						};
					})(i);
					iron_data_Data.getMaterial(sceneName,ref,tmp);
				}
			}
		} else if(o.type == "speaker_object") {
			var object3 = this.addSpeakerObject(iron_data_Data.getSpeakerRawByName(format.speaker_datas,o.data_ref),parent);
			this.returnObject(object3,o,done);
		} else if(o.type == "decal_object") {
			if(o.material_refs != null && o.material_refs.length > 0) {
				iron_data_Data.getMaterial(sceneName,o.material_refs[0],function(material) {
					var object4 = _gthis.addDecalObject(material,parent);
					_gthis.returnObject(object4,o,done);
				});
			} else {
				var object5 = this.addDecalObject(null,parent);
				this.returnObject(object5,o,done);
			}
		} else if(o.type == "object") {
			var object6 = this.addObject(parent);
			this.returnObject(object6,o,function(ro) {
				if(o.group_ref != null) {
					var spawned = 0;
					var object_refs = _gthis.getGroupObjectRefs(o.group_ref);
					if(object_refs.length == 0) {
						done(ro);
					} else {
						var _g4 = 0;
						while(_g4 < object_refs.length) {
							var s = object_refs[_g4];
							++_g4;
							_gthis.spawnObject(s,ro,function(so) {
								if((spawned += 1) == object_refs.length) {
									done(ro);
								}
							});
						}
					}
				} else {
					done(ro);
				}
			});
		} else {
			done(null);
		}
	}
	,getGroupObjectRefs: function(group_ref) {
		var _g = 0;
		var _g1 = this.raw.groups;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			if(g.name == group_ref) {
				return g.object_refs;
			}
		}
		return null;
	}
	,returnMeshObject: function(object_file,data_ref,sceneName,armature,materials,parent,o,done) {
		var _gthis = this;
		iron_data_Data.getMesh(object_file,data_ref,armature,function(mesh) {
			var object = _gthis.addMeshObject(mesh,materials,parent);
			if(o.particle_refs != null) {
				var _g = 0;
				var _g1 = o.particle_refs;
				while(_g < _g1.length) {
					var ref = _g1[_g];
					++_g;
					(js_Boot.__cast(object , iron_object_MeshObject)).setupParticleSystem(sceneName,ref);
				}
			}
			if(o.tilesheet_ref != null) {
				(js_Boot.__cast(object , iron_object_MeshObject)).setupTilesheet(sceneName,o.tilesheet_ref,o.tilesheet_action_ref);
			}
			_gthis.returnObject(object,o,done);
		});
	}
	,returnObject: function(object,o,done) {
		var _gthis = this;
		if(object != null && o.object_actions != null) {
			var oactions = [];
			while(oactions.length < o.object_actions.length) oactions.push(null);
			var actionsLoaded = 0;
			var _g1 = 0;
			var _g = o.object_actions.length;
			while(_g1 < _g) {
				var i = [_g1++];
				var ref = o.object_actions[i[0]];
				iron_data_Data.getSceneRaw(ref,(function(i1) {
					return function(action) {
						oactions[i1[0]] = action;
						actionsLoaded += 1;
						if(actionsLoaded == o.object_actions.length) {
							_gthis.returnObjectLoaded(object,o,oactions,done);
						}
					};
				})(i));
			}
		} else {
			this.returnObjectLoaded(object,o,null,done);
		}
	}
	,returnObjectLoaded: function(object,o,oactions,done) {
		if(object != null) {
			object.raw = o;
			object.name = o.name;
			if(o.visible != null) {
				object.visible = o.visible;
			}
			if(o.visible_mesh != null) {
				object.visibleMesh = o.visible_mesh;
			}
			if(o.visible_shadow != null) {
				object.visibleShadow = o.visible_shadow;
			}
			iron_Scene.createConstraints(o.constraints,object);
			iron_Scene.generateTranform(o,object.transform);
			object.setupAnimation(oactions);
			if(o.groups != null) {
				if(this.groups == null) {
					this.groups = new haxe_ds_StringMap();
				}
				var _g = 0;
				var _g1 = o.groups;
				while(_g < _g1.length) {
					var gname = _g1[_g];
					++_g;
					var _this = this.groups;
					var g = __map_reserved[gname] != null ? _this.getReserved(gname) : _this.h[gname];
					if(g == null) {
						g = [];
						var _this1 = this.groups;
						if(__map_reserved[gname] != null) {
							_this1.setReserved(gname,g);
						} else {
							_this1.h[gname] = g;
						}
					}
					g.push(object);
				}
			}
			iron_Scene.createTraits(o.traits,object);
		}
		done(object);
	}
	,loadEmbeddedData: function(datas,done) {
		var _gthis = this;
		if(datas == null) {
			done();
			return;
		}
		var loaded = 0;
		var _g = 0;
		while(_g < datas.length) {
			var file = [datas[_g]];
			++_g;
			iron_data_Data.getImage(file[0],(function(file1) {
				return function(image) {
					var _this = _gthis.embedded;
					if(__map_reserved[file1[0]] != null) {
						_this.setReserved(file1[0],image);
					} else {
						_this.h[file1[0]] = image;
					}
					loaded += 1;
					if(loaded == datas.length) {
						done();
					}
				};
			})(file));
		}
	}
	,notifyOnInit: function(f) {
		if(this.ready) {
			f();
		} else {
			this.traitInits.push(f);
		}
	}
	,__class__: iron_Scene
};
var iron_Trait = function() {
	this._render2D = null;
	this._render = null;
	this._lateUpdate = null;
	this._update = null;
	this._remove = null;
	this._init = null;
	this._add = null;
};
$hxClasses["iron.Trait"] = iron_Trait;
iron_Trait.__name__ = true;
iron_Trait.prototype = {
	remove: function() {
		this.object.removeTrait(this);
	}
	,__class__: iron_Trait
};
var iron_data_Armature = function(name,actions) {
	this.matsReady = false;
	this.actions = [];
	this.name = name;
	var _g = 0;
	while(_g < actions.length) {
		var a = actions[_g];
		++_g;
		var _g1 = 0;
		var _g2 = a.objects;
		while(_g1 < _g2.length) {
			var o = _g2[_g1];
			++_g1;
			iron_data_Armature.setParents(o);
		}
		var bones = [[]];
		iron_data_Armature.traverseBones(a.objects,(function(bones1) {
			return function(object) {
				bones1[0].push(object);
			};
		})(bones));
		this.actions.push({ name : a.name, bones : bones[0], mats : null});
	}
};
$hxClasses["iron.data.Armature"] = iron_data_Armature;
iron_data_Armature.__name__ = true;
iron_data_Armature.setParents = function(object) {
	if(object.children == null) {
		return;
	}
	var _g = 0;
	var _g1 = object.children;
	while(_g < _g1.length) {
		var o = _g1[_g];
		++_g;
		o.parent = object;
		iron_data_Armature.setParents(o);
	}
};
iron_data_Armature.traverseBones = function(objects,callback) {
	var _g1 = 0;
	var _g = objects.length;
	while(_g1 < _g) {
		var i = _g1++;
		iron_data_Armature.traverseBonesStep(objects[i],callback);
	}
};
iron_data_Armature.traverseBonesStep = function(object,callback) {
	if(object.type == "bone_object") {
		callback(object);
	}
	if(object.children == null) {
		return;
	}
	var _g1 = 0;
	var _g = object.children.length;
	while(_g1 < _g) {
		var i = _g1++;
		iron_data_Armature.traverseBonesStep(object.children[i],callback);
	}
};
iron_data_Armature.prototype = {
	initMats: function() {
		if(this.matsReady) {
			return;
		}
		this.matsReady = true;
		var _g = 0;
		var _g1 = this.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.mats != null) {
				continue;
			}
			a.mats = new haxe_ds_ObjectMap();
			var _g2 = 0;
			var _g3 = a.bones;
			while(_g2 < _g3.length) {
				var b = _g3[_g2];
				++_g2;
				a.mats.set(b,iron_math_Mat4.fromFloat32Array(b.transform.values));
			}
		}
	}
	,getAction: function(name) {
		var _g = 0;
		var _g1 = this.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.name == name) {
				return a;
			}
		}
		return null;
	}
	,__class__: iron_data_Armature
};
var iron_data_Data = function() {
};
$hxClasses["iron.data.Data"] = iron_data_Data;
iron_data_Data.__name__ = true;
iron_data_Data.getMesh = function(file,name,armature,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedMeshes;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingMeshes;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingMeshes;
	var key = file + name;
	var value = [done];
	if(__map_reserved[key] != null) {
		_this2.setReserved(key,value);
	} else {
		_this2.h[key] = value;
	}
	iron_data_MeshData.parse(file,name,armature,function(b) {
		var _this3 = iron_data_Data.cachedMeshes;
		var key1 = file + name;
		if(__map_reserved[key1] != null) {
			_this3.setReserved(key1,b);
		} else {
			_this3.h[key1] = b;
		}
		b.handle = handle;
		var _g = 0;
		var _this4 = iron_data_Data.loadingMeshes;
		var key2 = file + name;
		var _g1 = __map_reserved[key2] != null ? _this4.getReserved(key2) : _this4.h[key2];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingMeshes.remove(file + name);
	});
};
iron_data_Data.getLamp = function(file,name,done) {
	var _this = iron_data_Data.cachedLamps;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingLamps;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingLamps;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_LampData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedLamps;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingLamps;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingLamps.remove(file + name);
	});
};
iron_data_Data.getCamera = function(file,name,done) {
	var _this = iron_data_Data.cachedCameras;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingCameras;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingCameras;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_CameraData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedCameras;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingCameras;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingCameras.remove(file + name);
	});
};
iron_data_Data.getMaterial = function(file,name,done) {
	var _this = iron_data_Data.cachedMaterials;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingMaterials;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingMaterials;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_MaterialData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedMaterials;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingMaterials;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingMaterials.remove(file + name);
	});
};
iron_data_Data.getParticle = function(file,name,done) {
	var _this = iron_data_Data.cachedParticles;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingParticles;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingParticles;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_ParticleData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedParticles;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingParticles;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingParticles.remove(file + name);
	});
};
iron_data_Data.getWorld = function(file,name,done) {
	if(name == null) {
		done(null);
		return;
	}
	var _this = iron_data_Data.cachedWorlds;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingWorlds;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingWorlds;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_WorldData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedWorlds;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingWorlds;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingWorlds.remove(file + name);
	});
};
iron_data_Data.getShader = function(file,name,overrideContext,done) {
	var cacheName = name;
	if(overrideContext != null) {
		cacheName += "2";
	}
	var _this = iron_data_Data.cachedShaders;
	var cached = __map_reserved[cacheName] != null ? _this.getReserved(cacheName) : _this.h[cacheName];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingShaders;
	var loading = __map_reserved[cacheName] != null ? _this1.getReserved(cacheName) : _this1.h[cacheName];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingShaders;
	var value = [done];
	if(__map_reserved[cacheName] != null) {
		_this2.setReserved(cacheName,value);
	} else {
		_this2.h[cacheName] = value;
	}
	iron_data_ShaderData.parse(file,name,overrideContext,function(b) {
		var _this3 = iron_data_Data.cachedShaders;
		if(__map_reserved[cacheName] != null) {
			_this3.setReserved(cacheName,b);
		} else {
			_this3.h[cacheName] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingShaders;
		var _g1 = __map_reserved[cacheName] != null ? _this4.getReserved(cacheName) : _this4.h[cacheName];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingShaders.remove(cacheName);
	});
};
iron_data_Data.getSceneRaw = function(file,done) {
	var _this = iron_data_Data.cachedSceneRaws;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingSceneRaws;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingSceneRaws;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var compressed = StringTools.endsWith(file,".zip");
	var ext = compressed || StringTools.endsWith(file,".arm") ? "" : ".arm";
	iron_data_Data.getBlob(file + ext,function(b) {
		if(compressed) {
			var input = new haxe_io_BytesInput(b.toBytes());
			var entry = haxe_zip_Reader.readZip(input).first();
			if(entry == null) {
				haxe_Log.trace("Failed to uncompress " + file,{ fileName : "Data.hx", lineNumber : 237, className : "iron.data.Data", methodName : "getSceneRaw"});
				return;
			}
			if(entry.compressed) {
				b = kha_internal_BytesBlob.fromBytes(haxe_zip_Reader.unzip(entry));
			} else {
				b = kha_internal_BytesBlob.fromBytes(entry.data);
			}
		}
		var i = new haxe_io_BytesInput(b.toBytes());
		i.set_bigEndian(true);
		var parsed = iron_system_ArmPack.read(i);
		iron_data_Data.returnSceneRaw(file,parsed);
	});
};
iron_data_Data.returnSceneRaw = function(file,parsed) {
	var _this = iron_data_Data.cachedSceneRaws;
	if(__map_reserved[file] != null) {
		_this.setReserved(file,parsed);
	} else {
		_this.h[file] = parsed;
	}
	var _g = 0;
	var _this1 = iron_data_Data.loadingSceneRaws;
	var _g1 = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		f(parsed);
	}
	iron_data_Data.loadingSceneRaws.remove(file);
};
iron_data_Data.getMeshRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getLampRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getCameraRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getMaterialRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getParticleRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getWorldRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getShaderRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getSpeakerRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getBlob = function(file,done) {
	var _this = iron_data_Data.cachedBlobs;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingBlobs;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingBlobs;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var description = { files : [file]};
	kha_LoaderImpl.loadBlobFromDescription(description,function(b) {
		var _this3 = iron_data_Data.cachedBlobs;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingBlobs;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingBlobs.remove(file);
		iron_data_Data.assetsLoaded++;
	});
};
iron_data_Data.getImage = function(file,done,readable,format) {
	if(format == null) {
		format = "RGBA32";
	}
	if(readable == null) {
		readable = false;
	}
	var _this = iron_data_Data.cachedImages;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingImages;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingImages;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var description = { files : [file], readable : readable, format : format};
	kha_LoaderImpl.loadImageFromDescription(description,function(b) {
		var _this3 = iron_data_Data.cachedImages;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingImages;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingImages.remove(file);
		iron_data_Data.assetsLoaded++;
	});
};
iron_data_Data.getSound = function(file,done) {
	if(StringTools.endsWith(file,".wav")) {
		file = file.substring(0,file.length - 4) + ".ogg";
	}
	var _this = iron_data_Data.cachedSounds;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingSounds;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingSounds;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var description = { files : [file]};
	kha_LoaderImpl.loadSoundFromDescription(description,function(b) {
		b.uncompress(function() {
			var _this3 = iron_data_Data.cachedSounds;
			if(__map_reserved[file] != null) {
				_this3.setReserved(file,b);
			} else {
				_this3.h[file] = b;
			}
			var _g = 0;
			var _this4 = iron_data_Data.loadingSounds;
			var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f(b);
			}
			iron_data_Data.loadingSounds.remove(file);
			iron_data_Data.assetsLoaded++;
		});
	});
};
iron_data_Data.prototype = {
	__class__: iron_data_Data
};
var iron_data_CameraData = function(raw,done,file) {
	if(file == null) {
		file = "";
	}
	this.mirror = null;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	if(raw.render_to_texture) {
		this.mirror = kha_Image.createRenderTarget(raw.texture_resolution_x,raw.texture_resolution_y,kha_graphics4_TextureFormat.RGBA32,0);
	}
	done(this);
};
$hxClasses["iron.data.CameraData"] = iron_data_CameraData;
iron_data_CameraData.__name__ = true;
iron_data_CameraData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getCameraRawByName(format.camera_datas,id);
		if(raw == null) {
			haxe_Log.trace("Camera data \"" + id + "\" not found!",{ fileName : "CameraData.hx", lineNumber : 30, className : "iron.data.CameraData", methodName : "parse"});
			done(null);
		}
		new iron_data_CameraData(raw,done,name);
	});
};
iron_data_CameraData.__super__ = iron_data_Data;
iron_data_CameraData.prototype = $extend(iron_data_Data.prototype,{
	__class__: iron_data_CameraData
});
var iron_data_Geometry = function(indices,materialIndices,positions,normals,uvs,uvs1,cols,tangents,bones,weights,usage,instanceOffsets) {
	this.mats = null;
	this.actions = null;
	this.skeletonBoneRefs = null;
	this.skeletonTransformsI = null;
	this.skeletonTransforms = null;
	this.skinBoneWeights = null;
	this.skinBoneIndices = null;
	this.skinBoneCounts = null;
	this.skinTransformI = null;
	this.skinTransform = null;
	this.instanceCount = 0;
	this.instanced = false;
	this.instancedVB = null;
	this.numTris = 0;
	this.ready = false;
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	this.indices = indices;
	this.materialIndices = materialIndices;
	this.usage = usage;
	this.positions = positions;
	this.normals = normals;
	this.uvs = uvs;
	this.uvs1 = uvs1;
	this.cols = cols;
	this.tangents = tangents;
	this.bones = bones;
	this.weights = weights;
	this.instanceOffsets = instanceOffsets;
	this.struct = iron_data_Geometry.getVertexStructure(positions != null,normals != null,uvs != null,uvs1 != null,cols != null,tangents != null,bones != null,weights != null);
	this.structLength = this.struct.byteSize() / 4 | 0;
};
$hxClasses["iron.data.Geometry"] = iron_data_Geometry;
iron_data_Geometry.__name__ = true;
iron_data_Geometry.getVertexStructure = function(pos,nor,tex,tex1,col,tang,bone,weight) {
	if(weight == null) {
		weight = false;
	}
	if(bone == null) {
		bone = false;
	}
	if(tang == null) {
		tang = false;
	}
	if(col == null) {
		col = false;
	}
	if(tex1 == null) {
		tex1 = false;
	}
	if(tex == null) {
		tex = false;
	}
	if(nor == null) {
		nor = false;
	}
	if(pos == null) {
		pos = false;
	}
	var structure = new kha_graphics4_VertexStructure();
	if(pos) {
		structure.add("pos",kha_graphics4_VertexData.Float3);
	}
	if(nor) {
		structure.add("nor",kha_graphics4_VertexData.Float3);
	}
	if(tex) {
		structure.add("tex",kha_graphics4_VertexData.Float2);
	}
	if(tex1) {
		structure.add("tex1",kha_graphics4_VertexData.Float2);
	}
	if(col) {
		structure.add("col",kha_graphics4_VertexData.Float3);
	}
	if(tang) {
		structure.add("tang",kha_graphics4_VertexData.Float3);
	}
	if(bone) {
		structure.add("bone",kha_graphics4_VertexData.Float4);
	}
	if(weight) {
		structure.add("weight",kha_graphics4_VertexData.Float4);
	}
	return structure;
};
iron_data_Geometry.buildVertices = function(vertices,pa,na,uva,uva1,ca,tanga,bonea,weighta,offset) {
	if(offset == null) {
		offset = 0;
	}
	var numVertices = pa.length / 3 | 0;
	var di = -1 + offset;
	var _g1 = 0;
	var _g = numVertices;
	while(_g1 < _g) {
		var i = _g1++;
		vertices[++di] = pa[i * 3];
		vertices[++di] = pa[i * 3 + 1];
		vertices[++di] = pa[i * 3 + 2];
		if(na != null) {
			vertices[++di] = na[i * 3];
			vertices[++di] = na[i * 3 + 1];
			vertices[++di] = na[i * 3 + 2];
		}
		if(uva != null) {
			vertices[++di] = uva[i * 2];
			vertices[++di] = uva[i * 2 + 1];
		}
		if(uva1 != null) {
			vertices[++di] = uva1[i * 2];
			vertices[++di] = uva1[i * 2 + 1];
		}
		if(ca != null) {
			vertices[++di] = ca[i * 3];
			vertices[++di] = ca[i * 3 + 1];
			vertices[++di] = ca[i * 3 + 2];
		}
		if(tanga != null) {
			vertices[++di] = tanga[i * 3];
			vertices[++di] = tanga[i * 3 + 1];
			vertices[++di] = tanga[i * 3 + 2];
		}
		if(bonea != null) {
			vertices[++di] = bonea[i * 4];
			vertices[++di] = bonea[i * 4 + 1];
			vertices[++di] = bonea[i * 4 + 2];
			vertices[++di] = bonea[i * 4 + 3];
		}
		if(weighta != null) {
			vertices[++di] = weighta[i * 4];
			vertices[++di] = weighta[i * 4 + 1];
			vertices[++di] = weighta[i * 4 + 2];
			vertices[++di] = weighta[i * 4 + 3];
		}
	}
};
iron_data_Geometry.prototype = {
	setupInstanced: function(offsets,usage) {
		this.offsetVecs = [];
		var _g1 = 0;
		var _g = offsets.length / 3 | 0;
		while(_g1 < _g) {
			var i = _g1++;
			this.offsetVecs.push(new iron_math_Vec4(offsets[i * 3],offsets[i * 3 + 1],offsets[i * 3 + 2]));
		}
		this.instanced = true;
		this.instanceCount = offsets.length / 3 | 0;
		var structure = new kha_graphics4_VertexStructure();
		structure.instanced = true;
		structure.add("off",kha_graphics4_VertexData.Float3);
		this.instancedVB = new kha_graphics4_VertexBuffer(this.instanceCount,structure,usage,1);
		var vertices = this.instancedVB.lock();
		var _g11 = 0;
		var _g2 = vertices.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			vertices[i1] = offsets[i1];
		}
		this.instancedVB.unlock();
	}
	,build: function() {
		if(this.ready) {
			return;
		}
		this.vertexBuffer = new kha_graphics4_VertexBuffer(this.positions.length / 3 | 0,this.struct,this.usage);
		this.vertices = this.vertexBuffer.lock();
		iron_data_Geometry.buildVertices(this.vertices,this.positions,this.normals,this.uvs,this.uvs1,this.cols,this.tangents,this.bones,this.weights);
		this.vertexBuffer.unlock();
		this.indexBuffers = [];
		var _g = 0;
		var _g1 = this.indices;
		while(_g < _g1.length) {
			var id = _g1[_g];
			++_g;
			if(id.length == 0) {
				continue;
			}
			var indexBuffer = new kha_graphics4_IndexBuffer(id.length,this.usage);
			this.numTris += id.length / 3 | 0;
			indexBuffer._data = id;
			indexBuffer.unlock();
			this.indexBuffers.push(indexBuffer);
		}
		if(this.instanceOffsets != null) {
			this.setupInstanced(this.instanceOffsets,this.usage);
		}
		this.ready = true;
	}
	,setArmature: function(armature) {
		var _g = 0;
		var _g1 = armature.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			this.addAction(a.bones,a.name);
		}
	}
	,addAction: function(bones,name) {
		if(this.actions == null) {
			this.actions = new haxe_ds_StringMap();
			this.mats = new haxe_ds_StringMap();
		}
		var actionBones = [];
		var _g = 0;
		var _g1 = this.skeletonBoneRefs;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var _g2 = 0;
			while(_g2 < bones.length) {
				var b = bones[_g2];
				++_g2;
				if(b.name == s) {
					actionBones.push(b);
				}
			}
		}
		var _this = this.actions;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,actionBones);
		} else {
			_this.h[name] = actionBones;
		}
		var actionMats = new haxe_ds_ObjectMap();
		var _g3 = 0;
		while(_g3 < actionBones.length) {
			var b1 = actionBones[_g3];
			++_g3;
			actionMats.set(b1,iron_math_Mat4.fromFloat32Array(b1.transform.values));
		}
		var _this1 = this.mats;
		if(__map_reserved[name] != null) {
			_this1.setReserved(name,actionMats);
		} else {
			_this1.h[name] = actionMats;
		}
	}
	,initSkeletonTransforms: function(transforms) {
		this.skeletonTransforms = [];
		this.skeletonTransformsI = [];
		var _g = 0;
		while(_g < transforms.length) {
			var t = transforms[_g];
			++_g;
			var m = iron_math_Mat4.fromFloat32Array(t);
			this.skeletonTransforms.push(m);
			var mi = iron_math_Mat4.identity();
			mi.getInverse(m);
			this.skeletonTransformsI.push(mi);
		}
	}
	,initSkinTransform: function(t) {
		this.skinTransform = iron_math_Mat4.fromFloat32Array(t);
		this.skinTransformI = iron_math_Mat4.identity();
		this.skinTransformI.getInverse(this.skinTransform);
	}
	,__class__: iron_data_Geometry
};
var iron_data_LampData = function(raw,done) {
	this.colorTexture = null;
	var _gthis = this;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	if(raw.color_texture != null) {
		iron_data_Data.getImage(raw.color_texture,function(image) {
			_gthis.colorTexture = image;
			done(_gthis);
		});
	} else {
		done(this);
	}
};
$hxClasses["iron.data.LampData"] = iron_data_LampData;
iron_data_LampData.__name__ = true;
iron_data_LampData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getLampRawByName(format.lamp_datas,id);
		if(raw == null) {
			haxe_Log.trace("Lamp data \"" + id + "\" not found!",{ fileName : "LampData.hx", lineNumber : 42, className : "iron.data.LampData", methodName : "parse"});
			done(null);
		}
		new iron_data_LampData(raw,done);
	});
};
iron_data_LampData.__super__ = iron_data_Data;
iron_data_LampData.prototype = $extend(iron_data_Data.prototype,{
	__class__: iron_data_LampData
});
var iron_data_MaterialData = function(raw,done,file) {
	if(file == null) {
		file = "";
	}
	this.contexts = null;
	var _gthis = this;
	iron_data_Data.call(this);
	this.uid = ++iron_data_MaterialData.uidCounter;
	this.raw = raw;
	this.name = raw.name;
	var ref = raw.shader.split("/");
	var object_file = "";
	var data_ref = "";
	if(ref.length == 2) {
		object_file = ref[0];
		data_ref = ref[1];
	} else {
		object_file = file;
		data_ref = raw.shader;
	}
	iron_data_Data.getShader(object_file,data_ref,raw.override_context,function(b) {
		_gthis.shader = b;
		_gthis.contexts = [];
		while(_gthis.contexts.length < raw.contexts.length) _gthis.contexts.push(null);
		var contextsLoaded = 0;
		var _g1 = 0;
		var _g = raw.contexts.length;
		while(_g1 < _g) {
			var i = [_g1++];
			var c = raw.contexts[i[0]];
			new iron_data_MaterialContext(c,(function(i1) {
				return function(self) {
					_gthis.contexts[i1[0]] = self;
					contextsLoaded += 1;
					if(contextsLoaded == raw.contexts.length) {
						done(_gthis);
					}
				};
			})(i));
		}
	});
};
$hxClasses["iron.data.MaterialData"] = iron_data_MaterialData;
iron_data_MaterialData.__name__ = true;
iron_data_MaterialData.parse = function(file,name,done) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getMaterialRawByName(format.material_datas,name);
		if(raw == null) {
			haxe_Log.trace("Material data \"" + name + "\" not found!",{ fileName : "MaterialData.hx", lineNumber : 61, className : "iron.data.MaterialData", methodName : "parse"});
			done(null);
		}
		new iron_data_MaterialData(raw,done,file);
	});
};
iron_data_MaterialData.__super__ = iron_data_Data;
iron_data_MaterialData.prototype = $extend(iron_data_Data.prototype,{
	__class__: iron_data_MaterialData
});
var iron_data_MaterialContext = function(raw,done) {
	this.id = 0;
	this.textures = null;
	var _gthis = this;
	this.raw = raw;
	this.id = iron_data_MaterialContext.num++;
	if(raw.bind_textures != null && raw.bind_textures.length > 0) {
		var length = raw.bind_textures.length;
		var this1 = new Array(length);
		this.textures = this1;
		var texturesLoaded = 0;
		var _g1 = 0;
		var _g = raw.bind_textures.length;
		while(_g1 < _g) {
			var i = [_g1++];
			var tex = [raw.bind_textures[i[0]]];
			if(tex[0].file == "") {
				texturesLoaded += 1;
				if(texturesLoaded == raw.bind_textures.length) {
					done(this);
				}
				continue;
			}
			iron_data_Data.getImage(tex[0].file,(function(tex1,i1) {
				return function(image) {
					_gthis.textures[i1[0]] = image;
					texturesLoaded += 1;
					if(tex1[0].mipmaps != null) {
						var mipmaps = [];
						while(mipmaps.length < tex1[0].mipmaps.length) mipmaps.push(null);
						var mipmapsLoaded = 0;
						var _g3 = 0;
						var _g2 = tex1[0].mipmaps.length;
						while(_g3 < _g2) {
							var j = [_g3++];
							var name = tex1[0].mipmaps[j[0]];
							iron_data_Data.getImage(name,(function(j1,tex2) {
								return function(mipimg) {
									mipmaps[j1[0]] = mipimg;
									mipmapsLoaded += 1;
									if(mipmapsLoaded == tex2[0].mipmaps.length) {
										image.setMipmaps(mipmaps);
										tex2[0].mipmaps = null;
										tex2[0].generate_mipmaps = false;
										if(texturesLoaded == raw.bind_textures.length) {
											done(_gthis);
										}
									}
								};
							})(j,tex1));
						}
					} else if(tex1[0].generate_mipmaps == true && image != null) {
						image.generateMipmaps(1000);
						tex1[0].mipmaps = null;
						tex1[0].generate_mipmaps = false;
						if(texturesLoaded == raw.bind_textures.length) {
							done(_gthis);
						}
					} else if(texturesLoaded == raw.bind_textures.length) {
						done(_gthis);
					}
				};
			})(tex,i),false,tex[0].format != null ? tex[0].format : "RGBA32");
		}
	} else {
		done(this);
	}
};
$hxClasses["iron.data.MaterialContext"] = iron_data_MaterialContext;
iron_data_MaterialContext.__name__ = true;
iron_data_MaterialContext.prototype = {
	__class__: iron_data_MaterialContext
};
var iron_data_MeshBatch = function() {
	this.buckets = new haxe_ds_ObjectMap();
};
$hxClasses["iron.data.MeshBatch"] = iron_data_MeshBatch;
iron_data_MeshBatch.__name__ = true;
iron_data_MeshBatch.prototype = {
	remove: function() {
		var b = this.buckets.iterator();
		while(b.hasNext()) {
			var b1 = b.next();
			this.remove();
		}
	}
	,__class__: iron_data_MeshBatch
};
var iron_data_Bucket = function() { };
$hxClasses["iron.data.Bucket"] = iron_data_Bucket;
iron_data_Bucket.__name__ = true;
var iron_data_MeshData = function(raw,done) {
	this.refcount = 0;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	var indices = [];
	var materialIndices = [];
	var _g = 0;
	var _g1 = raw.index_arrays;
	while(_g < _g1.length) {
		var ind = _g1[_g];
		++_g;
		indices.push(ind.values);
		materialIndices.push(ind.material);
	}
	var pa = this.getVertexArrayValues("pos");
	var na = this.getVertexArrayValues("nor");
	var uva = this.getVertexArrayValues("tex");
	var uva1 = this.getVertexArrayValues("tex1");
	var ca = this.getVertexArrayValues("col");
	var tanga = this.getVertexArrayValues("tang");
	this.isSkinned = raw.skin != null;
	var parsedUsage = kha_graphics4_Usage.StaticUsage;
	if(raw.dynamic_usage != null && raw.dynamic_usage == true) {
		parsedUsage = kha_graphics4_Usage.DynamicUsage;
	}
	var usage = this.isSkinned && false ? kha_graphics4_Usage.DynamicUsage : parsedUsage;
	var bonea = null;
	var weighta = null;
	if(this.isSkinned) {
		var l = (pa.length / 3 | 0) * 4;
		var this1 = new Float32Array(l);
		bonea = this1;
		var this2 = new Float32Array(l);
		weighta = this2;
		var index = 0;
		var ai = 0;
		var _g11 = 0;
		var _g2 = pa.length / 3 | 0;
		while(_g11 < _g2) {
			var i = _g11++;
			var boneCount = raw.skin.bone_count_array[i];
			var _g3 = index;
			var _g21 = index + boneCount;
			while(_g3 < _g21) {
				var j = _g3++;
				bonea[ai] = raw.skin.bone_index_array[j];
				weighta[ai] = raw.skin.bone_weight_array[j];
				++ai;
			}
			var _g22 = boneCount;
			while(_g22 < 4) {
				var j1 = _g22++;
				bonea[ai] = 0.0;
				weighta[ai] = 0.0;
				++ai;
			}
			index += boneCount;
		}
	}
	this.geom = new iron_data_Geometry(indices,materialIndices,pa,na,uva,uva1,ca,tanga,bonea,weighta,usage,raw.instance_offsets);
	done(this);
};
$hxClasses["iron.data.MeshData"] = iron_data_MeshData;
iron_data_MeshData.__name__ = true;
iron_data_MeshData.parse = function(name,id,armature,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getMeshRawByName(format.mesh_datas,id);
		if(raw == null) {
			haxe_Log.trace("Mesh data \"" + id + "\" not found!",{ fileName : "MeshData.hx", lineNumber : 105, className : "iron.data.MeshData", methodName : "parse"});
			done(null);
		}
		new iron_data_MeshData(raw,function(dat) {
			if(raw.skin != null) {
				dat.geom.initSkinTransform(raw.skin.transform.values);
				dat.geom.skinBoneCounts = raw.skin.bone_count_array;
				dat.geom.skinBoneIndices = raw.skin.bone_index_array;
				dat.geom.skinBoneWeights = raw.skin.bone_weight_array;
				dat.geom.skeletonBoneRefs = raw.skin.skeleton.bone_ref_array;
				dat.geom.initSkeletonTransforms(raw.skin.skeleton.transforms);
				if(armature != null) {
					dat.geom.setArmature(armature);
				} else {
					dat.geom.addAction(format.objects,"none");
				}
			}
			done(dat);
		});
	});
};
iron_data_MeshData.__super__ = iron_data_Data;
iron_data_MeshData.prototype = $extend(iron_data_Data.prototype,{
	getVertexArrayValues: function(attrib) {
		var _g = 0;
		var _g1 = this.raw.vertex_arrays;
		while(_g < _g1.length) {
			var va = _g1[_g];
			++_g;
			if(va.attrib == attrib) {
				return va.values;
			}
		}
		return null;
	}
	,__class__: iron_data_MeshData
});
var iron_data_ParticleData = function(raw,done) {
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	done(this);
};
$hxClasses["iron.data.ParticleData"] = iron_data_ParticleData;
iron_data_ParticleData.__name__ = true;
iron_data_ParticleData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getParticleRawByName(format.particle_datas,id);
		if(raw == null) {
			haxe_Log.trace("Particle data \"" + id + "\" not found!",{ fileName : "ParticleData.hx", lineNumber : 23, className : "iron.data.ParticleData", methodName : "parse"});
			done(null);
		}
		new iron_data_ParticleData(raw,done);
	});
};
iron_data_ParticleData.__super__ = iron_data_Data;
iron_data_ParticleData.prototype = $extend(iron_data_Data.prototype,{
	__class__: iron_data_ParticleData
});
var iron_data_ShaderData = function(raw,overrideContext,done) {
	this.contexts = [];
	var _gthis = this;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	var _g = 0;
	var _g1 = raw.contexts;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		this.contexts.push(null);
	}
	var contextsLoaded = 0;
	var _g11 = 0;
	var _g2 = raw.contexts.length;
	while(_g11 < _g2) {
		var i = [_g11++];
		var c1 = raw.contexts[i[0]];
		new iron_data_ShaderContext(c1,overrideContext,(function(i1) {
			return function(con) {
				_gthis.contexts[i1[0]] = con;
				contextsLoaded += 1;
				if(contextsLoaded == raw.contexts.length) {
					done(_gthis);
				}
			};
		})(i));
	}
};
$hxClasses["iron.data.ShaderData"] = iron_data_ShaderData;
iron_data_ShaderData.__name__ = true;
iron_data_ShaderData.parse = function(file,name,overrideContext,done) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getShaderRawByName(format.shader_datas,name);
		if(raw == null) {
			haxe_Log.trace("Shader data \"" + name + "\" not found!",{ fileName : "ShaderData.hx", lineNumber : 49, className : "iron.data.ShaderData", methodName : "parse"});
			done(null);
		}
		new iron_data_ShaderData(raw,overrideContext,done);
	});
};
iron_data_ShaderData.__super__ = iron_data_Data;
iron_data_ShaderData.prototype = $extend(iron_data_Data.prototype,{
	__class__: iron_data_ShaderData
});
var iron_data_ShaderContext = function(raw,overrideContext,done) {
	this.instancing = false;
	this.raw = raw;
	this.overrideContext = overrideContext;
	if(raw.name == "rect") {
		this.structure = iron_data_ShaderContext.getStructureRect();
		this.instancing = false;
	} else {
		this.parseVertexStructure();
	}
	this.compile(done);
};
$hxClasses["iron.data.ShaderContext"] = iron_data_ShaderContext;
iron_data_ShaderContext.__name__ = true;
iron_data_ShaderContext.getStructureRect = function() {
	if(iron_data_ShaderContext.structureRect == null) {
		iron_data_ShaderContext.structureRect = new kha_graphics4_VertexStructure();
		iron_data_ShaderContext.structureRect.add("pos",kha_graphics4_VertexData.Float2);
	}
	return iron_data_ShaderContext.structureRect;
};
iron_data_ShaderContext.prototype = {
	compile: function(done) {
		if(this.pipeState != null) {
			this.pipeState["delete"]();
		}
		this.pipeState = new kha_graphics4_PipelineState();
		this.constants = [];
		this.textureUnits = [];
		if(this.instancing) {
			var instStruct = new kha_graphics4_VertexStructure();
			instStruct.add("off",kha_graphics4_VertexData.Float3);
			instStruct.instanced = true;
			this.pipeState.inputLayout = [this.structure,instStruct];
		} else {
			this.pipeState.inputLayout = [this.structure];
		}
		this.pipeState.depthWrite = this.raw.depth_write;
		this.pipeState.depthMode = this.getCompareMode(this.raw.compare_mode);
		if(this.raw.stencil_mode != null) {
			if(this.raw.stencil_mode == "always") {
				this.pipeState.stencilMode = kha_graphics4_CompareMode.Always;
			} else if(this.raw.stencil_mode == "equal") {
				this.pipeState.stencilMode = kha_graphics4_CompareMode.Equal;
			} else if(this.raw.stencil_mode == "not_equal") {
				this.pipeState.stencilMode = kha_graphics4_CompareMode.NotEqual;
			}
		}
		if(this.raw.stencil_pass != null) {
			if(this.raw.stencil_pass == "replace") {
				this.pipeState.stencilBothPass = kha_graphics4_StencilAction.Replace;
			} else if(this.raw.stencil_pass == "keep") {
				this.pipeState.stencilBothPass = kha_graphics4_StencilAction.Keep;
			}
		}
		if(this.raw.stencil_fail != null && this.raw.stencil_fail == "keep") {
			this.pipeState.stencilDepthFail = kha_graphics4_StencilAction.Keep;
			this.pipeState.stencilFail = kha_graphics4_StencilAction.Keep;
		}
		if(this.raw.stencil_reference_value != null) {
			this.pipeState.stencilReferenceValue = this.raw.stencil_reference_value;
		}
		this.pipeState.cullMode = this.getCullMode(this.raw.cull_mode);
		if(this.raw.blend_source != null) {
			this.pipeState.blendSource = this.getBlendingFactor(this.raw.blend_source);
		}
		if(this.raw.blend_destination != null) {
			this.pipeState.blendDestination = this.getBlendingFactor(this.raw.blend_destination);
		}
		if(this.raw.blend_operation != null) {
			this.pipeState.blendOperation = this.getBlendingOperation(this.raw.blend_operation);
		}
		if(this.raw.alpha_blend_source != null) {
			this.pipeState.alphaBlendSource = this.getBlendingFactor(this.raw.alpha_blend_source);
		}
		if(this.raw.alpha_blend_destination != null) {
			this.pipeState.alphaBlendDestination = this.getBlendingFactor(this.raw.alpha_blend_destination);
		}
		if(this.raw.alpha_blend_operation != null) {
			this.pipeState.alphaBlendOperation = this.getBlendingOperation(this.raw.alpha_blend_operation);
		}
		if(this.raw.color_write_red != null) {
			this.pipeState.colorWriteMaskRed = this.raw.color_write_red;
		}
		if(this.raw.color_write_green != null) {
			this.pipeState.colorWriteMaskGreen = this.raw.color_write_green;
		}
		if(this.raw.color_write_blue != null) {
			this.pipeState.colorWriteMaskBlue = this.raw.color_write_blue;
		}
		if(this.raw.color_write_alpha != null) {
			this.pipeState.colorWriteMaskAlpha = this.raw.color_write_alpha;
		}
		if(this.raw.conservative_raster != null) {
			this.pipeState.conservativeRasterization = this.raw.conservative_raster;
		}
		if(this.raw.shader_from_source) {
			this.pipeState.fragmentShader = kha_graphics4_FragmentShader.fromSource(this.raw.fragment_shader);
			this.pipeState.vertexShader = kha_graphics4_VertexShader.fromSource(this.raw.vertex_shader);
			this.finishCompile(done);
		} else {
			var tmp = StringTools.replace(this.raw.fragment_shader,".","_");
			this.pipeState.fragmentShader = Reflect.field(kha_Shaders,tmp);
			var tmp1 = StringTools.replace(this.raw.vertex_shader,".","_");
			this.pipeState.vertexShader = Reflect.field(kha_Shaders,tmp1);
			if(this.raw.geometry_shader != null) {
				var tmp2 = StringTools.replace(this.raw.geometry_shader,".","_");
				this.pipeState.geometryShader = Reflect.field(kha_Shaders,tmp2);
			}
			if(this.raw.tesscontrol_shader != null) {
				var tmp3 = StringTools.replace(this.raw.tesscontrol_shader,".","_");
				this.pipeState.tessellationControlShader = Reflect.field(kha_Shaders,tmp3);
			}
			if(this.raw.tesseval_shader != null) {
				var tmp4 = StringTools.replace(this.raw.tesseval_shader,".","_");
				this.pipeState.tessellationEvaluationShader = Reflect.field(kha_Shaders,tmp4);
			}
			this.finishCompile(done);
		}
	}
	,finishCompile: function(done) {
		if(this.overrideContext != null) {
			if(this.overrideContext.cull_mode != null) {
				this.pipeState.cullMode = this.getCullMode(this.overrideContext.cull_mode);
			}
		}
		this.pipeState.compile();
		if(this.raw.constants != null) {
			var _g = 0;
			var _g1 = this.raw.constants;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				this.addConstant(c);
			}
		}
		if(this.raw.texture_units != null) {
			var _g2 = 0;
			var _g11 = this.raw.texture_units;
			while(_g2 < _g11.length) {
				var tu = _g11[_g2];
				++_g2;
				this.addTexture(tu);
			}
		}
		done(this);
	}
	,sizeToVD: function(size) {
		if(size == 1) {
			return kha_graphics4_VertexData.Float1;
		} else if(size == 2) {
			return kha_graphics4_VertexData.Float2;
		} else if(size == 3) {
			return kha_graphics4_VertexData.Float3;
		} else if(size == 4) {
			return kha_graphics4_VertexData.Float4;
		}
		return null;
	}
	,parseVertexStructure: function() {
		this.structure = new kha_graphics4_VertexStructure();
		var _g = 0;
		var _g1 = this.raw.vertex_structure;
		while(_g < _g1.length) {
			var vs = _g1[_g];
			++_g;
			if(vs.name == "off") {
				this.instancing = true;
				continue;
			}
			this.structure.add(vs.name,this.sizeToVD(vs.size));
		}
	}
	,getCompareMode: function(s) {
		switch(s) {
		case "always":
			return kha_graphics4_CompareMode.Always;
		case "equal":
			return kha_graphics4_CompareMode.Equal;
		case "greater":
			return kha_graphics4_CompareMode.Greater;
		case "greater_equal":
			return kha_graphics4_CompareMode.GreaterEqual;
		case "less":
			return kha_graphics4_CompareMode.Less;
		case "less_equal":
			return kha_graphics4_CompareMode.LessEqual;
		case "never":
			return kha_graphics4_CompareMode.Never;
		case "not_equal":
			return kha_graphics4_CompareMode.NotEqual;
		default:
			return kha_graphics4_CompareMode.Less;
		}
	}
	,getCullMode: function(s) {
		switch(s) {
		case "clockwise":
			return kha_graphics4_CullMode.Clockwise;
		case "none":
			return kha_graphics4_CullMode.None;
		default:
			return kha_graphics4_CullMode.CounterClockwise;
		}
	}
	,getBlendingOperation: function(s) {
		switch(s) {
		case "add":
			return kha_graphics4_BlendingOperation.Add;
		case "max":
			return kha_graphics4_BlendingOperation.Max;
		case "min":
			return kha_graphics4_BlendingOperation.Min;
		case "reverse_substract":
			return kha_graphics4_BlendingOperation.ReverseSubtract;
		case "substract":
			return kha_graphics4_BlendingOperation.Subtract;
		default:
			return kha_graphics4_BlendingOperation.Add;
		}
	}
	,getBlendingFactor: function(s) {
		switch(s) {
		case "blend_one":
			return kha_graphics4_BlendingFactor.BlendOne;
		case "blend_zero":
			return kha_graphics4_BlendingFactor.BlendZero;
		case "destination_alpha":
			return kha_graphics4_BlendingFactor.DestinationAlpha;
		case "destination_color":
			return kha_graphics4_BlendingFactor.DestinationColor;
		case "inverse_destination_alpha":
			return kha_graphics4_BlendingFactor.InverseDestinationAlpha;
		case "inverse_destination_color":
			return kha_graphics4_BlendingFactor.InverseDestinationColor;
		case "inverse_source_alpha":
			return kha_graphics4_BlendingFactor.InverseSourceAlpha;
		case "inverse_source_color":
			return kha_graphics4_BlendingFactor.InverseSourceColor;
		case "source_alpha":
			return kha_graphics4_BlendingFactor.SourceAlpha;
		case "source_color":
			return kha_graphics4_BlendingFactor.SourceColor;
		default:
			return kha_graphics4_BlendingFactor.Undefined;
		}
	}
	,addConstant: function(c) {
		this.constants.push(this.pipeState.getConstantLocation(c.name));
	}
	,addTexture: function(tu) {
		var unit = this.pipeState.getTextureUnit(tu.name);
		this.textureUnits.push(unit);
	}
	,__class__: iron_data_ShaderContext
};
var iron_data_WorldData = function(raw,done) {
	var _gthis = this;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	if(raw.probes != null && raw.probes.length > 0) {
		this.probes = [];
		var _g = 0;
		var _g1 = raw.probes;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			new iron_data_Probe(p,function(self) {
				_gthis.probes.push(self);
				if(_gthis.probes.length == raw.probes.length) {
					done(_gthis);
				}
			});
		}
	} else {
		done(this);
	}
};
$hxClasses["iron.data.WorldData"] = iron_data_WorldData;
iron_data_WorldData.__name__ = true;
iron_data_WorldData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getWorldRawByName(format.world_datas,id);
		if(raw == null) {
			haxe_Log.trace("World data \"" + id + "\" not found!",{ fileName : "WorldData.hx", lineNumber : 40, className : "iron.data.WorldData", methodName : "parse"});
			done(null);
		}
		new iron_data_WorldData(raw,done);
	});
};
iron_data_WorldData.__super__ = iron_data_Data;
iron_data_WorldData.prototype = $extend(iron_data_Data.prototype,{
	__class__: iron_data_WorldData
});
var iron_data_Probe = function(raw,done) {
	var _gthis = this;
	this.raw = raw;
	this.setIrradiance(function(irr) {
		_gthis.irradiance = irr;
		if(raw.radiance != null) {
			iron_data_Data.getImage(raw.radiance,function(rad) {
				_gthis.radiance = rad;
				var radianceMipmaps = [];
				while(radianceMipmaps.length < raw.radiance_mipmaps) radianceMipmaps.push(null);
				var ext = raw.radiance.substring(raw.radiance.length - 4);
				var base = raw.radiance.substring(0,raw.radiance.length - 4);
				var mipsLoaded = 0;
				var _g1 = 0;
				var _g = raw.radiance_mipmaps;
				while(_g1 < _g) {
					var i = [_g1++];
					iron_data_Data.getImage(base + "_" + i[0] + ext,(function(i1) {
						return function(mipimg) {
							radianceMipmaps[i1[0]] = mipimg;
							mipsLoaded += 1;
							if(mipsLoaded == raw.radiance_mipmaps) {
								_gthis.radiance.setMipmaps(radianceMipmaps);
								_gthis.mipsSet(done);
							}
						};
					})(i),true);
				}
			});
		} else {
			_gthis.mipsSet(done);
		}
	});
};
$hxClasses["iron.data.Probe"] = iron_data_Probe;
iron_data_Probe.__name__ = true;
iron_data_Probe.prototype = {
	mipsSet: function(done) {
		this.volume = new iron_math_Vec4(this.raw.volume[0],this.raw.volume[1],this.raw.volume[2]);
		this.volumeCenter = new iron_math_Vec4(this.raw.volume_center[0],this.raw.volume_center[1],this.raw.volume_center[2]);
		this.volumeMin = new iron_math_Vec4(this.volumeCenter.x - this.volume.x,this.volumeCenter.y - this.volume.y,this.volumeCenter.z - this.volume.z);
		this.volumeMax = new iron_math_Vec4(this.volumeCenter.x + this.volume.x,this.volumeCenter.y + this.volume.y,this.volumeCenter.z + this.volume.z);
		done(this);
	}
	,setIrradiance: function(done) {
		if(this.raw.irradiance == "") {
			var ar = [0.7759665994411109,1.1676103577251633,1.498638725994038,0.1336947481217397,0.2152815237067897,0.05665912629858376,-0.02226816760879319,-0.019376587567080147,-0.010651384270937897,0.000279290102432495,0.0001858273851672515,6.33030727032015e-05,-6.78543609893525e-05,-0.0003936997772915445,-0.0007750453454300294,0.010973699524451886,0.02726825295855786,0.04391820633315139,0.08526796789315332,0.07367063541652231,0.03887702349408202,-1.34621815948975e-05,-3.9675084850967e-05,-3.7799572176155e-05,0.13517727692935497,0.11561459222778457,0.06079408647605916];
			done(ar);
		} else {
			iron_data_Data.getBlob(this.raw.irradiance + ".arm",function(b) {
				var irradianceData = b;
				var i = new haxe_io_BytesInput(irradianceData.toBytes());
				i.set_bigEndian(true);
				var irradianceParsed = iron_system_ArmPack.read(i);
				var this1 = new Array(28);
				var irr = this1;
				var _g = 0;
				while(_g < 27) {
					var i1 = _g++;
					irr[i1] = irradianceParsed.irradiance[i1];
				}
				irr[27] = 0.0;
				done(irr);
			});
		}
	}
	,__class__: iron_data_Probe
};
var iron_math_Quat = function(x,y,z,w) {
	if(w == null) {
		w = 1.0;
	}
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["iron.math.Quat"] = iron_math_Quat;
iron_math_Quat.__name__ = true;
iron_math_Quat.lerp = function(q1,q2,ratio) {
	var c = new iron_math_Quat();
	var ca = new iron_math_Quat();
	ca.setFrom(q1);
	var dot = q1.dot(q2);
	if(dot < 0.0) {
		ca.w = -ca.w;
		ca.x = -ca.x;
		ca.y = -ca.y;
		ca.z = -ca.z;
	}
	c.x = ca.x + (q2.x - ca.x) * ratio;
	c.y = ca.y + (q2.y - ca.y) * ratio;
	c.z = ca.z + (q2.z - ca.z) * ratio;
	c.w = ca.w + (q2.w - ca.w) * ratio;
	c.normalize();
	return c;
};
iron_math_Quat.slerp = function(q1,q2,v) {
	var c = new iron_math_Quat();
	var cosHalfTheta = q1.dot(q2);
	if(Math.abs(cosHalfTheta) >= 1) {
		c.x = q1.x;
		c.y = q1.y;
		c.z = q1.z;
		c.w = q1.w;
		return c;
	}
	var halfTheta = Math.acos(cosHalfTheta);
	var invSinHalfTheta = 1 / Math.sqrt(1 - cosHalfTheta * cosHalfTheta);
	if(Math.abs(invSinHalfTheta) > 1e3) {
		return iron_math_Quat.lerp(q1,q2,0.5);
	}
	var a = Math.sin((1 - v) * halfTheta) * invSinHalfTheta;
	var b = Math.sin(v * halfTheta) * invSinHalfTheta * (cosHalfTheta < 0 ? -1 : 1);
	c.x = q1.x * a + q2.x * b;
	c.y = q1.y * a + q2.y * b;
	c.z = q1.z * a + q2.z * b;
	c.w = q1.w * a + q2.w * b;
	return c;
};
iron_math_Quat.prototype = {
	set: function(x,y,z,w) {
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
	}
	,fromRotationMat: function(m) {
		var m11 = m.self._00;
		var m12 = m.self._10;
		var m13 = m.self._20;
		var m21 = m.self._01;
		var m22 = m.self._11;
		var m23 = m.self._21;
		var m31 = m.self._02;
		var m32 = m.self._12;
		var m33 = m.self._22;
		var tr = m11 + m22 + m33;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			this.w = 0.25 / s;
			this.x = (m32 - m23) * s;
			this.y = (m13 - m31) * s;
			this.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			this.w = (m32 - m23) / s;
			this.x = 0.25 * s;
			this.y = (m12 + m21) / s;
			this.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			this.w = (m13 - m31) / s;
			this.x = (m12 + m21) / s;
			this.y = 0.25 * s;
			this.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			this.w = (m21 - m12) / s;
			this.x = (m13 + m31) / s;
			this.y = (m23 + m32) / s;
			this.z = 0.25 * s;
		}
		return this;
	}
	,multquats: function(q1,q2) {
		var x2 = q1.x * q2.w + q1.w * q2.x + q1.y * q2.z - q1.z * q2.y;
		var y2 = q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x;
		var z2 = q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w;
		var w2 = q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z;
		this.x = x2;
		this.y = y2;
		this.z = z2;
		this.w = w2;
	}
	,normalize: function() {
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(l == 0.0) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 0;
		} else {
			l = 1.0 / l;
			this.x *= l;
			this.y *= l;
			this.z *= l;
			this.w *= l;
		}
	}
	,setFrom: function(q) {
		this.x = q.x;
		this.y = q.y;
		this.z = q.z;
		this.w = q.w;
	}
	,fromEuler: function(x,y,z) {
		var c1 = Math.cos(x / 2);
		var c2 = Math.cos(y / 2);
		var c3 = Math.cos(z / 2);
		var s1 = Math.sin(x / 2);
		var s2 = Math.sin(y / 2);
		var s3 = Math.sin(z / 2);
		this.x = s1 * c2 * c3 + c1 * s2 * s3;
		this.y = c1 * s2 * c3 + s1 * c2 * s3;
		this.z = c1 * c2 * s3 - s1 * s2 * c3;
		this.w = c1 * c2 * c3 - s1 * s2 * s3;
		return this;
	}
	,toMat: function(m) {
		var x2 = this.x + this.x;
		var y2 = this.y + this.y;
		var z2 = this.z + this.z;
		var xx = this.x * x2;
		var xy = this.x * y2;
		var xz = this.x * z2;
		var yy = this.y * y2;
		var yz = this.y * z2;
		var zz = this.z * z2;
		var wx = this.w * x2;
		var wy = this.w * y2;
		var wz = this.w * z2;
		m.self._00 = 1 - (yy + zz);
		m.self._10 = xy - wz;
		m.self._20 = xz + wy;
		m.self._01 = xy + wz;
		m.self._11 = 1 - (xx + zz);
		m.self._21 = yz - wx;
		m.self._02 = xz - wy;
		m.self._12 = yz + wx;
		m.self._22 = 1 - (xx + yy);
		m.self._03 = 0;
		m.self._13 = 0;
		m.self._23 = 0;
		m.self._30 = 0;
		m.self._31 = 0;
		m.self._32 = 0;
		m.self._33 = 1;
		return m;
	}
	,dot: function(q) {
		return this.x * q.x + this.y * q.y + this.z * q.z + this.w * q.w;
	}
	,__class__: iron_math_Quat
};
var iron_object_Animation = function() {
	this.markerEvents = null;
	this.lastFrameIndex = -1;
	this.blendAction = "";
	this.blendCurrent = 0.0;
	this.blendTime = 0.0;
	this.paused = false;
	this.onComplete = null;
	this.frameIndex = 0;
	this.loop = true;
	this.speed = 1.0;
	this.time = 0.0;
	this.action = "";
	iron_Scene.active.animations.push(this);
	this.frameTime = iron_Scene.active.raw.frame_time;
	this.play();
};
$hxClasses["iron.object.Animation"] = iron_object_Animation;
iron_object_Animation.__name__ = true;
iron_object_Animation.prototype = {
	play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		if(blendTime > 0) {
			this.blendTime = blendTime;
			this.blendCurrent = 0.0;
			this.blendAction = this.action;
		} else {
			this.frameIndex = -1;
		}
		this.action = action;
		this.onComplete = onComplete;
		this.speed = speed;
		this.loop = loop;
		this.paused = false;
	}
	,remove: function() {
		HxOverrides.remove(iron_Scene.active.animations,this);
	}
	,update: function(delta) {
		if(this.paused) {
			return;
		}
		this.time += delta * this.speed;
		if(this.blendTime > 0) {
			this.blendCurrent += delta;
			if(this.blendCurrent >= this.blendTime) {
				this.blendTime = 0.0;
			}
		}
	}
	,rewind: function(track) {
		this.frameIndex = this.speed > 0 ? 0 : track.frames.length - 1;
		this.time = track.frames[this.frameIndex] * this.frameTime;
	}
	,updateTrack: function(anim) {
		if(anim == null) {
			return;
		}
		var track = anim.tracks[0];
		if(this.frameIndex == -1) {
			this.rewind(track);
		}
		var sign = this.speed > 0 ? 1 : -1;
		while(true) {
			var frameValues = track.frames;
			if(!(this.speed > 0 ? this.frameIndex + 1 < frameValues.length && this.time > frameValues[this.frameIndex + 1] * this.frameTime : this.frameIndex - 1 > -1 && this.time < frameValues[this.frameIndex - 1] * this.frameTime)) {
				break;
			}
			this.frameIndex += sign;
		}
		if(this.markerEvents != null && anim.marker_names != null && this.frameIndex != this.lastFrameIndex) {
			var _g1 = 0;
			var _g = anim.marker_frames.length;
			while(_g1 < _g) {
				var i = _g1++;
				if(this.frameIndex == anim.marker_frames[i]) {
					var key = anim.marker_names[i];
					var _this = this.markerEvents;
					var ar = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
					var _g2 = 0;
					while(_g2 < ar.length) {
						var f = ar[_g2];
						++_g2;
						f();
					}
				}
			}
			this.lastFrameIndex = this.frameIndex;
		}
		if(this.speed > 0 ? this.frameIndex >= track.frames.length - 1 : this.frameIndex <= 0) {
			if(this.onComplete != null && this.blendTime == 0) {
				this.onComplete();
			}
			if(this.loop || this.blendTime > 0) {
				this.rewind(track);
			} else {
				this.frameIndex -= sign;
				this.paused = true;
			}
		}
	}
	,updateAnimSampled: function(anim,targetMatrix) {
		if(anim == null) {
			return;
		}
		var track = anim.tracks[0];
		var sign = this.speed > 0 ? 1 : -1;
		var t = this.time;
		var ti = this.frameIndex;
		var t1 = track.frames[ti] * this.frameTime;
		var t2 = track.frames[ti + sign] * this.frameTime;
		var s = (t - t1) / (t2 - t1);
		iron_object_Animation.m1.setF32(track.values,ti * 16);
		iron_object_Animation.m2.setF32(track.values,(ti + sign) * 16);
		iron_object_Animation.m1.decompose(iron_object_Animation.vpos,iron_object_Animation.q1,iron_object_Animation.vscl);
		iron_object_Animation.m2.decompose(iron_object_Animation.vpos2,iron_object_Animation.q2,iron_object_Animation.vscl2);
		var fp = iron_math_Vec4.lerp(iron_object_Animation.vpos,iron_object_Animation.vpos2,1.0 - s);
		var fs = iron_math_Vec4.lerp(iron_object_Animation.vscl,iron_object_Animation.vscl2,1.0 - s);
		var fq = iron_math_Quat.lerp(iron_object_Animation.q1,iron_object_Animation.q2,s);
		var m = targetMatrix;
		fq.toMat(m);
		m.scale(fs);
		m.self._30 = fp.x;
		m.self._31 = fp.y;
		m.self._32 = fp.z;
	}
	,__class__: iron_object_Animation
};
var iron_object_BoneAnimation = function(armatureName) {
	if(armatureName == null) {
		armatureName = "";
	}
	this.bm = iron_math_Mat4.identity();
	this.m2 = iron_math_Mat4.identity();
	this.m1 = iron_math_Mat4.identity();
	this.m = iron_math_Mat4.identity();
	this.boneChildren = null;
	this.skeletonMatsBlend = null;
	this.skeletonBonesBlend = null;
	this.skeletonMats = null;
	this.skeletonBones = null;
	iron_object_Animation.call(this);
	this.isSampled = false;
	var _g = 0;
	var _g1 = iron_Scene.active.armatures;
	while(_g < _g1.length) {
		var a = _g1[_g];
		++_g;
		if(a.name == armatureName) {
			this.armature = a;
			break;
		}
	}
};
$hxClasses["iron.object.BoneAnimation"] = iron_object_BoneAnimation;
iron_object_BoneAnimation.__name__ = true;
iron_object_BoneAnimation.__super__ = iron_object_Animation;
iron_object_BoneAnimation.prototype = $extend(iron_object_Animation.prototype,{
	setSkin: function(mo) {
		var _gthis = this;
		this.object = mo;
		this.data = mo != null ? mo.data : null;
		this.isSkinned = this.data != null && this.data.isSkinned;
		if(this.isSkinned) {
			var length = iron_object_BoneAnimation.skinMaxBones * 8;
			var this1 = new Array(length);
			this.skinBuffer = this1;
			var _g1 = 0;
			var _g = this.skinBuffer.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.skinBuffer[i] = 0;
			}
			var refs = mo.parent.raw.bone_actions;
			if(refs != null && refs.length > 0) {
				iron_data_Data.getSceneRaw(refs[0],function(action) {
					_gthis.play(action.name);
				});
			}
		}
	}
	,addBoneChild: function(bone,mo) {
		if(this.boneChildren == null) {
			this.boneChildren = new haxe_ds_StringMap();
		}
		var _this = this.boneChildren;
		var ar = __map_reserved[bone] != null ? _this.getReserved(bone) : _this.h[bone];
		if(ar == null) {
			ar = [];
			var _this1 = this.boneChildren;
			if(__map_reserved[bone] != null) {
				_this1.setReserved(bone,ar);
			} else {
				_this1.h[bone] = ar;
			}
		}
		ar.push(mo);
	}
	,updateBoneChildren: function(bone,bm) {
		var key = bone.name;
		var _this = this.boneChildren;
		var ar = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(ar == null) {
			return;
		}
		var _g = 0;
		while(_g < ar.length) {
			var o = ar[_g];
			++_g;
			var t = o.transform;
			if(t.boneParent == null) {
				t.boneParent = iron_math_Mat4.identity();
			}
			if(o.raw.parent_bone_tail != null) {
				var v = o.raw.parent_bone_tail;
				t.boneParent.initTranslate(v[0],v[1],v[2]);
				t.boneParent.multmat2(bm);
			} else {
				t.boneParent.setFrom(bm);
			}
			t.buildMatrix();
		}
	}
	,setAction: function(action) {
		if(this.isSkinned) {
			var _this = this.data.geom.actions;
			this.skeletonBones = __map_reserved[action] != null ? _this.getReserved(action) : _this.h[action];
			var _this1 = this.data.geom.mats;
			this.skeletonMats = __map_reserved[action] != null ? _this1.getReserved(action) : _this1.h[action];
		} else {
			this.armature.initMats();
			var a = this.armature.getAction(action);
			this.skeletonBones = a.bones;
			this.skeletonMats = a.mats;
		}
	}
	,setActionBlend: function(action) {
		if(this.isSkinned) {
			this.skeletonBonesBlend = this.skeletonBones;
			this.skeletonMatsBlend = this.skeletonMats;
			var _this = this.data.geom.actions;
			this.skeletonBones = __map_reserved[action] != null ? _this.getReserved(action) : _this.h[action];
			var _this1 = this.data.geom.mats;
			this.skeletonMats = __map_reserved[action] != null ? _this1.getReserved(action) : _this1.h[action];
		} else {
			this.armature.initMats();
			var a = this.armature.getAction(action);
			this.skeletonBones = a.bones;
			this.skeletonMats = a.mats;
		}
	}
	,play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		iron_object_Animation.prototype.play.call(this,action,onComplete,blendTime,speed,loop);
		if(action != "") {
			if(blendTime > 0) {
				this.setActionBlend(action);
			} else {
				this.setAction(action);
			}
		}
	}
	,update: function(delta) {
		if(!this.isSkinned && this.skeletonBones == null) {
			this.setAction(this.armature.actions[0].name);
		}
		if(this.object != null && (!this.object.visible || this.object.culled)) {
			return;
		}
		if(this.skeletonBones == null || this.skeletonBones.length == 0) {
			return;
		}
		iron_object_Animation.prototype.update.call(this,delta);
		if(this.paused) {
			return;
		}
		this.updateAnim();
	}
	,updateAnim: function() {
		var _g = 0;
		var _g1 = this.skeletonBones;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.anim != null) {
				this.updateTrack(b.anim);
				break;
			}
		}
		var _g2 = 0;
		var _g11 = this.skeletonBones;
		while(_g2 < _g11.length) {
			var b1 = _g11[_g2];
			++_g2;
			this.updateAnimSampled(b1.anim,this.skeletonMats.h[b1.__id__]);
		}
		if(this.blendTime > 0 && this.skeletonBonesBlend != null) {
			var _g3 = 0;
			var _g12 = this.skeletonBonesBlend;
			while(_g3 < _g12.length) {
				var b2 = _g12[_g3];
				++_g3;
				if(b2.anim != null) {
					this.updateTrack(b2.anim);
					break;
				}
			}
			var _g4 = 0;
			var _g13 = this.skeletonBonesBlend;
			while(_g4 < _g13.length) {
				var b3 = _g13[_g4];
				++_g4;
				this.updateAnimSampled(b3.anim,this.skeletonMatsBlend.h[b3.__id__]);
			}
		}
		if(this.isSkinned) {
			this.updateSkinGpu();
		} else {
			this.updateBonesOnly();
		}
	}
	,updateBonesOnly: function() {
		var _g = 0;
		var _g1 = this.skeletonBones;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			this.m.setFrom(this.skeletonMats.h[b.__id__]);
			this.applyParent(this.m,b,this.skeletonMats);
			if(this.boneChildren != null) {
				this.updateBoneChildren(b,this.m);
			}
		}
	}
	,applyParent: function(m,bone,mats) {
		var p = bone.parent;
		while(p != null) {
			var pm = mats.h[p.__id__];
			if(pm == null) {
				pm = iron_math_Mat4.fromFloat32Array(p.transform.values);
				mats.set(p,pm);
			}
			m.multmat2(pm);
			p = p.parent;
		}
	}
	,updateSkinGpu: function() {
		var bones = this.skeletonBones;
		var s = this.blendCurrent / this.blendTime;
		s = s * s * (3.0 - 2.0 * s);
		var _g1 = 0;
		var _g = bones.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.bm.setFrom(this.data.geom.skinTransform);
			this.bm.multmat2(this.data.geom.skeletonTransformsI[i]);
			if(this.blendTime > 0) {
				var bonesBlend = this.skeletonBonesBlend;
				this.m1.setFrom(this.skeletonMatsBlend.h[bonesBlend[i].__id__]);
				this.applyParent(this.m1,bonesBlend[i],this.skeletonMatsBlend);
				this.m2.setFrom(this.skeletonMats.h[bones[i].__id__]);
				this.applyParent(this.m2,bones[i],this.skeletonMats);
				this.m1.decompose(iron_object_BoneAnimation.vpos,iron_object_BoneAnimation.q1,iron_object_BoneAnimation.vscl);
				this.m2.decompose(iron_object_BoneAnimation.vpos2,iron_object_BoneAnimation.q2,iron_object_BoneAnimation.vscl2);
				var fp = iron_math_Vec4.lerp(iron_object_BoneAnimation.vpos,iron_object_BoneAnimation.vpos2,1.0 - s);
				var fs = iron_math_Vec4.lerp(iron_object_BoneAnimation.vscl,iron_object_BoneAnimation.vscl2,1.0 - s);
				var fq = iron_math_Quat.lerp(iron_object_BoneAnimation.q1,iron_object_BoneAnimation.q2,s);
				fq.toMat(this.m);
				this.m.scale(fs);
				this.m.self._30 = fp.x;
				this.m.self._31 = fp.y;
				this.m.self._32 = fp.z;
			} else {
				this.m.setFrom(this.skeletonMats.h[bones[i].__id__]);
				this.applyParent(this.m,bones[i],this.skeletonMats);
			}
			this.bm.multmat2(this.m);
			if(this.boneChildren != null) {
				this.updateBoneChildren(bones[i],this.m);
			}
			this.bm.decompose(iron_object_BoneAnimation.vpos,iron_object_BoneAnimation.q1,iron_object_BoneAnimation.vscl);
			iron_object_BoneAnimation.q1.normalize();
			iron_object_BoneAnimation.q2.set(iron_object_BoneAnimation.vpos.x,iron_object_BoneAnimation.vpos.y,iron_object_BoneAnimation.vpos.z,0.0);
			iron_object_BoneAnimation.q2.multquats(iron_object_BoneAnimation.q2,iron_object_BoneAnimation.q1);
			iron_object_BoneAnimation.q2.x *= 0.5;
			iron_object_BoneAnimation.q2.y *= 0.5;
			iron_object_BoneAnimation.q2.z *= 0.5;
			iron_object_BoneAnimation.q2.w *= 0.5;
			this.skinBuffer[i * 8] = iron_object_BoneAnimation.q1.x;
			this.skinBuffer[i * 8 + 1] = iron_object_BoneAnimation.q1.y;
			this.skinBuffer[i * 8 + 2] = iron_object_BoneAnimation.q1.z;
			this.skinBuffer[i * 8 + 3] = iron_object_BoneAnimation.q1.w;
			this.skinBuffer[i * 8 + 4] = iron_object_BoneAnimation.q2.x;
			this.skinBuffer[i * 8 + 5] = iron_object_BoneAnimation.q2.y;
			this.skinBuffer[i * 8 + 6] = iron_object_BoneAnimation.q2.z;
			this.skinBuffer[i * 8 + 7] = iron_object_BoneAnimation.q2.w;
		}
	}
	,__class__: iron_object_BoneAnimation
});
var iron_object_Object = function() {
	this.isEmpty = false;
	this.culled = false;
	this.visibleShadow = true;
	this.visibleMesh = true;
	this.visible = true;
	this.animation = null;
	this.children = [];
	this.parent = null;
	this.traits = [];
	this.constraints = null;
	this.name = "";
	this.raw = null;
	this.uid = iron_object_Object.uidCounter++;
	this.urandom = iron_object_Object.seededRandom();
	this.transform = new iron_object_Transform(this);
	this.isEmpty = js_Boot.getClass(this) == iron_object_Object;
	if(this.isEmpty && iron_Scene.active != null) {
		iron_Scene.active.empties.push(this);
	}
};
$hxClasses["iron.object.Object"] = iron_object_Object;
iron_object_Object.__name__ = true;
iron_object_Object.seededRandom = function() {
	iron_object_Object.seed = (iron_object_Object.seed * 9301 + 49297) % 233280;
	return iron_object_Object.seed / 233280.0;
};
iron_object_Object.prototype = {
	addChild: function(o,parentInverse) {
		if(parentInverse == null) {
			parentInverse = false;
		}
		if(o.parent == this) {
			return;
		}
		this.children.push(o);
		o.parent = this;
		if(parentInverse) {
			o.transform.applyParentInverse();
		}
	}
	,remove: function() {
		if(this.isEmpty && iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.empties,this);
		}
		if(this.animation != null) {
			this.animation.remove();
		}
		while(this.children.length > 0) this.children[0].remove();
		while(this.traits.length > 0) this.traits[0].remove();
		if(this.parent != null) {
			HxOverrides.remove(this.parent.children,this);
			this.parent = null;
		}
	}
	,getChild: function(name) {
		if(this.name == name) {
			return this;
		} else {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var r = c.getChild(name);
				if(r != null) {
					return r;
				}
			}
		}
		return null;
	}
	,addTrait: function(t) {
		this.traits.push(t);
		t.object = this;
		if(t._add != null) {
			var _g = 0;
			var _g1 = t._add;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			t._add = null;
		}
	}
	,removeTrait: function(t) {
		if(t._init != null) {
			var _g = 0;
			var _g1 = t._init;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				iron_App.removeInit(f);
			}
			t._init = null;
		}
		if(t._update != null) {
			var _g2 = 0;
			var _g11 = t._update;
			while(_g2 < _g11.length) {
				var f1 = _g11[_g2];
				++_g2;
				iron_App.removeUpdate(f1);
			}
			t._update = null;
		}
		if(t._lateUpdate != null) {
			var _g3 = 0;
			var _g12 = t._lateUpdate;
			while(_g3 < _g12.length) {
				var f2 = _g12[_g3];
				++_g3;
				iron_App.removeLateUpdate(f2);
			}
			t._lateUpdate = null;
		}
		if(t._render != null) {
			var _g4 = 0;
			var _g13 = t._render;
			while(_g4 < _g13.length) {
				var f3 = _g13[_g4];
				++_g4;
				iron_App.removeRender(f3);
			}
			t._render = null;
		}
		if(t._render2D != null) {
			var _g5 = 0;
			var _g14 = t._render2D;
			while(_g5 < _g14.length) {
				var f4 = _g14[_g5];
				++_g5;
				iron_App.removeRender2D(f4);
			}
			t._render2D = null;
		}
		if(t._remove != null) {
			var _g6 = 0;
			var _g15 = t._remove;
			while(_g6 < _g15.length) {
				var f5 = _g15[_g6];
				++_g6;
				f5();
			}
			t._remove = null;
		}
		HxOverrides.remove(this.traits,t);
		t.object = null;
	}
	,setupAnimation: function(oactions) {
		if(oactions == null) {
			return;
		}
		this.animation = new iron_object_ObjectAnimation(this,oactions);
	}
	,__class__: iron_object_Object
};
var iron_object_CameraObject = function(data) {
	this.frustumPlanes = null;
	this.prevV = null;
	iron_object_Object.call(this);
	this.data = data;
	this.nearPlane = data.raw.near_plane;
	this.farPlane = data.raw.far_plane;
	this.buildProjection();
	this.V = iron_math_Mat4.identity();
	this.VP = iron_math_Mat4.identity();
	if(data.raw.frustum_culling) {
		this.frustumPlanes = [];
		var _g = 0;
		while(_g < 6) {
			var i = _g++;
			this.frustumPlanes.push(new iron_object_FrustumPlane());
		}
	}
	iron_Scene.active.cameras.push(this);
};
$hxClasses["iron.object.CameraObject"] = iron_object_CameraObject;
iron_object_CameraObject.__name__ = true;
iron_object_CameraObject.buildViewFrustum = function(VP,frustumPlanes) {
	var _this = frustumPlanes[0];
	var w = VP.self._33 + VP.self._30;
	_this.normal.set(VP.self._03 + VP.self._00,VP.self._13 + VP.self._10,VP.self._23 + VP.self._20);
	_this.constant = w;
	var _this1 = frustumPlanes[1];
	var w1 = VP.self._33 - VP.self._30;
	_this1.normal.set(VP.self._03 - VP.self._00,VP.self._13 - VP.self._10,VP.self._23 - VP.self._20);
	_this1.constant = w1;
	var _this2 = frustumPlanes[2];
	var w2 = VP.self._33 - VP.self._31;
	_this2.normal.set(VP.self._03 - VP.self._01,VP.self._13 - VP.self._11,VP.self._23 - VP.self._21);
	_this2.constant = w2;
	var _this3 = frustumPlanes[3];
	var w3 = VP.self._33 + VP.self._31;
	_this3.normal.set(VP.self._03 + VP.self._01,VP.self._13 + VP.self._11,VP.self._23 + VP.self._21);
	_this3.constant = w3;
	var _this4 = frustumPlanes[4];
	var w4 = VP.self._32;
	_this4.normal.set(VP.self._02,VP.self._12,VP.self._22);
	_this4.constant = w4;
	var _this5 = frustumPlanes[5];
	var w5 = VP.self._33 - VP.self._32;
	_this5.normal.set(VP.self._03 - VP.self._02,VP.self._13 - VP.self._12,VP.self._23 - VP.self._22);
	_this5.constant = w5;
	var _g = 0;
	while(_g < frustumPlanes.length) {
		var plane = frustumPlanes[_g];
		++_g;
		plane.normalize();
	}
};
iron_object_CameraObject.__super__ = iron_object_Object;
iron_object_CameraObject.prototype = $extend(iron_object_Object.prototype,{
	buildProjection: function() {
		if(this.data.raw.type == "perspective") {
			var aspect = this.data.raw.aspect != null ? this.data.raw.aspect : kha_System.windowWidth() / kha_System.windowHeight();
			this.P = iron_math_Mat4.perspective(this.data.raw.fov,aspect,this.nearPlane,this.farPlane);
		} else if(this.data.raw.type == "orthographic") {
			this.P = iron_math_Mat4.orthogonal(-10,10,-6,6,-this.farPlane,this.farPlane);
		}
	}
	,remove: function() {
		HxOverrides.remove(iron_Scene.active.cameras,this);
		iron_object_Object.prototype.remove.call(this);
	}
	,renderFrame: function(g) {
		this.buildMatrix();
		if(this.prevV == null) {
			this.prevV = iron_math_Mat4.identity();
			this.prevV.setFrom(this.V);
		}
		iron_RenderPath.active.renderFrame(g);
		this.prevV.setFrom(this.V);
	}
	,buildMatrix: function() {
		this.transform.buildMatrix();
		var sc = this.transform.world.getScale();
		iron_object_CameraObject.temp.set(1.0 / sc.x,1.0 / sc.y,1.0 / sc.z);
		this.transform.world.scale(iron_object_CameraObject.temp);
		this.V.getInverse(this.transform.world);
		this.VP.multmats(this.P,this.V);
		if(this.data.raw.frustum_culling) {
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
	}
	,__class__: iron_object_CameraObject
});
var iron_object_FrustumPlane = function() {
	this.constant = 0.0;
	this.normal = new iron_math_Vec4(1.0,0.0,0.0);
};
$hxClasses["iron.object.FrustumPlane"] = iron_object_FrustumPlane;
iron_object_FrustumPlane.__name__ = true;
iron_object_FrustumPlane.prototype = {
	normalize: function() {
		var _this = this.normal;
		var inverseNormalLength = 1.0 / Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		this.normal.mult(inverseNormalLength);
		this.constant *= inverseNormalLength;
	}
	,__class__: iron_object_FrustumPlane
};
var iron_object_Constraint = function(constr) {
	this.target = null;
	this.raw = constr;
};
$hxClasses["iron.object.Constraint"] = iron_object_Constraint;
iron_object_Constraint.__name__ = true;
iron_object_Constraint.prototype = {
	apply: function(transform) {
		if(this.target == null && this.raw.target != null) {
			this.target = iron_Scene.active.getChild(this.raw.target).transform;
		}
		if(this.raw.type == "COPY_LOCATION") {
			if(this.raw.use_x) {
				transform.world.self._30 = this.target.loc.x;
				if(this.raw.use_offset) {
					var _g = transform.world;
					_g.self._30 += transform.loc.x;
				}
			}
			if(this.raw.use_y) {
				transform.world.self._31 = this.target.loc.y;
				if(this.raw.use_offset) {
					var _g1 = transform.world;
					_g1.self._31 += transform.loc.y;
				}
			}
			if(this.raw.use_z) {
				transform.world.self._32 = this.target.loc.z;
				if(this.raw.use_offset) {
					var _g2 = transform.world;
					_g2.self._32 += transform.loc.z;
				}
			}
		}
	}
	,__class__: iron_object_Constraint
};
var iron_object_DecalObject = function(material) {
	iron_object_Object.call(this);
	this.material = material;
	iron_Scene.active.decals.push(this);
};
$hxClasses["iron.object.DecalObject"] = iron_object_DecalObject;
iron_object_DecalObject.__name__ = true;
iron_object_DecalObject.__super__ = iron_object_Object;
iron_object_DecalObject.prototype = $extend(iron_object_Object.prototype,{
	remove: function() {
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.decals,this);
		}
		iron_object_Object.prototype.remove.call(this);
	}
	,__class__: iron_object_DecalObject
});
var iron_object_LampObject = function(data) {
	this.frustumPlanes = null;
	this.VP = iron_math_Mat4.identity();
	this.P = null;
	this.V = iron_math_Mat4.identity();
	iron_object_Object.call(this);
	this.data = data;
	var type = data.raw.type;
	var fov = data.raw.fov;
	if(type == "sun") {
		if(iron_object_LampObject.corners == null) {
			iron_object_LampObject.corners = [];
			var _g = 0;
			while(_g < 8) {
				var i = _g++;
				iron_object_LampObject.corners.push(new iron_math_Vec4());
			}
		}
		this.P = iron_math_Mat4.identity();
	} else if(type == "point" || type == "area") {
		this.P = iron_math_Mat4.perspective(fov,1,data.raw.near_plane,data.raw.far_plane);
	} else if(type == "spot") {
		this.P = iron_math_Mat4.perspective(fov,1,data.raw.near_plane,data.raw.far_plane);
	}
	iron_Scene.active.lamps.push(this);
};
$hxClasses["iron.object.LampObject"] = iron_object_LampObject;
iron_object_LampObject.__name__ = true;
iron_object_LampObject.__super__ = iron_object_Object;
iron_object_LampObject.prototype = $extend(iron_object_Object.prototype,{
	remove: function() {
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.lamps,this);
		}
		iron_object_Object.prototype.remove.call(this);
	}
	,buildMatrices: function(camera) {
		this.transform.buildMatrix();
		if(this.data.raw.type != "sun") {
			this.V.getInverse(this.transform.world);
			this.updateViewFrustum(camera);
		}
	}
	,updateViewFrustum: function(camera) {
		this.VP.multmats(this.P,this.V);
		if(camera.data.raw.frustum_culling) {
			if(this.frustumPlanes == null) {
				this.frustumPlanes = [];
				var _g = 0;
				while(_g < 6) {
					var i = _g++;
					this.frustumPlanes.push(new iron_object_FrustumPlane());
				}
			}
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
	}
	,__class__: iron_object_LampObject
});
var iron_object_MeshObject = function(data,materials) {
	this.tilesheet = null;
	this.particleSystems = null;
	this.data = null;
	iron_object_Object.call(this);
	this.setData(data);
	this.materials = materials;
	iron_Scene.active.meshes.push(this);
};
$hxClasses["iron.object.MeshObject"] = iron_object_MeshObject;
iron_object_MeshObject.__name__ = true;
iron_object_MeshObject.__super__ = iron_object_Object;
iron_object_MeshObject.prototype = $extend(iron_object_Object.prototype,{
	setData: function(data) {
		this.data = data;
		data.refcount++;
		var makeBuffers = true;
		if(makeBuffers) {
			data.geom.build();
		}
	}
	,remove: function() {
		if(this.particleSystems != null) {
			var _g = 0;
			var _g1 = this.particleSystems;
			while(_g < _g1.length) {
				var psys = _g1[_g];
				++_g;
				psys.remove();
			}
			this.particleSystems = null;
		}
		if(this.tilesheet != null) {
			this.tilesheet.remove();
		}
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.meshes,this);
		}
		this.data.refcount--;
		iron_object_Object.prototype.remove.call(this);
	}
	,setupAnimation: function(oactions) {
		var hasAction = this.parent != null && this.parent.raw != null && this.parent.raw.bone_actions != null;
		if(hasAction) {
			var armatureName = this.parent.name;
			var _g = 0;
			var _g1 = iron_Scene.active.animations;
			while(_g < _g1.length) {
				var a = _g1[_g];
				++_g;
				if(a.armature != null && a.armature.name == armatureName) {
					this.animation = a;
					break;
				}
			}
			if(this.animation == null) {
				this.animation = new iron_object_BoneAnimation(armatureName);
			}
			var banimation = js_Boot.__cast(this.animation , iron_object_BoneAnimation);
			if(this.data.isSkinned) {
				banimation.setSkin(this);
			} else if(this.raw.parent_bone != null) {
				banimation.addBoneChild(this.raw.parent_bone,this);
			}
		}
		iron_object_Object.prototype.setupAnimation.call(this,oactions);
	}
	,setupParticleSystem: function(sceneName,pref) {
		if(this.particleSystems == null) {
			this.particleSystems = [];
		}
		var psys = new iron_object_ParticleSystem(sceneName,pref);
		this.particleSystems.push(psys);
	}
	,setupTilesheet: function(sceneName,tilesheet_ref,tilesheet_action_ref) {
		this.tilesheet = new iron_object_Tilesheet(sceneName,tilesheet_ref,tilesheet_action_ref);
	}
	,__class__: iron_object_MeshObject
});
var iron_object_ObjectAnimation = function(object,oactions) {
	this.object = object;
	this.oactions = oactions;
	this.isSkinned = false;
	iron_object_Animation.call(this);
};
$hxClasses["iron.object.ObjectAnimation"] = iron_object_ObjectAnimation;
iron_object_ObjectAnimation.__name__ = true;
iron_object_ObjectAnimation.__super__ = iron_object_Animation;
iron_object_ObjectAnimation.prototype = $extend(iron_object_Animation.prototype,{
	getAction: function(action) {
		var _g = 0;
		var _g1 = this.oactions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.objects[0].name == action) {
				return a.objects[0];
			}
		}
		return null;
	}
	,play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		iron_object_Animation.prototype.play.call(this,action,onComplete,blendTime,speed,loop);
		if(this.action == "") {
			this.action = this.oactions[0].objects[0].name;
		}
		this.oaction = this.getAction(this.action);
		if(this.oaction != null) {
			this.isSampled = this.oaction.sampled != null && this.oaction.sampled;
		}
	}
	,update: function(delta) {
		if(!this.object.visible || this.object.culled) {
			return;
		}
		iron_object_Animation.prototype.update.call(this,delta);
		if(this.paused) {
			return;
		}
		if(!this.isSkinned) {
			this.updateObjectAnim();
		}
	}
	,updateObjectAnim: function() {
		if(this.isSampled) {
			this.updateTrack(this.oaction.anim);
			this.updateAnimSampled(this.oaction.anim,this.object.transform.world);
			this.object.transform.world.decompose(this.object.transform.loc,this.object.transform.rot,this.object.transform.scale);
			var _g = 0;
			var _g1 = this.object.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.transform.buildMatrix();
			}
		} else {
			this.updateAnimNonSampled(this.oaction.anim,this.object.transform);
			this.object.transform.buildMatrix();
		}
	}
	,interpolateLinear: function(t,t1,t2) {
		return (t - t1) / (t2 - t1);
	}
	,interpolateBezier: function(t,t1,t2) {
		var k = (t - t1) / (t2 - t1);
		k = k * k * (3.0 - 2.0 * k);
		return k;
	}
	,updateAnimNonSampled: function(anim,transform) {
		if(anim == null) {
			return;
		}
		var total = anim.end * this.frameTime - anim.begin * this.frameTime;
		if(anim.has_delta) {
			var t = transform;
			if(t.dloc == null) {
				t.dloc = new iron_math_Vec4();
				t.drot = new iron_math_Quat();
				t.dscale = new iron_math_Vec4();
			}
			t.dloc.set(0,0,0);
			t.dscale.set(0,0,0);
			t._deulerX = t._deulerY = t._deulerZ = 0.0;
		}
		var _g = 0;
		var _g1 = anim.tracks;
		while(_g < _g1.length) {
			var track = _g1[_g];
			++_g;
			if(this.frameIndex == -1) {
				this.rewind(track);
			}
			var sign = this.speed > 0 ? 1 : -1;
			var t1 = this.time + anim.begin * this.frameTime;
			while(true) {
				var frameValues = track.frames;
				if(!(this.speed > 0 ? this.frameIndex < frameValues.length - 2 && t1 > frameValues[this.frameIndex + 1] * this.frameTime : this.frameIndex > 1 && t1 > frameValues[this.frameIndex - 1] * this.frameTime)) {
					break;
				}
				this.frameIndex += sign;
			}
			if(this.frameIndex >= track.frames.length) {
				continue;
			}
			if(this.time > total) {
				if(this.onComplete != null) {
					this.onComplete();
				}
				this.rewind(track);
				if(this.paused) {
					return;
				}
			}
			var ti = this.frameIndex;
			var t11 = track.frames[ti] * this.frameTime;
			var t2 = track.frames[ti + sign] * this.frameTime;
			var interpolate = $bind(this,this.interpolateLinear);
			var _g2 = track.curve;
			switch(_g2) {
			case "bezier":
				interpolate = $bind(this,this.interpolateBezier);
				break;
			case "linear":
				interpolate = $bind(this,this.interpolateLinear);
				break;
			}
			var s = interpolate(t1,t11,t2);
			var invs = 1.0 - s;
			var v1 = track.values[ti];
			var v2 = track.values[ti + sign];
			var v = v1 * invs + v2 * s;
			var _g3 = track.target;
			switch(_g3) {
			case "dxloc":
				transform.dloc.x = v;
				break;
			case "dxrot":
				transform._deulerX = v;
				break;
			case "dxscl":
				transform.dscale.x = v;
				break;
			case "dyloc":
				transform.dloc.y = v;
				break;
			case "dyrot":
				transform._deulerY = v;
				break;
			case "dyscl":
				transform.dscale.y = v;
				break;
			case "dzloc":
				transform.dloc.z = v;
				break;
			case "dzrot":
				transform._deulerZ = v;
				break;
			case "dzscl":
				transform.dscale.z = v;
				break;
			case "xloc":
				transform.loc.x = v;
				break;
			case "xrot":
				transform.setRotation(v,transform._eulerY,transform._eulerZ);
				break;
			case "xscl":
				transform.scale.x = v;
				break;
			case "yloc":
				transform.loc.y = v;
				break;
			case "yrot":
				transform.setRotation(transform._eulerX,v,transform._eulerZ);
				break;
			case "yscl":
				transform.scale.y = v;
				break;
			case "zloc":
				transform.loc.z = v;
				break;
			case "zrot":
				transform.setRotation(transform._eulerX,transform._eulerY,v);
				break;
			case "zscl":
				transform.scale.z = v;
				break;
			}
		}
	}
	,__class__: iron_object_ObjectAnimation
});
var iron_object_ParticleSystem = function(sceneName,pref) {
	this.seed = 0.0;
	this.spawnRate = 0.0;
	this.animtime = 0.0;
	this.lifetime = 0.0;
	this.frameRate = 24;
	var _gthis = this;
	this.seed = pref.seed;
	this.particles = [];
	this.ready = false;
	iron_data_Data.getParticle(sceneName,pref.particle,function(b) {
		_gthis.data = b;
		_gthis.r = _gthis.data.raw;
		_gthis.gx = iron_Scene.active.raw.gravity[0] * _gthis.r.weight_gravity;
		_gthis.gy = iron_Scene.active.raw.gravity[1] * _gthis.r.weight_gravity;
		_gthis.gz = iron_Scene.active.raw.gravity[2] * _gthis.r.weight_gravity;
		_gthis.alignx = _gthis.r.object_align_factor[0] / 2;
		_gthis.aligny = _gthis.r.object_align_factor[1] / 2;
		_gthis.alignz = _gthis.r.object_align_factor[2] / 2;
		_gthis.lifetime = _gthis.r.lifetime / _gthis.frameRate;
		_gthis.animtime = (_gthis.r.frame_end - _gthis.r.frame_start) / _gthis.frameRate;
		_gthis.spawnRate = (_gthis.r.frame_end - _gthis.r.frame_start) / _gthis.r.count / _gthis.frameRate;
		var _g1 = 0;
		var _g = _gthis.r.count;
		while(_g1 < _g) {
			var i = _g1++;
			_gthis.particles.push(new iron_object_Particle(i));
		}
		_gthis.ready = true;
	});
};
$hxClasses["iron.object.ParticleSystem"] = iron_object_ParticleSystem;
iron_object_ParticleSystem.__name__ = true;
iron_object_ParticleSystem.prototype = {
	remove: function() {
	}
	,__class__: iron_object_ParticleSystem
};
var iron_object_Particle = function(i) {
	this.i = i;
};
$hxClasses["iron.object.Particle"] = iron_object_Particle;
iron_object_Particle.__name__ = true;
iron_object_Particle.prototype = {
	__class__: iron_object_Particle
};
var iron_object_SpeakerObject = function(data) {
	this.sound = null;
	var _gthis = this;
	iron_object_Object.call(this);
	this.data = data;
	iron_Scene.active.speakers.push(this);
	if(data.sound == "") {
		return;
	}
	iron_data_Data.getSound(data.sound,function(sound) {
		_gthis.sound = sound;
		if(_gthis.visible) {
			iron_Scene.active.notifyOnInit($bind(_gthis,_gthis.play));
		}
	});
};
$hxClasses["iron.object.SpeakerObject"] = iron_object_SpeakerObject;
iron_object_SpeakerObject.__name__ = true;
iron_object_SpeakerObject.__super__ = iron_object_Object;
iron_object_SpeakerObject.prototype = $extend(iron_object_Object.prototype,{
	play: function() {
		if(this.sound == null || this.data.muted) {
			return;
		}
		iron_system_Audio.play(this.sound,this.data.loop);
	}
	,remove: function() {
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.speakers,this);
		}
		iron_object_Object.prototype.remove.call(this);
	}
	,__class__: iron_object_SpeakerObject
});
var iron_object_Tilesheet = function(sceneName,tilesheet_ref,tilesheet_action_ref) {
	this.onActionComplete = null;
	this.time = 0.0;
	this.frame = 0;
	this.paused = false;
	this.action = null;
	this.tileY = 0.0;
	this.tileX = 0.0;
	var _gthis = this;
	this.ready = false;
	iron_data_Data.getSceneRaw(sceneName,function(format) {
		var _g = 0;
		var _g1 = format.tilesheet_datas;
		while(_g < _g1.length) {
			var ts = _g1[_g];
			++_g;
			if(ts.name == tilesheet_ref) {
				_gthis.raw = ts;
				_gthis.play(tilesheet_action_ref);
				_gthis.ready = true;
				break;
			}
		}
	});
};
$hxClasses["iron.object.Tilesheet"] = iron_object_Tilesheet;
iron_object_Tilesheet.__name__ = true;
iron_object_Tilesheet.prototype = {
	play: function(action_ref,onActionComplete) {
		this.onActionComplete = onActionComplete;
		var _g = 0;
		var _g1 = this.raw.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.name == action_ref) {
				this.action = a;
				break;
			}
		}
		this.setFrame(this.action.start);
		this.paused = false;
	}
	,remove: function() {
	}
	,setFrame: function(f) {
		this.frame = f;
		this.time = 0;
		var tx = this.frame % this.raw.tilesx;
		var ty = this.frame / this.raw.tilesx | 0;
		this.tileX = tx * (1 / this.raw.tilesx);
		this.tileY = ty * (1 / this.raw.tilesy);
		if(this.frame >= this.action.end && this.action.start < this.action.end) {
			if(this.onActionComplete != null) {
				this.onActionComplete();
			}
			if(this.action.loop) {
				this.setFrame(this.action.start);
			} else {
				this.paused = true;
			}
		}
	}
	,__class__: iron_object_Tilesheet
};
var iron_object_Transform = function(object) {
	this.dscale = null;
	this.drot = null;
	this.dloc = null;
	this.boneParent = null;
	this.appendMats = null;
	this.prependMats = null;
	this.localOnly = false;
	this.object = object;
	this.reset();
};
$hxClasses["iron.object.Transform"] = iron_object_Transform;
iron_object_Transform.__name__ = true;
iron_object_Transform.prototype = {
	reset: function() {
		this.world = iron_math_Mat4.identity();
		this.local = iron_math_Mat4.identity();
		this.loc = new iron_math_Vec4();
		this.rot = new iron_math_Quat();
		this.scale = new iron_math_Vec4(1.0,1.0,1.0);
		this.dim = new iron_math_Vec4(2.0,2.0,2.0);
		this.dirty = true;
	}
	,update: function() {
		if(this.dirty) {
			this.dirty = false;
			this.buildMatrix();
		}
	}
	,composeDelta: function() {
		this.dloc.addvecs(this.loc,this.dloc);
		this.dscale.addvecs(this.dscale,this.scale);
		this.drot.fromEuler(this._deulerX,this._deulerY,this._deulerZ);
		this.drot.multquats(this.rot,this.drot);
		this.local.compose(this.dloc,this.drot,this.dscale);
	}
	,buildMatrix: function() {
		if(this.dloc == null) {
			this.local.compose(this.loc,this.rot,this.scale);
		} else {
			this.composeDelta();
		}
		if(this.prependMats != null) {
			iron_object_Transform.temp.setIdentity();
			var _g = 0;
			var _g1 = this.prependMats;
			while(_g < _g1.length) {
				var m = _g1[_g];
				++_g;
				iron_object_Transform.temp.multmat2(m);
			}
			iron_object_Transform.temp.multmat2(this.local);
			this.local.setFrom(iron_object_Transform.temp);
		}
		if(this.appendMats != null) {
			var _g2 = 0;
			var _g11 = this.appendMats;
			while(_g2 < _g11.length) {
				var m1 = _g11[_g2];
				++_g2;
				this.local.multmat2(m1);
			}
		}
		if(this.boneParent != null) {
			this.local.multmats(this.boneParent,this.local);
		}
		if(this.object.parent != null && !this.localOnly) {
			this.world.multmat3x4(this.local,this.object.parent.transform.world);
		} else {
			this.world.setFrom(this.local);
		}
		if(this.object.constraints != null) {
			var _g3 = 0;
			var _g12 = this.object.constraints;
			while(_g3 < _g12.length) {
				var c = _g12[_g3];
				++_g3;
				c.apply(this);
			}
		}
		this.computeDim();
		var _g4 = 0;
		var _g13 = this.object.children;
		while(_g4 < _g13.length) {
			var n = _g13[_g4];
			++_g4;
			n.transform.buildMatrix();
		}
	}
	,decompose: function() {
		this.local.decompose(this.loc,this.rot,this.scale);
	}
	,setRotation: function(x,y,z) {
		this.rot.fromEuler(x,y,z);
		this.dirty = true;
		this._eulerX = x;
		this._eulerY = y;
		this._eulerZ = z;
	}
	,computeRadius: function() {
		this.radius = Math.sqrt(this.dim.x * this.dim.x + this.dim.y * this.dim.y + this.dim.z * this.dim.z);
	}
	,computeDim: function() {
		if(this.object.raw == null || this.object.raw.dimensions == null) {
			return;
		}
		var d = this.object.raw.dimensions;
		this.dim.set(d[0] * this.scale.x,d[1] * this.scale.y,d[2] * this.scale.z);
		this.computeRadius();
	}
	,applyParentInverse: function() {
		var pt = this.object.parent.transform;
		pt.buildMatrix();
		iron_object_Transform.temp.getInverse(pt.world);
		this.local.multmat2(iron_object_Transform.temp);
		this.decompose();
		this.buildMatrix();
	}
	,__class__: iron_object_Transform
};
var kha_math_FastMatrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = true;
kha_math_FastMatrix3.prototype = {
	__class__: kha_math_FastMatrix3
};
var iron_object_Uniforms = function() { };
$hxClasses["iron.object.Uniforms"] = iron_object_Uniforms;
iron_object_Uniforms.__name__ = true;
var iron_system_ArmPack = function() { };
$hxClasses["iron.system.ArmPack"] = iron_system_ArmPack;
iron_system_ArmPack.__name__ = true;
iron_system_ArmPack.read = function(i) {
	try {
		var b = i.readByte();
		switch(b) {
		case 192:
			return null;
		case 194:
			return false;
		case 195:
			return true;
		case 196:
			return i.read(i.readByte());
		case 197:
			return i.read(i.readUInt16());
		case 198:
			return i.read(i.readInt32());
		case 202:
			return i.readFloat();
		case 203:
			return i.readDouble();
		case 204:
			return i.readByte();
		case 205:
			return i.readUInt16();
		case 206:
			return i.readInt32();
		case 208:
			return i.readInt8();
		case 209:
			return i.readInt16();
		case 210:
			return i.readInt32();
		case 217:
			return i.readString(i.readByte());
		case 218:
			return i.readString(i.readUInt16());
		case 219:
			return i.readString(i.readInt32());
		case 220:
			return iron_system_ArmPack.readArray(i,i.readUInt16());
		case 221:
			return iron_system_ArmPack.readArray(i,i.readInt32());
		case 222:
			return iron_system_ArmPack.readMap(i,i.readUInt16());
		case 223:
			return iron_system_ArmPack.readMap(i,i.readInt32());
		default:
			if(b < 128) {
				return b;
			} else if(b < 144) {
				return iron_system_ArmPack.readMap(i,15 & b);
			} else if(b < 160) {
				return iron_system_ArmPack.readArray(i,15 & b);
			} else if(b < 192) {
				return i.readString(31 & b);
			} else if(b > 223) {
				return -256 | b;
			}
		}
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
		} else throw(e);
	}
	return null;
};
iron_system_ArmPack.readArray = function(i,length) {
	var b = i.readByte();
	var _g = i;
	var _g1 = _g.pos;
	_g.set_position(_g1 - 1);
	if(b == 202) {
		var _g2 = i;
		var _g11 = _g2.pos;
		_g2.set_position(_g11 + 1);
		var this1 = new Float32Array(length);
		var a = this1;
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var x = _g12++;
			a[x] = i.readFloat();
		}
		return a;
	} else if(b == 210) {
		var _g4 = i;
		var _g13 = _g4.pos;
		_g4.set_position(_g13 + 1);
		var this2 = new Uint32Array(length);
		var a1 = this2;
		var _g14 = 0;
		var _g5 = length;
		while(_g14 < _g5) {
			var x1 = _g14++;
			a1[x1] = i.readInt32();
		}
		return a1;
	} else {
		var a2 = [];
		var _g15 = 0;
		var _g6 = length;
		while(_g15 < _g6) {
			var x2 = _g15++;
			a2.push(iron_system_ArmPack.read(i));
		}
		return a2;
	}
};
iron_system_ArmPack.readMap = function(i,length) {
	var out = { };
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var n = _g1++;
		var k = iron_system_ArmPack.read(i);
		var v = iron_system_ArmPack.read(i);
		out[Std.string(k)] = v;
	}
	return out;
};
var iron_system_Audio = function() { };
$hxClasses["iron.system.Audio"] = iron_system_Audio;
iron_system_Audio.__name__ = true;
iron_system_Audio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	kha_audio2_Audio1.play(sound,loop);
};
var iron_system_Input = function() { };
$hxClasses["iron.system.Input"] = iron_system_Input;
iron_system_Input.__name__ = true;
iron_system_Input.endFrame = function() {
	if(iron_system_Input.mouse != null) {
		iron_system_Input.mouse.endFrame();
	}
	if(iron_system_Input.keyboard != null) {
		iron_system_Input.keyboard.endFrame();
	}
	var _g = 0;
	var _g1 = iron_system_Input.gamepads;
	while(_g < _g1.length) {
		var gamepad = _g1[_g];
		++_g;
		gamepad.endFrame();
	}
	if(iron_system_Input.virtualButtons != null) {
		var _this = iron_system_Input.virtualButtons;
		var vb = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(vb.hasNext()) {
			var vb1 = vb.next();
			vb1.started = vb1.released = false;
		}
	}
};
var iron_system_VirtualButton = function() {
	this.released = false;
	this.started = false;
};
$hxClasses["iron.system.VirtualButton"] = iron_system_VirtualButton;
iron_system_VirtualButton.__name__ = true;
iron_system_VirtualButton.prototype = {
	__class__: iron_system_VirtualButton
};
var iron_system_VirutalInput = function() { };
$hxClasses["iron.system.VirutalInput"] = iron_system_VirutalInput;
iron_system_VirutalInput.__name__ = true;
var iron_system_Mouse = function() {
	this.wheelDelta = 0;
	this.movementY = 0.0;
	this.movementX = 0.0;
	this.moved = false;
	this.buttonsReleased = [false,false,false];
	this.buttonsStarted = [false,false,false];
};
$hxClasses["iron.system.Mouse"] = iron_system_Mouse;
iron_system_Mouse.__name__ = true;
iron_system_Mouse.__super__ = iron_system_VirutalInput;
iron_system_Mouse.prototype = $extend(iron_system_VirutalInput.prototype,{
	endFrame: function() {
		var tmp = this.buttonsStarted[1] = this.buttonsStarted[2] = false;
		this.buttonsStarted[0] = tmp;
		var tmp1 = this.buttonsReleased[1] = this.buttonsReleased[2] = false;
		this.buttonsReleased[0] = tmp1;
		this.moved = false;
		this.movementX = 0;
		this.movementY = 0;
		this.wheelDelta = 0;
	}
	,__class__: iron_system_Mouse
});
var iron_system_Keyboard = function() {
	this.keysFrame = [];
	this.keysReleased = new haxe_ds_StringMap();
	this.keysStarted = new haxe_ds_StringMap();
};
$hxClasses["iron.system.Keyboard"] = iron_system_Keyboard;
iron_system_Keyboard.__name__ = true;
iron_system_Keyboard.__super__ = iron_system_VirutalInput;
iron_system_Keyboard.prototype = $extend(iron_system_VirutalInput.prototype,{
	endFrame: function() {
		if(this.keysFrame.length > 0) {
			var _g = 0;
			var _g1 = this.keysFrame;
			while(_g < _g1.length) {
				var s = _g1[_g];
				++_g;
				var _this = this.keysStarted;
				if(__map_reserved[s] != null) {
					_this.setReserved(s,false);
				} else {
					_this.h[s] = false;
				}
				var _this1 = this.keysReleased;
				if(__map_reserved[s] != null) {
					_this1.setReserved(s,false);
				} else {
					_this1.h[s] = false;
				}
			}
			this.keysFrame.splice(0,this.keysFrame.length);
		}
	}
	,__class__: iron_system_Keyboard
});
var iron_system_GamepadStick = function() {
	this.movementY = 0.0;
	this.movementX = 0.0;
	this.moved = false;
};
$hxClasses["iron.system.GamepadStick"] = iron_system_GamepadStick;
iron_system_GamepadStick.__name__ = true;
iron_system_GamepadStick.prototype = {
	__class__: iron_system_GamepadStick
};
var iron_system_Gamepad = function() {
	this.rightStick = new iron_system_GamepadStick();
	this.leftStick = new iron_system_GamepadStick();
	this.buttonsFrame = [];
	this.buttonsReleased = [];
	this.buttonsStarted = [];
};
$hxClasses["iron.system.Gamepad"] = iron_system_Gamepad;
iron_system_Gamepad.__name__ = true;
iron_system_Gamepad.__super__ = iron_system_VirutalInput;
iron_system_Gamepad.prototype = $extend(iron_system_VirutalInput.prototype,{
	endFrame: function() {
		if(this.buttonsFrame.length > 0) {
			var _g = 0;
			var _g1 = this.buttonsFrame;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				this.buttonsStarted[i] = false;
				this.buttonsReleased[i] = false;
			}
			this.buttonsFrame.splice(0,this.buttonsFrame.length);
		}
		this.leftStick.moved = false;
		this.leftStick.movementX = 0;
		this.leftStick.movementY = 0;
		this.rightStick.moved = false;
		this.rightStick.movementX = 0;
		this.rightStick.movementY = 0;
	}
	,__class__: iron_system_Gamepad
});
var iron_system_Time = function() { };
$hxClasses["iron.system.Time"] = iron_system_Time;
iron_system_Time.__name__ = true;
iron_system_Time.update = function() {
	iron_system_Time.realDelta = kha_Scheduler.realTime() - iron_system_Time.last;
	iron_system_Time.last = kha_Scheduler.realTime();
};
var iron_system_Tween = function() { };
$hxClasses["iron.system.Tween"] = iron_system_Tween;
iron_system_Tween.__name__ = true;
iron_system_Tween.update = function() {
	var d = 0.0166666666666666664 * iron_system_Time.scale;
	var i = iron_system_Tween.anims.length;
	while(i-- > 0 && iron_system_Tween.anims.length > 0) {
		var a = iron_system_Tween.anims[i];
		if(a.delay > 0) {
			a.delay -= d;
			if(a.delay > 0) {
				continue;
			}
		}
		a._time += d;
		if(a.target != null) {
			if(js_Boot.__instanceof(a.target,iron_object_Transform)) {
				a.target.dirty = true;
			}
			var ps = Reflect.fields(a.props);
			var _g1 = 0;
			var _g = ps.length;
			while(_g1 < _g) {
				var i1 = _g1++;
				var p = ps[i1];
				var k = a._time / a.duration;
				if(k > 1) {
					k = 1;
				}
				if(a._comps[i1] == 1) {
					var fromVal = a._x[i1];
					var toVal = Reflect.getProperty(a.props,p);
					var val = fromVal + (toVal - fromVal) * iron_system_Tween.eases[a.ease](k);
					Reflect.setProperty(a.target,p,val);
				} else {
					var obj = Reflect.getProperty(a.props,p);
					var toX = Reflect.getProperty(obj,"x");
					var toY = Reflect.getProperty(obj,"y");
					var toZ = Reflect.getProperty(obj,"z");
					var toW = Reflect.getProperty(obj,"w");
					if(a._normalize[i1]) {
						var qdot = a._x[i1] * toX + a._y[i1] * toY + a._z[i1] * toZ + a._w[i1] * toW;
						if(qdot < 0.0) {
							toX = -toX;
							toY = -toY;
							toZ = -toZ;
							toW = -toW;
						}
					}
					var x = a._x[i1] + (toX - a._x[i1]) * iron_system_Tween.eases[a.ease](k);
					var y = a._y[i1] + (toY - a._y[i1]) * iron_system_Tween.eases[a.ease](k);
					var z = a._z[i1] + (toZ - a._z[i1]) * iron_system_Tween.eases[a.ease](k);
					var w = a._w[i1] + (toW - a._w[i1]) * iron_system_Tween.eases[a.ease](k);
					if(a._normalize[i1]) {
						var l = Math.sqrt(x * x + y * y + z * z + w * w);
						if(l > 0.0) {
							l = 1.0 / l;
							x *= l;
							y *= l;
							z *= l;
							w *= l;
						}
					}
					var t = Reflect.getProperty(a.target,p);
					Reflect.setProperty(t,"x",x);
					Reflect.setProperty(t,"y",y);
					Reflect.setProperty(t,"z",z);
					Reflect.setProperty(t,"w",w);
				}
			}
		}
		if(a.tick != null) {
			a.tick();
		}
		if(a._time >= a.duration) {
			iron_system_Tween.anims.splice(i,1);
			--i;
			if(a.done != null) {
				a.done();
			}
		}
	}
};
iron_system_Tween.easeLinear = function(k) {
	return k;
};
iron_system_Tween.easeExpoOut = function(k) {
	if(k == 1) {
		return 1;
	} else {
		return 1 - Math.pow(2,-10 * k);
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = true;
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = true;
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null ? 0 : byteOffset;
	this.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.byteLength = this.length;
	this.byteOffset = this.offset;
	this.buffer = this.buf;
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = true;
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian ? a : b,littleEndian ? b : a);
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0 ? value + 128 & 255 : value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0 ? value + 65536 : value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Float32Array = function() { };
$hxClasses["js.html.compat.Float32Array"] = js_html_compat_Float32Array;
js_html_compat_Float32Array.__name__ = true;
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = true;
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var kha_Canvas = function() { };
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = true;
kha_Canvas.prototype = {
	__class__: kha_Canvas
	,__properties__: {get_g4:"get_g4",get_height:"get_height",get_width:"get_width"}
};
var kha_Resource = function() { };
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = true;
var kha_Image = function() { };
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = true;
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.__properties__ = {get_nonPow2Supported:"get_nonPow2Supported"};
kha_Image.create = function(width,height,format,usage) {
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,false);
	} else {
		return new kha_WebGLImage(width,height,format,false,0);
	}
};
kha_Image.create3D = function(width,height,depth,format,usage) {
	return null;
};
kha_Image.createRenderTarget = function(width,height,format,depthStencil,antiAliasingSamples,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,true);
	} else {
		return new kha_WebGLImage(width,height,format,true,depthStencil);
	}
};
kha_Image.fromImage = function(image,readable) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(image.width,image.height,kha_graphics4_TextureFormat.RGBA32,false);
		img.image = image;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(image.width,image.height,kha_graphics4_TextureFormat.RGBA32,false,0);
		img1.image = image;
		img1.createTexture();
		return img1;
	}
};
kha_Image.fromBytes = function(bytes,width,height,format,usage) {
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	if(kha_SystemImpl.gl != null) {
		var img = new kha_WebGLImage(width,height,format,false,0);
		img.image = img.bytesToArray(bytes);
		img.createTexture();
		return img;
	}
	return null;
};
kha_Image.get_nonPow2Supported = function() {
	return kha_SystemImpl.gl != null;
};
kha_Image.prototype = {
	unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,generateMipmaps: function(levels) {
	}
	,setMipmaps: function(mipmaps) {
	}
	,setDepthStencilFrom: function(image) {
	}
	,get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_g4: function() {
		return null;
	}
	,__class__: kha_Image
	,__properties__: {get_g4:"get_g4",get_height:"get_height",get_width:"get_width"}
};
var kha_CanvasImage = function(width,height,format,renderTarget) {
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.CanvasImage"] = kha_CanvasImage;
kha_CanvasImage.__name__ = true;
kha_CanvasImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_CanvasImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_CanvasImage.context.globalCompositeOperation = "copy";
	}
};
kha_CanvasImage.__super__ = kha_Image;
kha_CanvasImage.prototype = $extend(kha_Image.prototype,{
	get_g4: function() {
		return null;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.format == kha_graphics4_TextureFormat.RGBA32 ? 4 * this.get_width() * this.get_height() : this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,new Uint8Array(this.bytes.b.bufferValue));
			if(kha_SystemImpl.gl.getError() == 1282) {
				var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
				var _g1 = 0;
				var _g = this.get_height();
				while(_g1 < _g) {
					var y = _g1++;
					var _g3 = 0;
					var _g2 = this.get_width();
					while(_g3 < _g2) {
						var x = _g3++;
						var _this = this.bytes;
						var pos = y * this.get_width() + x;
						var value = _this.b[pos];
						var pos1 = y * this.get_width() * 4 + x * 4;
						rgbaBytes.b[pos1] = value & 255;
						var pos2 = y * this.get_width() * 4 + x * 4 + 1;
						rgbaBytes.b[pos2] = value & 255;
						var pos3 = y * this.get_width() * 4 + x * 4 + 2;
						rgbaBytes.b[pos3] = value & 255;
						var pos4 = y * this.get_width() * 4 + x * 4 + 3;
						rgbaBytes.b[pos4] = 255;
					}
				}
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,new Uint8Array(rgbaBytes.b.bufferValue));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		this.image = null;
		this.video = null;
		this.data = null;
	}
	,__class__: kha_CanvasImage
});
var kha__$Color_Color_$Impl_$ = $hx_exports["kha"]["_Color"]["Color_Impl_"] = {};
$hxClasses["kha._Color.Color_Impl_"] = kha__$Color_Color_$Impl_$;
kha__$Color_Color_$Impl_$.__name__ = true;
kha__$Color_Color_$Impl_$.fromBytes = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
};
kha__$Color_Color_$Impl_$._new = function(value) {
	var this1 = value;
	return this1;
};
var kha_CompilerDefines = function() { };
$hxClasses["kha.CompilerDefines"] = kha_CompilerDefines;
kha_CompilerDefines.__name__ = true;
var kha_DisplayImpl = function() { };
$hxClasses["kha.DisplayImpl"] = kha_DisplayImpl;
kha_DisplayImpl.__name__ = true;
kha_DisplayImpl.width = function(index) {
	return window.screen.width;
};
kha_DisplayImpl.height = function(index) {
	return window.screen.height;
};
var kha_EnvironmentVariables = function() {
};
$hxClasses["kha.EnvironmentVariables"] = kha_EnvironmentVariables;
kha_EnvironmentVariables.__name__ = true;
kha_EnvironmentVariables.prototype = {
	__class__: kha_EnvironmentVariables
};
var kha_Framebuffer = function(windowId,g1,g2,g4) {
	this.windowId = windowId;
	this.graphics1 = g1;
	this.graphics2 = g2;
	this.graphics4 = g4;
};
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = true;
kha_Framebuffer.__interfaces__ = [kha_Canvas];
kha_Framebuffer.prototype = {
	init: function(g1,g2,g4) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
	}
	,get_g2: function() {
		return this.graphics2;
	}
	,get_g4: function() {
		return this.graphics4;
	}
	,get_width: function() {
		return kha_System.windowWidth(this.windowId);
	}
	,get_height: function() {
		return kha_System.windowHeight(this.windowId);
	}
	,__class__: kha_Framebuffer
	,__properties__: {get_height:"get_height",get_width:"get_width",get_g4:"get_g4",get_g2:"get_g2"}
};
var kha_KravurImage = function(size,ascent,descent,lineGap,width,height,chars,pixels) {
	this.mySize = size;
	this.width = width;
	this.height = height;
	this.chars = chars;
	this.baseline = ascent;
	var _g = 0;
	while(_g < chars.length) {
		var $char = chars[_g];
		++_g;
		$char.yoff += this.baseline;
	}
	this.texture = kha_Image.create(width,height,kha_graphics4_TextureFormat.L8);
	var bytes = this.texture.lock();
	var pos = 0;
	var _g1 = 0;
	var _g2 = height;
	while(_g1 < _g2) {
		var y = _g1++;
		var _g3 = 0;
		var _g21 = width;
		while(_g3 < _g21) {
			var x = _g3++;
			var v = pixels.readU8(pos);
			bytes.b[pos] = v & 255;
			++pos;
		}
	}
	this.texture.unlock();
};
$hxClasses["kha.KravurImage"] = kha_KravurImage;
kha_KravurImage.__name__ = true;
kha_KravurImage.prototype = {
	getTexture: function() {
		return this.texture;
	}
	,getCharWidth: function(charIndex) {
		if(charIndex < 32) {
			return 0;
		}
		if(charIndex - 32 >= this.chars.length) {
			return 0;
		}
		return this.chars[charIndex - 32].xadvance;
	}
	,getHeight: function() {
		return this.mySize;
	}
	,stringWidth: function(string) {
		var str = new String(string);
		var width = 0;
		var _g1 = 0;
		var _g = str.length;
		while(_g1 < _g) {
			var c = _g1++;
			width += this.getCharWidth(HxOverrides.cca(str,c));
		}
		return width;
	}
	,charactersWidth: function(characters,start,length) {
		var width = 0;
		var _g1 = start;
		var _g = start + length;
		while(_g1 < _g) {
			var i = _g1++;
			width += this.getCharWidth(characters[i]);
		}
		return width;
	}
	,getBaselinePosition: function() {
		return this.baseline;
	}
	,__class__: kha_KravurImage
};
var kha_Kravur = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.blob = blob;
};
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = true;
kha_Kravur.__interfaces__ = [kha_Resource];
kha_Kravur.prototype = {
	_get: function(fontSize,glyphs) {
		var imageIndex = glyphs == null ? fontSize : fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			if(glyphs == null) {
				glyphs = [];
				var _g = 32;
				while(_g < 256) {
					var i = _g++;
					glyphs.push(i);
				}
			}
			var width = 64;
			var height = 32;
			var length = glyphs.length;
			var this1 = new Array(length);
			var baked = this1;
			var _g1 = 0;
			var _g2 = baked.length;
			while(_g1 < _g2) {
				var i1 = _g1++;
				baked[i1] = new kha_graphics2_truetype_Stbtt_$bakedchar();
			}
			var pixels = null;
			var status = -1;
			while(status < 0) {
				if(height < width) {
					height *= 2;
				} else {
					width *= 2;
				}
				pixels = kha_internal_BytesBlob.alloc(width * height);
				status = kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap(this.blob,0,fontSize,pixels,width,height,glyphs,baked);
			}
			var info = new kha_graphics2_truetype_Stbtt_$fontinfo();
			kha_graphics2_truetype_StbTruetype.stbtt_InitFont(info,this.blob,0);
			var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics(info);
			var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(info,fontSize);
			var ascent = Math.round(metrics.ascent * scale);
			var descent = Math.round(metrics.descent * scale);
			var lineGap = Math.round(metrics.lineGap * scale);
			var image = new kha_KravurImage(fontSize | 0,ascent,descent,lineGap,width,height,baked,pixels);
			this.images.h[imageIndex] = image;
			return image;
		}
		return this.images.h[imageIndex];
	}
	,__class__: kha_Kravur
};
var kha_LoaderImpl = function() { };
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = true;
kha_LoaderImpl.loadImageFromDescription = function(desc,done) {
	var readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
	if(StringTools.endsWith(desc.files[0],".hdr")) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			var hdrImage = kha_internal_HdrFormat.parse(blob.toBytes());
			var tmp = kha_Image.fromBytes(haxe_io_Bytes.ofData(hdrImage.data.buffer),hdrImage.width,hdrImage.height,kha_graphics4_TextureFormat.RGBA128,readable ? kha_graphics4_Usage.DynamicUsage : kha_graphics4_Usage.StaticUsage);
			done(tmp);
		});
	} else {
		var img = window.document.createElement("img");
		img.onload = function(event) {
			var tmp1 = kha_Image.fromImage(img,readable);
			done(tmp1);
		};
		img.src = desc.files[0];
		img.crossOrigin = "";
	}
};
kha_LoaderImpl.loadSoundFromDescription = function(desc,done) {
	if(kha_SystemImpl._hasWebAudio) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g1 = 0;
			var _g = desc.files.length;
			while(_g1 < _g) {
				var i = _g1++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_WebAudioSound(file,done);
					return;
				}
			}
		}
		var _g11 = 0;
		var _g2 = desc.files.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var file1 = desc.files[i1];
			if(StringTools.endsWith(file1,".ogg")) {
				new kha_js_WebAudioSound(file1,done);
				return;
			}
		}
	} else if(kha_SystemImpl.mobile) {
		var element1 = window.document.createElement("audio");
		if(element1.canPlayType("audio/mp4") != "") {
			var _g12 = 0;
			var _g3 = desc.files.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				var file2 = desc.files[i2];
				if(StringTools.endsWith(file2,".mp4")) {
					new kha_js_MobileWebAudioSound(file2,done);
					return;
				}
			}
		}
		var _g13 = 0;
		var _g4 = desc.files.length;
		while(_g13 < _g4) {
			var i3 = _g13++;
			var file3 = desc.files[i3];
			if(StringTools.endsWith(file3,".ogg")) {
				new kha_js_MobileWebAudioSound(file3,done);
				return;
			}
		}
	} else {
		new kha_js_Sound(desc.files,done);
	}
};
kha_LoaderImpl.loadBlobFromDescription = function(desc,done) {
	var request = new XMLHttpRequest();
	request.open("GET",desc.files[0],true);
	request.responseType = "arraybuffer";
	request.onreadystatechange = function() {
		if(request.readyState != 4) {
			return;
		}
		if(request.status >= 200 && request.status < 400 || request.status == 0 && request.statusText == "") {
			var bytes = null;
			var arrayBuffer = request.response;
			if(arrayBuffer != null) {
				var byteArray = new Uint8Array(arrayBuffer);
				bytes = haxe_io_Bytes.ofData(byteArray);
			} else if(request.responseBody != null) {
				var data = VBArray(request.responseBody).toArray();
				bytes = new haxe_io_Bytes(new ArrayBuffer(data.length));
				var _g1 = 0;
				var _g = data.length;
				while(_g1 < _g) {
					var i = _g1++;
					bytes.b[i] = data[i] & 255;
				}
			} else {
				haxe_Log.trace("Error loading " + desc.files[0],{ fileName : "LoaderImpl.hx", lineNumber : 145, className : "kha.LoaderImpl", methodName : "loadBlobFromDescription"});
				window.console.log("loadBlob failed");
			}
			done(new kha_internal_BytesBlob(bytes));
		} else {
			haxe_Log.trace("Error loading " + desc.files[0],{ fileName : "LoaderImpl.hx", lineNumber : 151, className : "kha.LoaderImpl", methodName : "loadBlobFromDescription"});
			window.console.log("loadBlob failed");
		}
	};
	request.send(null);
};
var kha_TimeTask = function() {
};
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = true;
kha_TimeTask.prototype = {
	__class__: kha_TimeTask
};
var kha_FrameTask = function() { };
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = true;
kha_FrameTask.prototype = {
	__class__: kha_FrameTask
};
var kha_Scheduler = function() { };
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = true;
kha_Scheduler.init = function() {
	kha_Scheduler.deltas = [];
	var _g1 = 0;
	var _g = kha_Scheduler.DIF_COUNT;
	while(_g1 < _g) {
		var i = _g1++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.stopped = true;
	kha_Scheduler.frame_tasks_sorted = true;
	kha_Scheduler.current = kha_Scheduler.lastTime = kha_Scheduler.realTime();
	kha_Scheduler.currentFrameTaskId = 0;
	kha_Scheduler.currentTimeTaskId = 0;
	kha_Scheduler.currentGroupId = 0;
	kha_Scheduler.timeTasks = [];
	kha_Scheduler.pausedTimeTasks = [];
	kha_Scheduler.outdatedTimeTasks = [];
	kha_Scheduler.timeTasksScratchpad = [];
	kha_Scheduler.frameTasks = [];
	kha_Scheduler.toDeleteFrame = [];
};
kha_Scheduler.start = function(restartTimers) {
	if(restartTimers == null) {
		restartTimers = false;
	}
	kha_Scheduler.vsync = kha_System.get_vsync();
	var hz = kha_System.get_refreshRate();
	if(hz >= 57 && hz <= 63) {
		hz = 60;
	}
	kha_Scheduler.onedifhz = 1.0 / hz;
	kha_Scheduler.stopped = false;
	kha_Scheduler.resetTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var _g1 = 0;
	var _g = kha_Scheduler.DIF_COUNT;
	while(_g1 < _g) {
		var i = _g1++;
		kha_Scheduler.deltas[i] = 0;
	}
	if(restartTimers) {
		var _g2 = 0;
		var _g11 = kha_Scheduler.timeTasks;
		while(_g2 < _g11.length) {
			var timeTask = _g11[_g2];
			++_g2;
			timeTask.paused = false;
		}
		var _g3 = 0;
		var _g12 = kha_Scheduler.frameTasks;
		while(_g3 < _g12.length) {
			var frameTask = _g12[_g3];
			++_g3;
			frameTask.paused = false;
		}
	}
};
kha_Scheduler.executeFrame = function() {
	var now = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var delta = now - kha_Scheduler.lastTime;
	var frameEnd = kha_Scheduler.current;
	if(delta < 0) {
		return;
	}
	if(delta > kha_Scheduler.maxframetime) {
		kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
		delta = kha_Scheduler.maxframetime;
		frameEnd += delta;
	} else if(kha_Scheduler.vsync) {
		var realdif = kha_Scheduler.onedifhz;
		while(realdif < delta - kha_Scheduler.onedifhz) realdif += kha_Scheduler.onedifhz;
		delta = realdif;
		var _g1 = 0;
		var _g = kha_Scheduler.DIF_COUNT - 2;
		while(_g1 < _g) {
			var i = _g1++;
			delta += kha_Scheduler.deltas[i];
			kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
		}
		delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
		delta /= kha_Scheduler.DIF_COUNT;
		kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
		frameEnd += delta;
	} else {
		var _g11 = 0;
		var _g2 = kha_Scheduler.DIF_COUNT - 1;
		while(_g11 < _g2) {
			var i1 = _g11++;
			kha_Scheduler.deltas[i1] = kha_Scheduler.deltas[i1 + 1];
		}
		kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
		var next = 0;
		var _g12 = 0;
		var _g3 = kha_Scheduler.DIF_COUNT;
		while(_g12 < _g3) {
			var i2 = _g12++;
			next += kha_Scheduler.deltas[i2];
		}
		next /= kha_Scheduler.DIF_COUNT;
		frameEnd += next;
	}
	kha_Scheduler.lastTime = frameEnd;
	if(!kha_Scheduler.stopped) {
		kha_Scheduler.current = frameEnd;
	}
	var _g4 = 0;
	var _g13 = kha_Scheduler.pausedTimeTasks;
	while(_g4 < _g13.length) {
		var pausedTask = _g13[_g4];
		++_g4;
		pausedTask.next += delta;
	}
	if(kha_Scheduler.stopped) {
		var _g5 = 0;
		var _g14 = kha_Scheduler.timeTasks;
		while(_g5 < _g14.length) {
			var timeTask = _g14[_g5];
			++_g5;
			timeTask.next += delta;
		}
	}
	while(kha_Scheduler.timeTasks.length > 0) {
		kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
		if(kha_Scheduler.activeTimeTask.next <= frameEnd) {
			kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
			HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
			if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
				if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
					kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				} else {
					kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,frameEnd);
				}
			} else {
				kha_Scheduler.activeTimeTask.active = false;
				kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,frameEnd);
			}
		} else {
			break;
		}
	}
	kha_Scheduler.activeTimeTask = null;
	kha_Scheduler.sortFrameTasks();
	var _g6 = 0;
	var _g15 = kha_Scheduler.frameTasks;
	while(_g6 < _g15.length) {
		var frameTask = _g15[_g6];
		++_g6;
		if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
			if(!frameTask.task()) {
				frameTask.active = false;
			}
		}
	}
	var _g7 = 0;
	var _g16 = kha_Scheduler.frameTasks;
	while(_g7 < _g16.length) {
		var frameTask1 = _g16[_g7];
		++_g7;
		if(!frameTask1.active) {
			kha_Scheduler.toDeleteFrame.push(frameTask1);
		}
	}
	while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
};
kha_Scheduler.archiveTimeTask = function(timeTask,frameEnd) {
};
kha_Scheduler.realTime = function() {
	return kha_System.get_time();
};
kha_Scheduler.resetTime = function() {
	var now = kha_System.get_time();
	var dif = now - kha_Scheduler.startTime;
	kha_Scheduler.startTime = now;
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		timeTask.start -= dif;
		timeTask.next -= dif;
	}
	var _g11 = 0;
	var _g2 = kha_Scheduler.DIF_COUNT;
	while(_g11 < _g2) {
		var i = _g11++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.current = 0;
	kha_Scheduler.lastTime = 0;
};
kha_Scheduler.addBreakableTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	var t = new kha_TimeTask();
	t.active = true;
	t.task = task;
	t.id = ++kha_Scheduler.currentTimeTaskId;
	t.groupId = groupId;
	t.start = kha_Scheduler.current + start;
	t.period = 0;
	if(period != 0) {
		t.period = period;
	}
	t.duration = 0;
	if(duration != 0) {
		t.duration = t.start + duration;
	}
	t.next = t.start;
	kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
	return t.id;
};
kha_Scheduler.addTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
		task();
		return true;
	},start,period,duration);
};
kha_Scheduler.addTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.insertSorted = function(list,task) {
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(list[i].next > task.next) {
			list.splice(i,0,task);
			return;
		}
	}
	list.push(task);
};
kha_Scheduler.sortFrameTasks = function() {
	if(kha_Scheduler.frame_tasks_sorted) {
		return;
	}
	kha_Scheduler.frameTasks.sort(function(a,b) {
		if(a.priority > b.priority) {
			return 1;
		} else if(a.priority < b.priority) {
			return -1;
		} else {
			return 0;
		}
	});
	kha_Scheduler.frame_tasks_sorted = true;
};
var kha_ScreenRotation = $hxClasses["kha.ScreenRotation"] = { __ename__ : true, __constructs__ : ["RotationNone","Rotation90","Rotation180","Rotation270"] };
kha_ScreenRotation.RotationNone = ["RotationNone",0];
kha_ScreenRotation.RotationNone.toString = $estr;
kha_ScreenRotation.RotationNone.__enum__ = kha_ScreenRotation;
kha_ScreenRotation.Rotation90 = ["Rotation90",1];
kha_ScreenRotation.Rotation90.toString = $estr;
kha_ScreenRotation.Rotation90.__enum__ = kha_ScreenRotation;
kha_ScreenRotation.Rotation180 = ["Rotation180",2];
kha_ScreenRotation.Rotation180.toString = $estr;
kha_ScreenRotation.Rotation180.__enum__ = kha_ScreenRotation;
kha_ScreenRotation.Rotation270 = ["Rotation270",3];
kha_ScreenRotation.Rotation270.toString = $estr;
kha_ScreenRotation.Rotation270.__enum__ = kha_ScreenRotation;
var kha_Shaders = function() { };
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = true;
kha_Shaders.init = function() {
	var blobs = [];
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var data = Reflect.field(kha_Shaders,"Material_mesh_fragData" + i);
		var bytes = haxe_Unserializer.run(data);
		blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	}
	kha_Shaders.Material_mesh_frag = new kha_graphics4_FragmentShader(blobs,["Material_mesh.frag.essl","Material_mesh-relaxed.frag.essl","Material_mesh-webgl2.frag.essl"]);
	var blobs1 = [];
	var _g1 = 0;
	while(_g1 < 3) {
		var i1 = _g1++;
		var data1 = Reflect.field(kha_Shaders,"Material_mesh_vertData" + i1);
		var bytes1 = haxe_Unserializer.run(data1);
		blobs1.push(kha_internal_BytesBlob.fromBytes(bytes1));
	}
	kha_Shaders.Material_mesh_vert = new kha_graphics4_VertexShader(blobs1,["Material_mesh.vert.essl","Material_mesh-relaxed.vert.essl","Material_mesh-webgl2.vert.essl"]);
	var blobs2 = [];
	var _g2 = 0;
	while(_g2 < 3) {
		var i2 = _g2++;
		var data2 = Reflect.field(kha_Shaders,"Material_shadowmap_fragData" + i2);
		var bytes2 = haxe_Unserializer.run(data2);
		blobs2.push(kha_internal_BytesBlob.fromBytes(bytes2));
	}
	kha_Shaders.Material_shadowmap_frag = new kha_graphics4_FragmentShader(blobs2,["Material_shadowmap.frag.essl","Material_shadowmap-relaxed.frag.essl","Material_shadowmap-webgl2.frag.essl"]);
	var blobs3 = [];
	var _g3 = 0;
	while(_g3 < 3) {
		var i3 = _g3++;
		var data3 = Reflect.field(kha_Shaders,"Material_shadowmap_vertData" + i3);
		var bytes3 = haxe_Unserializer.run(data3);
		blobs3.push(kha_internal_BytesBlob.fromBytes(bytes3));
	}
	kha_Shaders.Material_shadowmap_vert = new kha_graphics4_VertexShader(blobs3,["Material_shadowmap.vert.essl","Material_shadowmap-relaxed.vert.essl","Material_shadowmap-webgl2.vert.essl"]);
	var blobs4 = [];
	var _g4 = 0;
	while(_g4 < 3) {
		var i4 = _g4++;
		var data4 = Reflect.field(kha_Shaders,"blur_edge_pass_fragData" + i4);
		var bytes4 = haxe_Unserializer.run(data4);
		blobs4.push(kha_internal_BytesBlob.fromBytes(bytes4));
	}
	kha_Shaders.blur_edge_pass_frag = new kha_graphics4_FragmentShader(blobs4,["blur_edge_pass.frag.essl","blur_edge_pass-relaxed.frag.essl","blur_edge_pass-webgl2.frag.essl"]);
	var blobs5 = [];
	var _g5 = 0;
	while(_g5 < 3) {
		var i5 = _g5++;
		var data5 = Reflect.field(kha_Shaders,"blur_edge_pass_vertData" + i5);
		var bytes5 = haxe_Unserializer.run(data5);
		blobs5.push(kha_internal_BytesBlob.fromBytes(bytes5));
	}
	kha_Shaders.blur_edge_pass_vert = new kha_graphics4_VertexShader(blobs5,["blur_edge_pass.vert.essl","blur_edge_pass-relaxed.vert.essl","blur_edge_pass-webgl2.vert.essl"]);
	var blobs6 = [];
	var _g6 = 0;
	while(_g6 < 3) {
		var i6 = _g6++;
		var data6 = Reflect.field(kha_Shaders,"compositor_pass_fragData" + i6);
		var bytes6 = haxe_Unserializer.run(data6);
		blobs6.push(kha_internal_BytesBlob.fromBytes(bytes6));
	}
	kha_Shaders.compositor_pass_frag = new kha_graphics4_FragmentShader(blobs6,["compositor_pass.frag.essl","compositor_pass-relaxed.frag.essl","compositor_pass-webgl2.frag.essl"]);
	var blobs7 = [];
	var _g7 = 0;
	while(_g7 < 3) {
		var i7 = _g7++;
		var data7 = Reflect.field(kha_Shaders,"compositor_pass_vertData" + i7);
		var bytes7 = haxe_Unserializer.run(data7);
		blobs7.push(kha_internal_BytesBlob.fromBytes(bytes7));
	}
	kha_Shaders.compositor_pass_vert = new kha_graphics4_VertexShader(blobs7,["compositor_pass.vert.essl","compositor_pass-relaxed.vert.essl","compositor_pass-webgl2.vert.essl"]);
	var blobs8 = [];
	var _g8 = 0;
	while(_g8 < 3) {
		var i8 = _g8++;
		var data8 = Reflect.field(kha_Shaders,"deferred_indirect_fragData" + i8);
		var bytes8 = haxe_Unserializer.run(data8);
		blobs8.push(kha_internal_BytesBlob.fromBytes(bytes8));
	}
	kha_Shaders.deferred_indirect_frag = new kha_graphics4_FragmentShader(blobs8,["deferred_indirect.frag.essl","deferred_indirect-relaxed.frag.essl","deferred_indirect-webgl2.frag.essl"]);
	var blobs9 = [];
	var _g9 = 0;
	while(_g9 < 3) {
		var i9 = _g9++;
		var data9 = Reflect.field(kha_Shaders,"deferred_indirect_vertData" + i9);
		var bytes9 = haxe_Unserializer.run(data9);
		blobs9.push(kha_internal_BytesBlob.fromBytes(bytes9));
	}
	kha_Shaders.deferred_indirect_vert = new kha_graphics4_VertexShader(blobs9,["deferred_indirect.vert.essl","deferred_indirect-relaxed.vert.essl","deferred_indirect-webgl2.vert.essl"]);
	var blobs10 = [];
	var _g10 = 0;
	while(_g10 < 3) {
		var i10 = _g10++;
		var data10 = Reflect.field(kha_Shaders,"deferred_light_fragData" + i10);
		var bytes10 = haxe_Unserializer.run(data10);
		blobs10.push(kha_internal_BytesBlob.fromBytes(bytes10));
	}
	kha_Shaders.deferred_light_frag = new kha_graphics4_FragmentShader(blobs10,["deferred_light.frag.essl","deferred_light-relaxed.frag.essl","deferred_light-webgl2.frag.essl"]);
	var blobs11 = [];
	var _g11 = 0;
	while(_g11 < 3) {
		var i11 = _g11++;
		var data11 = Reflect.field(kha_Shaders,"deferred_light_vertData" + i11);
		var bytes11 = haxe_Unserializer.run(data11);
		blobs11.push(kha_internal_BytesBlob.fromBytes(bytes11));
	}
	kha_Shaders.deferred_light_vert = new kha_graphics4_VertexShader(blobs11,["deferred_light.vert.essl","deferred_light-relaxed.vert.essl","deferred_light-webgl2.vert.essl"]);
	var blobs12 = [];
	var _g12 = 0;
	while(_g12 < 3) {
		var i12 = _g12++;
		var data12 = Reflect.field(kha_Shaders,"deferred_light_quad_fragData" + i12);
		var bytes12 = haxe_Unserializer.run(data12);
		blobs12.push(kha_internal_BytesBlob.fromBytes(bytes12));
	}
	kha_Shaders.deferred_light_quad_frag = new kha_graphics4_FragmentShader(blobs12,["deferred_light_quad.frag.essl","deferred_light_quad-relaxed.frag.essl","deferred_light_quad-webgl2.frag.essl"]);
	var blobs13 = [];
	var _g13 = 0;
	while(_g13 < 3) {
		var i13 = _g13++;
		var data13 = Reflect.field(kha_Shaders,"deferred_light_quad_vertData" + i13);
		var bytes13 = haxe_Unserializer.run(data13);
		blobs13.push(kha_internal_BytesBlob.fromBytes(bytes13));
	}
	kha_Shaders.deferred_light_quad_vert = new kha_graphics4_VertexShader(blobs13,["deferred_light_quad.vert.essl","deferred_light_quad-relaxed.vert.essl","deferred_light_quad-webgl2.vert.essl"]);
	var blobs14 = [];
	var _g14 = 0;
	while(_g14 < 3) {
		var i14 = _g14++;
		var data14 = Reflect.field(kha_Shaders,"smaa_blend_weight_fragData" + i14);
		var bytes14 = haxe_Unserializer.run(data14);
		blobs14.push(kha_internal_BytesBlob.fromBytes(bytes14));
	}
	kha_Shaders.smaa_blend_weight_frag = new kha_graphics4_FragmentShader(blobs14,["smaa_blend_weight.frag.essl","smaa_blend_weight-relaxed.frag.essl","smaa_blend_weight-webgl2.frag.essl"]);
	var blobs15 = [];
	var _g15 = 0;
	while(_g15 < 3) {
		var i15 = _g15++;
		var data15 = Reflect.field(kha_Shaders,"smaa_blend_weight_vertData" + i15);
		var bytes15 = haxe_Unserializer.run(data15);
		blobs15.push(kha_internal_BytesBlob.fromBytes(bytes15));
	}
	kha_Shaders.smaa_blend_weight_vert = new kha_graphics4_VertexShader(blobs15,["smaa_blend_weight.vert.essl","smaa_blend_weight-relaxed.vert.essl","smaa_blend_weight-webgl2.vert.essl"]);
	var blobs16 = [];
	var _g16 = 0;
	while(_g16 < 3) {
		var i16 = _g16++;
		var data16 = Reflect.field(kha_Shaders,"smaa_edge_detect_fragData" + i16);
		var bytes16 = haxe_Unserializer.run(data16);
		blobs16.push(kha_internal_BytesBlob.fromBytes(bytes16));
	}
	kha_Shaders.smaa_edge_detect_frag = new kha_graphics4_FragmentShader(blobs16,["smaa_edge_detect.frag.essl","smaa_edge_detect-relaxed.frag.essl","smaa_edge_detect-webgl2.frag.essl"]);
	var blobs17 = [];
	var _g17 = 0;
	while(_g17 < 3) {
		var i17 = _g17++;
		var data17 = Reflect.field(kha_Shaders,"smaa_edge_detect_vertData" + i17);
		var bytes17 = haxe_Unserializer.run(data17);
		blobs17.push(kha_internal_BytesBlob.fromBytes(bytes17));
	}
	kha_Shaders.smaa_edge_detect_vert = new kha_graphics4_VertexShader(blobs17,["smaa_edge_detect.vert.essl","smaa_edge_detect-relaxed.vert.essl","smaa_edge_detect-webgl2.vert.essl"]);
	var blobs18 = [];
	var _g18 = 0;
	while(_g18 < 3) {
		var i18 = _g18++;
		var data18 = Reflect.field(kha_Shaders,"smaa_neighborhood_blend_fragData" + i18);
		var bytes18 = haxe_Unserializer.run(data18);
		blobs18.push(kha_internal_BytesBlob.fromBytes(bytes18));
	}
	kha_Shaders.smaa_neighborhood_blend_frag = new kha_graphics4_FragmentShader(blobs18,["smaa_neighborhood_blend.frag.essl","smaa_neighborhood_blend-relaxed.frag.essl","smaa_neighborhood_blend-webgl2.frag.essl"]);
	var blobs19 = [];
	var _g19 = 0;
	while(_g19 < 3) {
		var i19 = _g19++;
		var data19 = Reflect.field(kha_Shaders,"smaa_neighborhood_blend_vertData" + i19);
		var bytes19 = haxe_Unserializer.run(data19);
		blobs19.push(kha_internal_BytesBlob.fromBytes(bytes19));
	}
	kha_Shaders.smaa_neighborhood_blend_vert = new kha_graphics4_VertexShader(blobs19,["smaa_neighborhood_blend.vert.essl","smaa_neighborhood_blend-relaxed.vert.essl","smaa_neighborhood_blend-webgl2.vert.essl"]);
	var blobs20 = [];
	var _g20 = 0;
	while(_g20 < 3) {
		var i20 = _g20++;
		var data20 = Reflect.field(kha_Shaders,"ssao_pass_fragData" + i20);
		var bytes20 = haxe_Unserializer.run(data20);
		blobs20.push(kha_internal_BytesBlob.fromBytes(bytes20));
	}
	kha_Shaders.ssao_pass_frag = new kha_graphics4_FragmentShader(blobs20,["ssao_pass.frag.essl","ssao_pass-relaxed.frag.essl","ssao_pass-webgl2.frag.essl"]);
	var blobs21 = [];
	var _g21 = 0;
	while(_g21 < 3) {
		var i21 = _g21++;
		var data21 = Reflect.field(kha_Shaders,"ssao_pass_vertData" + i21);
		var bytes21 = haxe_Unserializer.run(data21);
		blobs21.push(kha_internal_BytesBlob.fromBytes(bytes21));
	}
	kha_Shaders.ssao_pass_vert = new kha_graphics4_VertexShader(blobs21,["ssao_pass.vert.essl","ssao_pass-relaxed.vert.essl","ssao_pass-webgl2.vert.essl"]);
	var blobs22 = [];
	var _g22 = 0;
	while(_g22 < 3) {
		var i22 = _g22++;
		var data22 = Reflect.field(kha_Shaders,"world_fragData" + i22);
		var bytes22 = haxe_Unserializer.run(data22);
		blobs22.push(kha_internal_BytesBlob.fromBytes(bytes22));
	}
	kha_Shaders.world_frag = new kha_graphics4_FragmentShader(blobs22,["world.frag.essl","world-relaxed.frag.essl","world-webgl2.frag.essl"]);
	var blobs23 = [];
	var _g23 = 0;
	while(_g23 < 3) {
		var i23 = _g23++;
		var data23 = Reflect.field(kha_Shaders,"world_vertData" + i23);
		var bytes23 = haxe_Unserializer.run(data23);
		blobs23.push(kha_internal_BytesBlob.fromBytes(bytes23));
	}
	kha_Shaders.world_vert = new kha_graphics4_VertexShader(blobs23,["world.vert.essl","world-relaxed.vert.essl","world-webgl2.vert.essl"]);
	var blobs24 = [];
	var _g24 = 0;
	while(_g24 < 3) {
		var i24 = _g24++;
		var data24 = Reflect.field(kha_Shaders,"painter_colored_fragData" + i24);
		var bytes24 = haxe_Unserializer.run(data24);
		blobs24.push(kha_internal_BytesBlob.fromBytes(bytes24));
	}
	kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(blobs24,["painter-colored.frag.essl","painter-colored-relaxed.frag.essl","painter-colored-webgl2.frag.essl"]);
	var blobs25 = [];
	var _g25 = 0;
	while(_g25 < 3) {
		var i25 = _g25++;
		var data25 = Reflect.field(kha_Shaders,"painter_colored_vertData" + i25);
		var bytes25 = haxe_Unserializer.run(data25);
		blobs25.push(kha_internal_BytesBlob.fromBytes(bytes25));
	}
	kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(blobs25,["painter-colored.vert.essl","painter-colored-relaxed.vert.essl","painter-colored-webgl2.vert.essl"]);
	var blobs26 = [];
	var _g26 = 0;
	while(_g26 < 3) {
		var i26 = _g26++;
		var data26 = Reflect.field(kha_Shaders,"painter_image_fragData" + i26);
		var bytes26 = haxe_Unserializer.run(data26);
		blobs26.push(kha_internal_BytesBlob.fromBytes(bytes26));
	}
	kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(blobs26,["painter-image.frag.essl","painter-image-relaxed.frag.essl","painter-image-webgl2.frag.essl"]);
	var blobs27 = [];
	var _g27 = 0;
	while(_g27 < 3) {
		var i27 = _g27++;
		var data27 = Reflect.field(kha_Shaders,"painter_image_vertData" + i27);
		var bytes27 = haxe_Unserializer.run(data27);
		blobs27.push(kha_internal_BytesBlob.fromBytes(bytes27));
	}
	kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(blobs27,["painter-image.vert.essl","painter-image-relaxed.vert.essl","painter-image-webgl2.vert.essl"]);
	var blobs28 = [];
	var _g28 = 0;
	while(_g28 < 3) {
		var i28 = _g28++;
		var data28 = Reflect.field(kha_Shaders,"painter_text_fragData" + i28);
		var bytes28 = haxe_Unserializer.run(data28);
		blobs28.push(kha_internal_BytesBlob.fromBytes(bytes28));
	}
	kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(blobs28,["painter-text.frag.essl","painter-text-relaxed.frag.essl","painter-text-webgl2.frag.essl"]);
	var blobs29 = [];
	var _g29 = 0;
	while(_g29 < 3) {
		var i29 = _g29++;
		var data29 = Reflect.field(kha_Shaders,"painter_text_vertData" + i29);
		var bytes29 = haxe_Unserializer.run(data29);
		blobs29.push(kha_internal_BytesBlob.fromBytes(bytes29));
	}
	kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(blobs29,["painter-text.vert.essl","painter-text-relaxed.vert.essl","painter-text-webgl2.vert.essl"]);
	var blobs30 = [];
	var _g30 = 0;
	while(_g30 < 3) {
		var i30 = _g30++;
		var data30 = Reflect.field(kha_Shaders,"painter_video_fragData" + i30);
		var bytes30 = haxe_Unserializer.run(data30);
		blobs30.push(kha_internal_BytesBlob.fromBytes(bytes30));
	}
	kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(blobs30,["painter-video.frag.essl","painter-video-relaxed.frag.essl","painter-video-webgl2.frag.essl"]);
	var blobs31 = [];
	var _g31 = 0;
	while(_g31 < 3) {
		var i31 = _g31++;
		var data31 = Reflect.field(kha_Shaders,"painter_video_vertData" + i31);
		var bytes31 = haxe_Unserializer.run(data31);
		blobs31.push(kha_internal_BytesBlob.fromBytes(bytes31));
	}
	kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(blobs31,["painter-video.vert.essl","painter-video-relaxed.vert.essl","painter-video-webgl2.vert.essl"]);
};
var kha_Sound = function() {
};
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = true;
kha_Sound.__interfaces__ = [kha_Resource];
kha_Sound.prototype = {
	uncompress: function(done) {
		var output = new haxe_io_BytesOutput();
		var header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		var soundBytes = output.getBytes();
		var count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			var this1 = new Array(count * 2);
			this.uncompressedData = this1;
			var _g1 = 0;
			var _g = count;
			while(_g1 < _g) {
				var i = _g1++;
				this.uncompressedData[i * 2] = soundBytes.getFloat(i * 4);
				this.uncompressedData[i * 2 + 1] = soundBytes.getFloat(i * 4);
			}
		} else {
			var this2 = new Array(count);
			this.uncompressedData = this2;
			var _g11 = 0;
			var _g2 = count;
			while(_g11 < _g2) {
				var i1 = _g11++;
				this.uncompressedData[i1] = soundBytes.getFloat(i1 * 4);
			}
		}
		this.compressedData = null;
		done();
	}
	,__class__: kha_Sound
};
var kha_System = function() { };
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = true;
kha_System.__properties__ = {get_refreshRate:"get_refreshRate",get_vsync:"get_vsync",get_time:"get_time"};
kha_System.init = function(options,callback) {
	if(options.title == null) {
		options.title = "Kha";
	}
	if(options.width == null) {
		options.width = 800;
	}
	if(options.height == null) {
		options.height = 600;
	}
	if(options.samplesPerPixel == null) {
		options.samplesPerPixel = 1;
	}
	if(options.vSync == null) {
		options.vSync = true;
	}
	if(options.windowMode == null) {
		options.windowMode = kha_WindowMode.Window;
	}
	if(options.resizable == null) {
		options.resizable = false;
	}
	if(options.maximizable == null) {
		options.maximizable = false;
	}
	if(options.minimizable == null) {
		options.minimizable = true;
	}
	kha_System.theTitle = options.title;
	kha_SystemImpl.init(options,callback);
};
kha_System.notifyOnRender = function(listener,id) {
	if(id == null) {
		id = 0;
	}
	while(id >= kha_System.renderListeners.length) kha_System.renderListeners.push([]);
	kha_System.renderListeners[id].push(listener);
};
kha_System.render = function(id,framebuffer) {
	if(kha_System.renderListeners.length == 0) {
		return;
	}
	var _g = 0;
	var _g1 = kha_System.renderListeners[id];
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(framebuffer);
	}
};
kha_System.foreground = function() {
	var _g = 0;
	var _g1 = kha_System.foregroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.background = function() {
	var _g = 0;
	var _g1 = kha_System.backgroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.get_time = function() {
	return kha_SystemImpl.getTime();
};
kha_System.windowWidth = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	return kha_SystemImpl.windowWidth(windowId);
};
kha_System.windowHeight = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	return kha_SystemImpl.windowHeight(windowId);
};
kha_System.get_vsync = function() {
	return kha_SystemImpl.getVsync();
};
kha_System.get_refreshRate = function() {
	return kha_SystemImpl.getRefreshRate();
};
var kha_GamepadStates = function() {
	this.axes = [];
	this.buttons = [];
};
$hxClasses["kha.GamepadStates"] = kha_GamepadStates;
kha_GamepadStates.__name__ = true;
kha_GamepadStates.prototype = {
	__class__: kha_GamepadStates
};
var kha_SystemImpl = function() { };
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = true;
kha_SystemImpl.init = function(options,callback) {
	kha_SystemImpl.options = options;
	kha_SystemImpl.mobile = kha_SystemImpl.isMobile();
	kha_SystemImpl.chrome = kha_SystemImpl.isChrome();
	kha_SystemImpl.firefox = kha_SystemImpl.isFirefox();
	kha_SystemImpl.init2();
	callback();
};
kha_SystemImpl.isMobile = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Android") >= 0 || agent.indexOf("webOS") >= 0 || agent.indexOf("iPhone") >= 0 || agent.indexOf("iPad") >= 0 || agent.indexOf("iPod") >= 0 || agent.indexOf("BlackBerry") >= 0 || agent.indexOf("Windows Phone") >= 0) {
		return true;
	} else {
		return false;
	}
};
kha_SystemImpl.isChrome = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Chrome") >= 0) {
		return true;
	} else {
		return false;
	}
};
kha_SystemImpl.isFirefox = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Firefox") >= 0) {
		return true;
	} else {
		return false;
	}
};
kha_SystemImpl.windowWidth = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	if(kha_SystemImpl.khanvas.width == 0 && kha_SystemImpl.options.width != null) {
		return kha_SystemImpl.options.width;
	} else {
		return kha_SystemImpl.khanvas.width;
	}
};
kha_SystemImpl.windowHeight = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	if(kha_SystemImpl.khanvas.height == 0 && kha_SystemImpl.options.height != null) {
		return kha_SystemImpl.options.height;
	} else {
		return kha_SystemImpl.khanvas.height;
	}
};
kha_SystemImpl.setCanvas = function(canvas) {
	kha_SystemImpl.khanvas = canvas;
};
kha_SystemImpl.getTime = function() {
	var performance = window.performance ? window.performance : window.Date;
	return performance.now() / 1000;
};
kha_SystemImpl.getVsync = function() {
	return true;
};
kha_SystemImpl.getRefreshRate = function() {
	return 60;
};
kha_SystemImpl.init2 = function(backbufferFormat) {
	haxe_Log.trace = js_Boot.__trace;
	kha_SystemImpl.keyboard = new kha_input_Keyboard();
	kha_SystemImpl.mouse = new kha_input_MouseImpl();
	kha_SystemImpl.surface = new kha_input_Surface();
	kha_SystemImpl.gamepads = [];
	kha_SystemImpl.gamepadStates = [];
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		kha_SystemImpl.gamepads[i] = new kha_input_Gamepad(i);
		kha_SystemImpl.gamepadStates[i] = new kha_GamepadStates();
	}
	kha_SystemImpl.pressedKeys = [];
	var _g1 = 0;
	while(_g1 < 256) {
		var i1 = _g1++;
		kha_SystemImpl.pressedKeys.push(false);
	}
	var _g2 = 0;
	while(_g2 < 256) {
		var i2 = _g2++;
		kha_SystemImpl.pressedKeys.push(null);
	}
	window.document.addEventListener("copy",function(e_) {
		var e = e_;
		if(kha_System.copyListener != null) {
			var data = kha_System.copyListener();
			if(data != null) {
				e.clipboardData.setData("text/plain",data);
			}
			e.preventDefault();
		}
	});
	window.document.addEventListener("cut",function(e_1) {
		var e1 = e_1;
		if(kha_System.cutListener != null) {
			var data1 = kha_System.cutListener();
			if(data1 != null) {
				e1.clipboardData.setData("text/plain",data1);
			}
			e1.preventDefault();
		}
	});
	window.document.addEventListener("paste",function(e_2) {
		var e2 = e_2;
		if(kha_System.pasteListener != null) {
			var tmp = e2.clipboardData.getData("text/plain");
			kha_System.pasteListener(tmp);
			e2.preventDefault();
		}
	});
	kha_CanvasImage.init();
	kha_Scheduler.init();
	kha_SystemImpl.loadFinished();
	kha_EnvironmentVariables.instance = new kha_js_EnvironmentVariables();
};
kha_SystemImpl.checkGamepad = function(pad) {
	var _g1 = 0;
	var _g = pad.axes.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(pad.axes[i] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].axes[i] != pad.axes[i]) {
				var axis = pad.axes[i];
				if(i % 2 == 1) {
					axis = -axis;
				}
				kha_SystemImpl.gamepadStates[pad.index].axes[i] = axis;
				kha_SystemImpl.gamepads[pad.index].sendAxisEvent(i,axis);
			}
		}
	}
	var _g11 = 0;
	var _g2 = pad.buttons.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		if(pad.buttons[i1] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].buttons[i1] != pad.buttons[i1].value) {
				kha_SystemImpl.gamepadStates[pad.index].buttons[i1] = pad.buttons[i1].value;
				kha_SystemImpl.gamepads[pad.index].sendButtonEvent(i1,pad.buttons[i1].value);
			}
		}
	}
	if(pad.axes.length <= 4 && pad.buttons.length > 7) {
		kha_SystemImpl.gamepadStates[pad.index].axes[4] = pad.buttons[6].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(4,pad.buttons[6].value);
		kha_SystemImpl.gamepadStates[pad.index].axes[5] = pad.buttons[7].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(5,pad.buttons[7].value);
	}
};
kha_SystemImpl.loadFinished = function() {
	var canvas = kha_SystemImpl.khanvas;
	if(canvas == null) {
		canvas = window.document.getElementById(kha_CompilerDefines.canvas_id);
	}
	canvas.style.cursor = "default";
	var gl = false;
	try {
		kha_SystemImpl.gl = canvas.getContext("webgl2",{ alpha : false, antialias : kha_SystemImpl.options.samplesPerPixel > 1, stencil : true, preserveDrawingBuffer : true});
		kha_SystemImpl.gl.pixelStorei(37441,1);
		kha_SystemImpl.halfFloat = { HALF_FLOAT_OES : 5131};
		kha_SystemImpl.depthTexture = { UNSIGNED_INT_24_8_WEBGL : 34042};
		kha_SystemImpl.drawBuffers = { COLOR_ATTACHMENT0_WEBGL : 36064};
		kha_SystemImpl.elementIndexUint = true;
		kha_SystemImpl.gl.getExtension("EXT_color_buffer_float");
		kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
		kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
		kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
		if(kha_SystemImpl.anisotropicFilter == null) {
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
		}
		gl = true;
		kha_SystemImpl.gl2 = true;
		kha_Shaders.init();
	} catch( e ) {
		haxe_Log.trace("Could not initialize WebGL 2, falling back to WebGL.",{ fileName : "SystemImpl.hx", lineNumber : 327, className : "kha.SystemImpl", methodName : "loadFinished"});
	}
	if(!kha_SystemImpl.gl2) {
		try {
			kha_SystemImpl.gl = canvas.getContext("experimental-webgl",{ alpha : false, antialias : kha_SystemImpl.options.samplesPerPixel > 1, stencil : true, preserveDrawingBuffer : true});
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.pixelStorei(37441,1);
				kha_SystemImpl.gl.getExtension("OES_texture_float");
				kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
				kha_SystemImpl.halfFloat = kha_SystemImpl.gl.getExtension("OES_texture_half_float");
				kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
				kha_SystemImpl.depthTexture = kha_SystemImpl.gl.getExtension("WEBGL_depth_texture");
				kha_SystemImpl.gl.getExtension("EXT_shader_texture_lod");
				kha_SystemImpl.gl.getExtension("OES_standard_derivatives");
				kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
				if(kha_SystemImpl.anisotropicFilter == null) {
					kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
				}
				kha_SystemImpl.drawBuffers = kha_SystemImpl.gl.getExtension("WEBGL_draw_buffers");
				kha_SystemImpl.elementIndexUint = kha_SystemImpl.gl.getExtension("OES_element_index_uint");
				gl = true;
				kha_Shaders.init();
			}
		} catch( e1 ) {
			haxe_Log.trace("Could not initialize WebGL, falling back to Canvas.",{ fileName : "SystemImpl.hx", lineNumber : 351, className : "kha.SystemImpl", methodName : "loadFinished"});
		}
	}
	kha_SystemImpl.setCanvas(canvas);
	if(gl) {
		var g4 = new kha_js_graphics4_Graphics();
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),new kha_js_graphics4_Graphics2(kha_SystemImpl.frame),g4);
	} else {
		kha_Kravur = kha_js_Font;
		var g2 = new kha_js_CanvasGraphics(canvas.getContext("2d"));
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,g2,null);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),g2,null);
	}
	if(!kha_SystemImpl.mobile && kha_audio2_Audio._init()) {
		kha_SystemImpl._hasWebAudio = true;
		kha_audio2_Audio1._init();
	} else if(kha_SystemImpl.mobile) {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_MobileWebAudio._init();
		kha_audio2_Audio1 = kha_js_MobileWebAudio;
	} else {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_AudioElementAudio._compile();
		kha_audio2_Audio1 = kha_js_AudioElementAudio;
	}
	kha_vr_VrInterface.instance = new kha_js_vr_VrInterface();
	kha_Scheduler.start();
	var $window = window;
	var requestAnimationFrame = $window.requestAnimationFrame;
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.mozRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.webkitRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.msRequestAnimationFrame;
	}
	var animate = null;
	animate = function(timestamp) {
		var window1 = window;
		if(requestAnimationFrame == null) {
			window1.setTimeout(animate,16.6666666666666679);
		} else {
			requestAnimationFrame(animate);
		}
		var sysGamepads = kha_SystemImpl.getGamepads();
		if(sysGamepads != null) {
			var _g1 = 0;
			var _g = sysGamepads.length;
			while(_g1 < _g) {
				var i = _g1++;
				var pad = sysGamepads[i];
				if(pad != null) {
					kha_SystemImpl.checkGamepad(pad);
				}
			}
		}
		kha_Scheduler.executeFrame();
		if(canvas.getContext) {
			var displayWidth = canvas.clientWidth;
			var displayHeight = canvas.clientHeight;
			if(canvas.width != displayWidth || canvas.height != displayHeight) {
				canvas.width = displayWidth;
				canvas.height = displayHeight;
			}
			kha_System.render(0,kha_SystemImpl.frame);
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.clearColor(1,1,1,1);
				kha_SystemImpl.gl.colorMask(false,false,false,true);
				kha_SystemImpl.gl.clear(16384);
				kha_SystemImpl.gl.colorMask(true,true,true,true);
			}
		}
	};
	var animate1 = animate;
	if(requestAnimationFrame == null) {
		$window.setTimeout(animate1,16.6666666666666679);
	} else {
		requestAnimationFrame(animate1);
	}
	if(canvas.getAttribute("tabindex") == null) {
		canvas.setAttribute("tabindex","0");
	}
	canvas.focus();
	canvas.oncontextmenu = function(event) {
		event.stopPropagation();
		event.preventDefault();
	};
	canvas.onmousedown = kha_SystemImpl.mouseDown;
	canvas.onmousemove = kha_SystemImpl.mouseMove;
	if(kha_SystemImpl.keyboard != null) {
		canvas.onkeydown = kha_SystemImpl.keyDown;
		canvas.onkeyup = kha_SystemImpl.keyUp;
		canvas.onkeypress = kha_SystemImpl.keyPress;
	}
	canvas.onblur = kha_SystemImpl.onBlur;
	canvas.onfocus = kha_SystemImpl.onFocus;
	canvas.onmousewheel = canvas.onwheel = kha_SystemImpl.mouseWheel;
	canvas.onmouseleave = kha_SystemImpl.mouseLeave;
	canvas.addEventListener("wheel mousewheel",kha_SystemImpl.mouseWheel,false);
	canvas.addEventListener("touchstart",kha_SystemImpl.touchDown,false);
	canvas.addEventListener("touchend",kha_SystemImpl.touchUp,false);
	canvas.addEventListener("touchmove",kha_SystemImpl.touchMove,false);
	window.addEventListener("unload",kha_SystemImpl.unload);
};
kha_SystemImpl.unload = function(_) {
};
kha_SystemImpl.setMouseXY = function(event) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.mouseX = (event.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.mouseY = (event.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.unlockSoundOnIOS = function() {
	if(!kha_SystemImpl.mobile || kha_SystemImpl.iosSoundEnabled) {
		return;
	}
	var buffer = kha_js_MobileWebAudio._context.createBuffer(1,1,22050);
	var source = kha_js_MobileWebAudio._context.createBufferSource();
	source.buffer = buffer;
	source.connect(kha_js_MobileWebAudio._context.destination);
	if(source.noteOn) {
		source.noteOn(0);
	}
	kha_SystemImpl.iosSoundEnabled = true;
};
kha_SystemImpl.mouseLeave = function() {
	kha_SystemImpl.mouse.sendLeaveEvent(0);
};
kha_SystemImpl.mouseWheel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	event.preventDefault();
	if(event.deltaMode == 0) {
		if(event.deltaY < 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,-1);
		} else if(event.deltaY > 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,1);
		}
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	if(event.deltaMode == 1) {
		kha_SystemImpl.minimumScroll = Math.min(kha_SystemImpl.minimumScroll,Math.abs(event.deltaY)) | 0;
		kha_SystemImpl.mouse.sendWheelEvent(0,event.deltaY / kha_SystemImpl.minimumScroll | 0);
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	kha_SystemImpl.insideInputEvent = false;
	return false;
};
kha_SystemImpl.mouseDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	kha_SystemImpl.setMouseXY(event);
	if(event.which == 1) {
		if(event.ctrlKey) {
			kha_SystemImpl.leftMouseCtrlDown = true;
			kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		} else {
			kha_SystemImpl.leftMouseCtrlDown = false;
			kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		}
		if(($_=kha_SystemImpl.khanvas,$bind($_,$_.setCapture)) != null) {
			kha_SystemImpl.khanvas.setCapture();
		} else {
			kha_SystemImpl.khanvas.ownerDocument.addEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
		}
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	} else if(event.which == 2) {
		kha_SystemImpl.mouse.sendDownEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	} else if(event.which == 3) {
		kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseLeftUp = function(event) {
	kha_SystemImpl.unlockSoundOnIOS();
	if(event.which != 1) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.releaseCapture)) != null) {
		kha_SystemImpl.khanvas.ownerDocument.releaseCapture();
	} else {
		kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
	}
	if(kha_SystemImpl.leftMouseCtrlDown) {
		kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	} else {
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	}
	kha_SystemImpl.leftMouseCtrlDown = false;
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMiddleUp = function(event) {
	kha_SystemImpl.unlockSoundOnIOS();
	if(event.which != 2) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	kha_SystemImpl.mouse.sendUpEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseRightUp = function(event) {
	kha_SystemImpl.unlockSoundOnIOS();
	if(event.which != 3) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.documentMouseMove = function(event) {
	event.stopPropagation();
	kha_SystemImpl.mouseMove(event);
};
kha_SystemImpl.mouseMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	var lastMouseX = kha_SystemImpl.mouseX;
	var lastMouseY = kha_SystemImpl.mouseY;
	kha_SystemImpl.setMouseXY(event);
	var movementX = event.movementX;
	var movementY = event.movementY;
	if(event.movementX == null) {
		if(event.mozMovementX != null) {
			movementX = event.mozMovementX;
		} else if(event.webkitMovementX != null) {
			movementX = event.webkitMovementX;
		} else {
			movementX = kha_SystemImpl.mouseX - lastMouseX;
		}
		if(event.mozMovementY != null) {
			movementY = event.mozMovementY;
		} else if(event.webkitMovementY != null) {
			movementY = event.webkitMovementY;
		} else {
			movementY = kha_SystemImpl.mouseY - lastMouseY;
		}
	}
	if(kha_SystemImpl.firefox) {
		movementX = movementX * window.devicePixelRatio | 0;
		movementY = movementY * window.devicePixelRatio | 0;
	}
	kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY,movementX,movementY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.setTouchXY = function(touch) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.touchX = (touch.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.touchY = (touch.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.touchDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	event.stopPropagation();
	event.preventDefault();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchStartEvent(touch.identifier,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(touch.identifier,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		if(index == 0) {
			var movementX = kha_SystemImpl.touchX - kha_SystemImpl.lastFirstTouchX;
			var movementY = kha_SystemImpl.touchY - kha_SystemImpl.lastFirstTouchY;
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
			kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.touchX,kha_SystemImpl.touchY,movementX,movementY);
		}
		kha_SystemImpl.surface.sendMoveEvent(touch.identifier,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.onBlur = function() {
	kha_System.background();
};
kha_SystemImpl.onFocus = function() {
	kha_System.foreground();
};
kha_SystemImpl.keyDown = function(event) {
	event.stopPropagation();
	if(kha_SystemImpl.pressedKeys[event.keyCode]) {
		event.preventDefault();
		return;
	}
	kha_SystemImpl.pressedKeys[event.keyCode] = true;
	kha_SystemImpl.keyboard.sendDownEvent(event.keyCode);
};
kha_SystemImpl.keyUp = function(event) {
	event.preventDefault();
	event.stopPropagation();
	kha_SystemImpl.pressedKeys[event.keyCode] = false;
	kha_SystemImpl.keyboard.sendUpEvent(event.keyCode);
};
kha_SystemImpl.keyPress = function(event) {
	event.stopPropagation();
	kha_SystemImpl.keyboard.sendPressEvent(String.fromCharCode(event.which));
};
kha_SystemImpl.getGamepads = function() {
	if(kha_SystemImpl.chrome && kha_vr_VrInterface.instance.IsVrEnabled()) {
		return null;
	}
	if(navigator.getGamepads) {
		return window.navigator.getGamepads();
	} else {
		return null;
	}
};
var kha_WebGLImage = function(width,height,format,renderTarget,depthStencilFormat) {
	this.depthTexture = null;
	this.texture = null;
	this.renderBuffer = null;
	this.frameBuffer = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	this.depthStencilFormat = depthStencilFormat;
	kha_WebGLImage.init();
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.WebGLImage"] = kha_WebGLImage;
kha_WebGLImage.__name__ = true;
kha_WebGLImage.init = function() {
	if(kha_WebGLImage.context == null) {
		var canvas = window.document.createElement("canvas");
		if(canvas != null) {
			kha_WebGLImage.context = canvas.getContext("2d");
			canvas.width = 2048;
			canvas.height = 2048;
			kha_WebGLImage.context.globalCompositeOperation = "copy";
		}
	}
};
kha_WebGLImage.formatByteSize = function(format) {
	switch(format[1]) {
	case 0:
		return 4;
	case 1:
		return 1;
	case 2:
		return 16;
	case 3:
		return 2;
	case 4:
		return 8;
	case 5:
		return 4;
	case 6:
		return 2;
	}
};
kha_WebGLImage.__super__ = kha_Image;
kha_WebGLImage.prototype = $extend(kha_Image.prototype,{
	get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			var _g = this.format;
			switch(_g[1]) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			}
			if(this.format == kha_graphics4_TextureFormat.DEPTH16) {
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.texture,0);
				if(navigator.appVersion.indexOf("Win") == -1) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(3553,colortex);
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,colortex,0);
					kha_SystemImpl.gl.bindTexture(3553,this.texture);
				}
			} else {
				kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			if(kha_SystemImpl.gl.checkFramebufferStatus(36160) != 36053) {
				haxe_Log.trace("WebGL error: Framebuffer incomplete",{ fileName : "WebGLImage.hx", lineNumber : 206, className : "kha.WebGLImage", methodName : "createTexture"});
			}
			kha_SystemImpl.gl.bindRenderbuffer(36161,null);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			var _g1 = this.format;
			switch(_g1[1]) {
			case 0:
				if(js_Boot.__instanceof(this.image,Uint8Array)) {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5121,this.image);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,this.image);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.image);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
			}
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,33189,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				if(depthStencilFormat == 1) {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5125,null);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				}
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
			}
			break;
		case 2:case 3:case 4:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,34041,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.get_realWidth(),this.get_realHeight(),0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,33306,3553,this.depthTexture,0);
			}
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,setDepthStencilFrom: function(image) {
		kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,(js_Boot.__cast(image , kha_WebGLImage)).depthTexture,0);
	}
	,bytesToArray: function(bytes) {
		var _g = this.format;
		switch(_g[1]) {
		case 0:case 1:
			return new Uint8Array(bytes.b.bufferValue);
		case 2:case 4:case 5:case 6:
			return new Float32Array(bytes.b.bufferValue);
		default:
			return new Uint8Array(bytes.b.bufferValue);
		}
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			var _g = this.format;
			switch(_g[1]) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,this.bytesToArray(this.bytes));
				if(kha_SystemImpl.gl.getError() == 1282) {
					var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
					var _g1 = 0;
					var _g2 = this.get_height();
					while(_g1 < _g2) {
						var y = _g1++;
						var _g3 = 0;
						var _g21 = this.get_width();
						while(_g3 < _g21) {
							var x = _g3++;
							var _this = this.bytes;
							var pos = y * this.get_width() + x;
							var value = _this.b[pos];
							var pos1 = y * this.get_width() * 4 + x * 4;
							rgbaBytes.b[pos1] = value & 255;
							var pos2 = y * this.get_width() * 4 + x * 4 + 1;
							rgbaBytes.b[pos2] = value & 255;
							var pos3 = y * this.get_width() * 4 + x * 4 + 2;
							rgbaBytes.b[pos3] = value & 255;
							var pos4 = y * this.get_width() * 4 + x * 4 + 3;
							rgbaBytes.b[pos4] = 255;
						}
					}
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(rgbaBytes));
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_width(),this.get_height(),0,6408,5126,this.bytesToArray(this.bytes));
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_width(),this.get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.bytesToArray(this.bytes));
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		if(this.texture != null) {
			kha_SystemImpl.gl.deleteTexture(this.texture);
		}
		if(this.depthTexture != null) {
			kha_SystemImpl.gl.deleteTexture(this.depthTexture);
		}
		if(this.frameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.frameBuffer);
		}
		if(this.renderBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.renderBuffer);
		}
	}
	,generateMipmaps: function(levels) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.generateMipmap(3553);
	}
	,setMipmaps: function(mipmaps) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.format == kha_graphics4_TextureFormat.RGBA128) {
			var _g1 = 0;
			var _g = mipmaps.length;
			while(_g1 < _g) {
				var i = _g1++;
				kha_SystemImpl.gl.texImage2D(3553,i + 1,kha_SystemImpl.gl2 ? 34836 : 6408,mipmaps[i].get_width(),mipmaps[i].get_height(),0,6408,5126,(js_Boot.__cast(mipmaps[i] , kha_WebGLImage)).image);
			}
		} else if(this.format == kha_graphics4_TextureFormat.RGBA64) {
			var _g11 = 0;
			var _g2 = mipmaps.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				kha_SystemImpl.gl.texImage2D(3553,i1 + 1,kha_SystemImpl.gl2 ? 34842 : 6408,mipmaps[i1].get_width(),mipmaps[i1].get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,(js_Boot.__cast(mipmaps[i1] , kha_WebGLImage)).image);
			}
		} else {
			var _g12 = 0;
			var _g3 = mipmaps.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				kha_SystemImpl.gl.texImage2D(3553,i2 + 1,6408,6408,5121,(js_Boot.__cast(mipmaps[i2] , kha_WebGLImage)).image);
			}
		}
	}
	,__class__: kha_WebGLImage
});
var kha_audio1_AudioChannel = function() { };
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = true;
kha_audio1_AudioChannel.prototype = {
	__class__: kha_audio1_AudioChannel
};
var kha_audio2_Audio = function() { };
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = true;
kha_audio2_Audio.initContext = function() {
	try {
		kha_audio2_Audio._context = new AudioContext();
		return;
	} catch( e ) {
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e1 ) {
	}
};
kha_audio2_Audio._init = function() {
	kha_audio2_Audio.initContext();
	if(kha_audio2_Audio._context == null) {
		return false;
	}
	var bufferSize = 2048;
	kha_audio2_Audio.buffer = new kha_audio2_Buffer(bufferSize * 4,2,kha_audio2_Audio._context.sampleRate | 0);
	kha_audio2_Audio.processingNode = kha_audio2_Audio._context.createScriptProcessor(bufferSize,0,2);
	kha_audio2_Audio.processingNode.onaudioprocess = function(e) {
		var output1 = e.outputBuffer.getChannelData(0);
		var output2 = e.outputBuffer.getChannelData(1);
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.audioCallback(e.outputBuffer.length * 2,kha_audio2_Audio.buffer);
			var _g1 = 0;
			var _g = e.outputBuffer.length;
			while(_g1 < _g) {
				var i = _g1++;
				output1[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				output2[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.readLocation = 0;
				}
			}
		} else {
			var _g11 = 0;
			var _g2 = e.outputBuffer.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				output1[i1] = 0;
				output2[i1] = 0;
			}
		}
	};
	kha_audio2_Audio.processingNode.connect(kha_audio2_Audio._context.destination);
	return true;
};
var kha_audio2_Audio1 = function() { };
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = true;
kha_audio2_Audio1._init = function() {
	var this1 = new Array(16);
	kha_audio2_Audio1.soundChannels = this1;
	var this2 = new Array(16);
	kha_audio2_Audio1.streamChannels = this2;
	var this3 = new Array(16);
	kha_audio2_Audio1.internalSoundChannels = this3;
	var this4 = new Array(16);
	kha_audio2_Audio1.internalStreamChannels = this4;
	var this5 = new Array(512);
	kha_audio2_Audio1.sampleCache1 = this5;
	var this6 = new Array(512);
	kha_audio2_Audio1.sampleCache2 = this6;
	kha_audio2_Audio.audioCallback = kha_audio2_Audio1.mix;
};
kha_audio2_Audio1.mix = function(samples,buffer) {
	if(kha_audio2_Audio1.sampleCache1.length < samples) {
		var this1 = new Array(samples);
		kha_audio2_Audio1.sampleCache1 = this1;
		var this2 = new Array(samples);
		kha_audio2_Audio1.sampleCache2 = this2;
	}
	var _g1 = 0;
	var _g = samples;
	while(_g1 < _g) {
		var i = _g1++;
		kha_audio2_Audio1.sampleCache2[i] = 0;
	}
	var _g2 = 0;
	while(_g2 < 16) {
		var i1 = _g2++;
		kha_audio2_Audio1.internalSoundChannels[i1] = kha_audio2_Audio1.soundChannels[i1];
	}
	var _g3 = 0;
	while(_g3 < 16) {
		var i2 = _g3++;
		kha_audio2_Audio1.internalStreamChannels[i2] = kha_audio2_Audio1.streamChannels[i2];
	}
	var _g4 = 0;
	var _g11 = kha_audio2_Audio1.internalSoundChannels;
	while(_g4 < _g11.length) {
		var channel = _g11[_g4];
		++_g4;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g31 = 0;
		var _g21 = samples;
		while(_g31 < _g21) {
			var i3 = _g31++;
			var _g41 = i3;
			var _g5 = kha_audio2_Audio1.sampleCache2;
			var val = kha_audio2_Audio1.sampleCache1[i3] * channel.get_volume();
			_g5[_g41] = _g5[_g41] + val;
		}
	}
	var _g6 = 0;
	var _g12 = kha_audio2_Audio1.internalStreamChannels;
	while(_g6 < _g12.length) {
		var channel1 = _g12[_g6];
		++_g6;
		if(channel1 == null || channel1.get_finished()) {
			continue;
		}
		channel1.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g32 = 0;
		var _g22 = samples;
		while(_g32 < _g22) {
			var i4 = _g32++;
			var _g42 = i4;
			var _g51 = kha_audio2_Audio1.sampleCache2;
			var val1 = kha_audio2_Audio1.sampleCache1[i4] * channel1.get_volume();
			_g51[_g42] = _g51[_g42] + val1;
		}
	}
	var _g13 = 0;
	var _g7 = samples;
	while(_g13 < _g7) {
		var i5 = _g13++;
		var a = kha_audio2_Audio1.sampleCache2[i5];
		var a1 = a < 1.0 ? a : 1.0;
		buffer.data[buffer.writeLocation] = a1 > -1.0 ? a1 : -1.0;
		buffer.writeLocation += 1;
		if(buffer.writeLocation >= buffer.size) {
			buffer.writeLocation = 0;
		}
	}
};
kha_audio2_Audio1.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = null;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished()) {
			channel = new kha_audio2_AudioChannel(loop);
			channel.data = sound.uncompressedData;
			kha_audio2_Audio1.soundChannels[i] = channel;
			break;
		}
	}
	return channel;
};
var kha_audio2_AudioChannel = function(looping) {
	this.paused = false;
	this.looping = looping;
	this.myVolume = 1;
	this.myPosition = 0;
};
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = true;
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_AudioChannel.prototype = {
	nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g1 = 0;
			var _g = length;
			while(_g1 < _g) {
				var i = _g1++;
				samples[i] = 0;
			}
			return;
		}
		var w_ptr = 0;
		var chk_ptr = 0;
		while(w_ptr < length) {
			var addressable_data = this.data.length - this.myPosition;
			var next_chunk = addressable_data < length ? addressable_data : length;
			while(chk_ptr < next_chunk) {
				samples[w_ptr] = this.data[this.myPosition];
				++this.myPosition;
				++chk_ptr;
				++w_ptr;
			}
			if(!this.looping) {
				break;
			} else {
				chk_ptr = 0;
				if(this.myPosition >= this.data.length) {
					this.myPosition = 0;
				}
			}
		}
		while(w_ptr < length) {
			samples[w_ptr] = 0;
			++w_ptr;
		}
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,get_finished: function() {
		return this.myPosition >= this.data.length;
	}
	,__class__: kha_audio2_AudioChannel
	,__properties__: {get_finished:"get_finished",get_volume:"get_volume"}
};
var kha_audio2_Buffer = function(size,channels,samplesPerSecond) {
	this.size = size;
	var this1 = new Array(size);
	this.data = this1;
	this.channels = channels;
	this.samplesPerSecond = samplesPerSecond;
	this.readLocation = 0;
	this.writeLocation = 0;
};
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = true;
kha_audio2_Buffer.prototype = {
	__class__: kha_audio2_Buffer
};
var kha_audio2_StreamChannel = function() {
	this.paused = false;
	this.atend = false;
};
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = true;
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_StreamChannel.prototype = {
	nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g1 = 0;
			var _g = length;
			while(_g1 < _g) {
				var i = _g1++;
				samples[i] = 0;
			}
			return;
		}
		var count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			var _g11 = count;
			var _g2 = length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				samples[i1] = 0;
			}
		}
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,get_finished: function() {
		return this.atend;
	}
	,__class__: kha_audio2_StreamChannel
	,__properties__: {get_finished:"get_finished",get_volume:"get_volume"}
};
var kha_audio2_ogg_tools_Crc32 = function() { };
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = true;
kha_audio2_ogg_tools_Crc32.init = function() {
	if(kha_audio2_ogg_tools_Crc32.table != null) {
		return;
	}
	var this1 = new Array(256);
	kha_audio2_ogg_tools_Crc32.table = this1;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		var s = i << 24;
		var _g1 = 0;
		while(_g1 < 8) {
			var j = _g1++;
			s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		}
		kha_audio2_ogg_tools_Crc32.table[i] = s;
	}
};
var kha_audio2_ogg_vorbis_Reader = function(input,seekFunc,inputLength) {
	this.seekFunc = seekFunc;
	this.inputLength = inputLength;
	this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	this.decoder.setupSampleNumber(seekFunc,inputLength);
	this.loopStart = this.get_header().comment.get_loopStart();
	this.loopLength = this.get_header().comment.get_loopLength();
};
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = true;
kha_audio2_ogg_vorbis_Reader.openFromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var a1 = input;
	return new kha_audio2_ogg_vorbis_Reader(input,function(a2) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(a1,a2);
	},bytes.length);
};
kha_audio2_ogg_vorbis_Reader.seekBytes = function(bytes,pos) {
	bytes.set_position(pos);
};
kha_audio2_ogg_vorbis_Reader.readAll = function(bytes,output,useFloat) {
	if(useFloat == null) {
		useFloat = false;
	}
	var input = new haxe_io_BytesInput(bytes);
	var decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	var a1 = input;
	decoder.setupSampleNumber(function(a2) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(a1,a2);
	},bytes.length);
	var header = decoder.header;
	var count = 0;
	var bufferSize = 4096;
	var length = bufferSize * header.channel;
	var this1 = new Array(length);
	var buffer = this1;
	while(true) {
		var n = decoder.read(buffer,bufferSize,header.channel,header.sampleRate,useFloat);
		var _g1 = 0;
		var _g = n * header.channel;
		while(_g1 < _g) {
			var i = _g1++;
			output.writeFloat(buffer[i]);
		}
		if(n == 0) {
			break;
		}
		count += n;
	}
	return decoder.header;
};
kha_audio2_ogg_vorbis_Reader.prototype = {
	get_header: function() {
		return this.decoder.header;
	}
	,get_currentSample: function() {
		return this.decoder.currentSample;
	}
	,set_currentSample: function(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	,get_currentMillisecond: function() {
		var samples = this.get_currentSample();
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,set_currentMillisecond: function(value) {
		var _g = value / 1000;
		var _g1 = this.get_header().sampleRate;
		this.set_currentSample(Math.floor(_$UInt_UInt_$Impl_$.toFloat(_g1) * _g));
		return this.get_currentMillisecond();
	}
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	,__class__: kha_audio2_ogg_vorbis_Reader
	,__properties__: {set_currentMillisecond:"set_currentMillisecond",get_currentMillisecond:"get_currentMillisecond",set_currentSample:"set_currentSample",get_currentSample:"get_currentSample",get_header:"get_header"}
};
var kha_audio2_ogg_vorbis_VorbisDecodeState = function(input) {
	this.nextSeg = 0;
	this.firstDecode = false;
	this.bytesInSeg = 0;
	this.validBits = 0;
	this.input = input;
	this.inputPosition = 0;
	this.page = new kha_audio2_ogg_vorbis_data_Page();
	kha_audio2_ogg_tools_Crc32.init();
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = true;
kha_audio2_ogg_vorbis_VorbisDecodeState.prototype = {
	setup: function(loc0,loc1) {
		this.inputPosition += 1;
		var segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		var this1 = new Array(segmentCount);
		var vec = this1;
		var _g1 = 0;
		var _g = segmentCount;
		while(_g1 < _g) {
			var i = _g1++;
			vec[i] = this.input.readByte();
		}
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			var i1 = segmentCount - 1;
			while(i1 >= 0) {
				if(this.segments[i1] < 255) {
					break;
				}
				if(i1 >= 0) {
					this.endSegWithKnownLoc = i1;
					this.knownLocForPacket = loc0;
				}
				--i1;
			}
		}
		if(this.firstDecode) {
			var i2 = 0;
			var len = 0;
			var p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			var _g11 = 0;
			var _g2 = segmentCount;
			while(_g11 < _g2) {
				var i3 = _g11++;
				len += this.segments[i3];
			}
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	,clone: function(seekFunc) {
		var state = Type.createEmptyInstance(kha_audio2_ogg_vorbis_VorbisDecodeState);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	,next: function() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				if( js_Boot.__instanceof(e,kha_audio2_ogg_vorbis_data_ReaderError) ) {
					this.lastSeg = true;
					this.error = e;
					return 0;
				} else throw(e);
			}
			if((this.page.flag & 1) == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		var len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		var b = this.bytesInSeg == 0;
		this.bytesInSeg = len;
		return len;
	}
	,startPacket: function() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	,maybeStartPacket: function() {
		if(this.nextSeg == -1) {
			var eof = false;
			var x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
					eof = true;
					x = 0;
				} else throw(e);
			}
			if(eof) {
				return false;
			}
			var tmp;
			var tmp1;
			var tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	,readBits: function(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						this.inputPosition += 1;
						this.acc = this.acc + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					var z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			var z1 = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z1;
		}
	}
	,firstPageValidate: function() {
		if(this.segments.length != 1) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "VorbisDecodeState.hx", lineNumber : 307, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "VorbisDecodeState.hx", lineNumber : 310, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	,startFirstDecode: function() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	,prepHuffman: function() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					this.inputPosition += 1;
					this.acc = this.acc + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	,finishDecodePacket: function(previousLength,n,r) {
		var left = r.left.start;
		var currentLocValid = false;
		var n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		} else {
			var tmp = previousLength == 0 && currentLocValid;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				var currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					var len = currentEnd < this.currentLoc ? 0 : currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	,getSampleNumber: function(seekFunc,inputLength) {
		var restoreOffset = this.inputPosition;
		var previousSafe = _$UInt_UInt_$Impl_$.gte(inputLength,65536) && _$UInt_UInt_$Impl_$.gte(inputLength - 65536,this.firstAudioPageOffset) ? inputLength - 65536 : this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		var end = 0;
		var last = false;
		var _g = this.findPage(seekFunc,inputLength);
		switch(_g[1]) {
		case 0:
			var l = _g[3];
			var e = _g[2];
			end = e;
			last = l;
			break;
		case 1:
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 518, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
			break;
		}
		var lastPageLoc = this.inputPosition;
		try {
			while(!last) {
				seekFunc(this.inputPosition = end);
				var _g1 = this.findPage(seekFunc,inputLength);
				switch(_g1[1]) {
				case 0:
					var l1 = _g1[3];
					var e1 = _g1[2];
					end = e1;
					last = l1;
					break;
				case 1:
					throw "__break__";
					break;
				}
				previousSafe = lastPageLoc + 1;
				lastPageLoc = this.inputPosition;
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		var this1 = new Array(6);
		var vec = this1;
		var _g11 = 0;
		var _g2 = 6;
		while(_g11 < _g2) {
			var i = _g11++;
			vec[i] = this.input.readByte();
		}
		var vorbisHeader = vec;
		this.inputPosition += 4;
		var lo = this.input.readInt32();
		this.inputPosition += 4;
		var hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 552, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	,findPage: function(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				var n = this.input.readByte();
				if(n == 79) {
					var retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					var tmp;
					var tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					var this1 = new Array(27);
					var header = this1;
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					var _g = 4;
					while(_g < 27) {
						var i = _g++;
						this.inputPosition += 1;
						header[i] = this.input.readByte();
					}
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					var goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					var _g1 = 22;
					while(_g1 < 26) {
						var i1 = _g1++;
						header[i1] = 0;
					}
					var crc = 0;
					var _g2 = 0;
					while(_g2 < 27) {
						var i2 = _g2++;
						crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[i2] ^ crc >>> 24];
					}
					var len = 0;
					try {
						var _g11 = 0;
						var _g3 = header[26];
						while(_g11 < _g3) {
							var i3 = _g11++;
							this.inputPosition += 1;
							var s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						var _g12 = 0;
						var _g4 = len;
						while(_g12 < _g4) {
							var i4 = _g12++;
							this.inputPosition += 1;
							var $byte = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[$byte ^ crc >>> 24];
						}
					} catch( e ) {
						if (e instanceof js__$Boot_HaxeError) e = e.val;
						if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else throw(e);
					}
					if(crc == goal) {
						var end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			if( js_Boot.__instanceof(e1,haxe_io_Eof) ) {
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else throw(e1);
		}
	}
	,analyzePage: function(seekFunc,h) {
		var z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		var this1 = new Array(255);
		var packetType = this1;
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		var this2 = new Array(27);
		var vec = this2;
		var _g1 = 0;
		var _g = 27;
		while(_g1 < _g) {
			var i = _g1++;
			vec[i] = this.input.readByte();
		}
		var pageHeader = vec;
		var n = pageHeader[26];
		this.inputPosition += n;
		var this3 = new Array(n);
		var vec1 = this3;
		var _g11 = 0;
		var _g2 = n;
		while(_g11 < _g2) {
			var i1 = _g11++;
			vec1[i1] = this.input.readByte();
		}
		var lacing = vec1;
		var len = 0;
		var _g12 = 0;
		var _g3 = pageHeader[26];
		while(_g12 < _g3) {
			var i2 = _g12++;
			len += lacing[i2];
		}
		z.pageEnd = z.pageStart + 27 + pageHeader[26] + len;
		z.lastDecodedSample = pageHeader[6] + (pageHeader[7] << 8) + (pageHeader[8] << 16) + (pageHeader[9] << 16);
		if((pageHeader[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		var numPacket = 0;
		var packetStart = (pageHeader[5] & 1) == 0;
		var modeCount = h.modes.length;
		var _g13 = 0;
		var _g4 = pageHeader[26];
		while(_g13 < _g4) {
			var i3 = _g13++;
			if(packetStart) {
				if(lacing[i3] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				var n1 = this.input.readByte();
				if((n1 & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n1 >>= 1;
				var n2 = modeCount - 1;
				var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				var b = n2 < 16384 ? n2 < 16 ? log2_4[n2] : n2 < 512 ? 5 + log2_4[n2 >> 5] : 10 + log2_4[n2 >> 10] : n2 < 16777216 ? n2 < 524288 ? 15 + log2_4[n2 >> 15] : 20 + log2_4[n2 >> 20] : n2 < 536870912 ? 25 + log2_4[n2 >> 25] : n2 < -2147483648 ? 30 + log2_4[n2 >> 30] : 0;
				n1 &= (1 << b) - 1;
				if(n1 >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n1].blockflag;
				var len1 = lacing[i3] - 1;
				this.inputPosition += len1;
				var this4 = new Array(len1);
				var vec2 = this4;
				var _g14 = 0;
				var _g5 = len1;
				while(_g14 < _g5) {
					var i4 = _g14++;
					vec2[i4] = this.input.readByte();
				}
			} else {
				var len2 = lacing[i3];
				this.inputPosition += len2;
				var this5 = new Array(len2);
				var vec3 = this5;
				var _g15 = 0;
				var _g6 = len2;
				while(_g15 < _g6) {
					var i5 = _g15++;
					vec3[i5] = this.input.readByte();
				}
			}
			packetStart = lacing[i3] < 255;
		}
		var samples = 0;
		if(numPacket > 1) {
			samples += packetType[numPacket - 1] ? h.blocksize1 : h.blocksize0;
		}
		var i6 = numPacket - 2;
		while(i6 >= 1) {
			--i6;
			if(packetType[i6]) {
				if(packetType[i6 + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i6;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	,decodeScalarRaw: function(c) {
		this.prepHuffman();
		var b = c.sortedCodewords != null || c.codewords != null;
		var codewordLengths = c.codewordLengths;
		var codewords = c.codewords;
		var sortedCodewords = c.sortedCodewords;
		if(c.entries > 8 ? sortedCodewords != null : codewords != null) {
			var n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			var code = n >>> 16 | n << 16;
			var x = 0;
			var n1 = c.sortedEntries;
			while(n1 > 1) {
				var m = x + (n1 >> 1);
				if(_$UInt_UInt_$Impl_$.gte(code,sortedCodewords[m])) {
					x = m;
					n1 -= n1 >> 1;
				} else {
					n1 >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			var len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		var b1 = !c.sparse;
		var _g1 = 0;
		var _g = c.entries;
		while(_g1 < _g) {
			var i = _g1++;
			var cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 846, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
};
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxClasses["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__ : true, __constructs__ : ["Found","NotFound"] };
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found = function(end,last) { var $x = ["Found",0,end,last]; $x.__enum__ = kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult; $x.toString = $estr; return $x; };
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound = ["NotFound",1];
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound.toString = $estr;
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound.__enum__ = kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult;
var kha_audio2_ogg_vorbis_VorbisDecoder = function(header,decodeState) {
	this.header = header;
	this.decodeState = decodeState;
	this.totalSample = null;
	this.currentSample = 0;
	this.previousLength = 0;
	var length = header.channel;
	var this1 = new Array(length);
	this.channelBuffers = this1;
	var length1 = header.channel;
	var this2 = new Array(length1);
	this.previousWindow = this2;
	var length2 = header.channel;
	var this3 = new Array(length2);
	this.finalY = this3;
	var _g1 = 0;
	var _g = header.channel;
	while(_g1 < _g) {
		var i = _g1++;
		var this4 = this.channelBuffers;
		var len = header.blocksize1;
		var this5 = new Array(len);
		var vec = this5;
		this4[i] = vec;
		var this6 = this.previousWindow;
		var len1 = header.blocksize1 / 2 | 0;
		var this7 = new Array(len1);
		var vec1 = this7;
		this6[i] = vec1;
		this.finalY[i] = [];
	}
	var this8 = new Array(2);
	this.a = this8;
	var this9 = new Array(2);
	this.b = this9;
	var this10 = new Array(2);
	this.c = this10;
	var this11 = new Array(2);
	this.window = this11;
	var this12 = new Array(2);
	this.bitReverseData = this12;
	this.initBlocksize(0,header.blocksize0);
	this.initBlocksize(1,header.blocksize1);
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = true;
kha_audio2_ogg_vorbis_VorbisDecoder.start = function(input) {
	var decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
	var header = kha_audio2_ogg_vorbis_data_Header.read(decodeState);
	var decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(header,decodeState);
	decodeState.startFirstDecode();
	decoder.pumpFirstFrame();
	return decoder;
};
kha_audio2_ogg_vorbis_VorbisDecoder.prototype = {
	read: function(output,samples,channels,sampleRate,useFloat) {
		var b = this.header.sampleRate;
		if((_$UInt_UInt_$Impl_$.toFloat(sampleRate) % _$UInt_UInt_$Impl_$.toFloat(b) | 0) != 0) {
			throw new js__$Boot_HaxeError("Unsupported sampleRate : can't convert " + Std.string(_$UInt_UInt_$Impl_$.toFloat(this.header.sampleRate)) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw new js__$Boot_HaxeError("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		var b1 = this.header.sampleRate;
		var sampleRepeat = _$UInt_UInt_$Impl_$.toFloat(sampleRate) / _$UInt_UInt_$Impl_$.toFloat(b1) | 0;
		var channelRepeat = channels / this.header.channel | 0;
		var n = 0;
		var len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		var index = 0;
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			var _g1 = this.channelBufferStart;
			var _g = this.channelBufferStart + k;
			while(_g1 < _g) {
				var j = _g1++;
				var _g3 = 0;
				var _g2 = sampleRepeat;
				while(_g3 < _g2) {
					var sr = _g3++;
					var _g5 = 0;
					var _g4 = this.header.channel;
					while(_g5 < _g4) {
						var i = _g5++;
						var _g7 = 0;
						var _g6 = channelRepeat;
						while(_g7 < _g6) {
							var cr = _g7++;
							var value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								output[index] = value;
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		var _g11 = n;
		var _g8 = len;
		while(_g11 < _g8) {
			var j1 = _g11++;
			var _g31 = 0;
			var _g21 = sampleRepeat;
			while(_g31 < _g21) {
				var sr1 = _g31++;
				var _g51 = 0;
				var _g41 = this.header.channel;
				while(_g51 < _g41) {
					var i1 = _g51++;
					var _g71 = 0;
					var _g61 = channelRepeat;
					while(_g71 < _g61) {
						var cr1 = _g71++;
						if(useFloat) {
							output[index] = 0;
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	,skipSamples: function(len) {
		var n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	,setupSampleNumber: function(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	,seek: function(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		var p0 = this.decodeState.pFirst;
		var p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			var attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				var startOffset = p0.pageEnd;
				var endOffset = p1.afterPreviousPageStart;
				var startSample = p0.lastDecodedSample;
				var endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(_$UInt_UInt_$Impl_$.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				var probe = startOffset + Math.floor(_$UInt_UInt_$Impl_$.toFloat(endOffset - startOffset) / _$UInt_UInt_$Impl_$.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					var probe2 = startOffset + (endOffset - startOffset >>> 1);
					if(attempts >= 8) {
						probe = probe2;
					} else if(_$UInt_UInt_$Impl_$.gt(probe2,probe)) {
						probe = probe + (probe2 - probe >>> 1);
					} else {
						probe = probe2 + (probe - probe2 >>> 1);
					}
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				var _g = this.decodeState.findPage(seekFunc,inputLength);
				switch(_g[1]) {
				case 0:
					break;
				case 1:
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
					break;
				}
				var q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	,seekFrameFromPage: function(seekFunc,pageStart,firstSample,targetSample) {
		var frame = 0;
		var frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		var leftEnd = 0;
		var leftStart = 0;
		var prevState = null;
		var lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			var initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			var start = frame == 0 ? leftEnd : leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			var _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	,ensurePosition: function(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	,getFrameFloat: function() {
		var result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		var len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	,pumpFirstFrame: function() {
		this.finishFrame(this.decodePacket());
	}
	,finishFrame: function(r) {
		var len = r.len;
		var right = r.right;
		var left = r.left;
		if(this.previousLength != 0) {
			var n = this.previousLength;
			var w = this.getWindow(n);
			var _g1 = 0;
			var _g = this.header.channel;
			while(_g1 < _g) {
				var i = _g1++;
				var cb = this.channelBuffers[i];
				var pw = this.previousWindow[i];
				var _g3 = 0;
				var _g2 = n;
				while(_g3 < _g2) {
					var j = _g3++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		var prev = this.previousLength;
		this.previousLength = len - right;
		var _g11 = 0;
		var _g4 = this.header.channel;
		while(_g11 < _g4) {
			var i1 = _g11++;
			var pw1 = this.previousWindow[i1];
			var cb1 = this.channelBuffers[i1];
			var _g31 = 0;
			var _g21 = len - right;
			while(_g31 < _g21) {
				var j1 = _g31++;
				pw1[j1] = cb1[right + j1];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	,getWindow: function(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			return null;
		}
	}
	,initBlocksize: function(bs,n) {
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = this.a;
		var this2 = new Array(n2);
		this1[bs] = this2;
		var this3 = this.b;
		var this4 = new Array(n2);
		this3[bs] = this4;
		var this5 = this.c;
		var this6 = new Array(n4);
		this5[bs] = this6;
		var this7 = this.window;
		var this8 = new Array(n2);
		this7[bs] = this8;
		var this9 = this.bitReverseData;
		var this10 = new Array(n8);
		this9[bs] = this10;
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	,inverseMdct: function(buffer,n,blocktype) {
		var bt = blocktype ? 1 : 0;
		var a = this.a[bt];
		var b = this.b[bt];
		var c = this.c[bt];
		var bitReverse = this.bitReverseData[bt];
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = new Array(n2);
		var buf2 = this1;
		var dOffset = n2 - 2;
		var aaOffset = 0;
		var eOffset = 0;
		var eStopOffset = n2;
		while(eOffset != eStopOffset) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		var u = buffer;
		var v = buf2;
		var aaOffset1 = n2 - 8;
		var eOffset0 = n4;
		var eOffset1 = 0;
		var dOffset0 = n4;
		var dOffset1 = 0;
		while(aaOffset1 >= 0) {
			var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
			var v40_20 = v[eOffset0] - v[eOffset1];
			u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
			u[dOffset0] = v[eOffset0] + v[eOffset1];
			u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
			u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
			v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
			v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
			u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
			u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
			u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
			u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
			aaOffset1 -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		var i_off = n2 - 1 - n4 * 0;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eeOffset0] - u[eeOffset2];
			var k01_21 = u[eeOffset0 + -1] - u[eeOffset2 + -1];
			var _g = eeOffset0;
			var _g1 = u;
			_g1[_g] = _g1[_g] + u[eeOffset2];
			var _g2 = eeOffset0 + -1;
			var _g11 = u;
			_g11[_g2] = _g11[_g2] + u[eeOffset2 + -1];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -2] - u[eeOffset2 + -2];
			k01_21 = u[eeOffset0 + -3] - u[eeOffset2 + -3];
			var _g3 = eeOffset0 + -2;
			var _g12 = u;
			_g12[_g3] = _g12[_g3] + u[eeOffset2 + -2];
			var _g4 = eeOffset0 + -3;
			var _g13 = u;
			_g13[_g4] = _g13[_g4] + u[eeOffset2 + -3];
			u[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -4] - u[eeOffset2 + -4];
			k01_21 = u[eeOffset0 + -5] - u[eeOffset2 + -5];
			var _g5 = eeOffset0 + -4;
			var _g14 = u;
			_g14[_g5] = _g14[_g5] + u[eeOffset2 + -4];
			var _g6 = eeOffset0 + -5;
			var _g15 = u;
			_g15[_g6] = _g15[_g6] + u[eeOffset2 + -5];
			u[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -6] - u[eeOffset2 + -6];
			k01_21 = u[eeOffset0 + -7] - u[eeOffset2 + -7];
			var _g7 = eeOffset0 + -6;
			var _g16 = u;
			_g16[_g7] = _g16[_g7] + u[eeOffset2 + -6];
			var _g8 = eeOffset0 + -7;
			var _g17 = u;
			_g17[_g8] = _g17[_g8] + u[eeOffset2 + -7];
			u[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var i_off1 = n2 - 1 - n4;
		var eeOffset01 = i_off1;
		var eeOffset21 = i_off1 + -(n >> 3);
		var aOffset1 = 0;
		var i1 = (n >> 4 >> 2) + 1;
		while(--i1 > 0) {
			var k00_201 = u[eeOffset01] - u[eeOffset21];
			var k01_211 = u[eeOffset01 + -1] - u[eeOffset21 + -1];
			var _g9 = eeOffset01;
			var _g18 = u;
			_g18[_g9] = _g18[_g9] + u[eeOffset21];
			var _g10 = eeOffset01 + -1;
			var _g19 = u;
			_g19[_g10] = _g19[_g10] + u[eeOffset21 + -1];
			u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -1] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -2] - u[eeOffset21 + -2];
			k01_211 = u[eeOffset01 + -3] - u[eeOffset21 + -3];
			var _g20 = eeOffset01 + -2;
			var _g110 = u;
			_g110[_g20] = _g110[_g20] + u[eeOffset21 + -2];
			var _g21 = eeOffset01 + -3;
			var _g111 = u;
			_g111[_g21] = _g111[_g21] + u[eeOffset21 + -3];
			u[eeOffset21 + -2] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -3] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -4] - u[eeOffset21 + -4];
			k01_211 = u[eeOffset01 + -5] - u[eeOffset21 + -5];
			var _g22 = eeOffset01 + -4;
			var _g112 = u;
			_g112[_g22] = _g112[_g22] + u[eeOffset21 + -4];
			var _g23 = eeOffset01 + -5;
			var _g113 = u;
			_g113[_g23] = _g113[_g23] + u[eeOffset21 + -5];
			u[eeOffset21 + -4] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -5] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -6] - u[eeOffset21 + -6];
			k01_211 = u[eeOffset01 + -7] - u[eeOffset21 + -7];
			var _g24 = eeOffset01 + -6;
			var _g114 = u;
			_g114[_g24] = _g114[_g24] + u[eeOffset21 + -6];
			var _g25 = eeOffset01 + -7;
			var _g115 = u;
			_g115[_g25] = _g115[_g25] + u[eeOffset21 + -7];
			u[eeOffset21 + -6] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -7] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			eeOffset01 -= 8;
			eeOffset21 -= 8;
		}
		var d0 = n2 - 1 - n8 * 0;
		var aOffset2 = 0;
		var eOffset01 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i2 = (n >> 5 >> 2) + 1;
		while(--i2 > 0) {
			var k00_202 = u[eOffset01] - u[eOffset2];
			var k01_212 = u[eOffset01 + -1] - u[eOffset2 + -1];
			var _g26 = eOffset01;
			var _g116 = u;
			_g116[_g26] = _g116[_g26] + u[eOffset2];
			var _g27 = eOffset01 + -1;
			var _g117 = u;
			_g117[_g27] = _g117[_g27] + u[eOffset2 + -1];
			u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -1] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -2] - u[eOffset2 + -2];
			k01_212 = u[eOffset01 + -3] - u[eOffset2 + -3];
			var _g28 = eOffset01 + -2;
			var _g118 = u;
			_g118[_g28] = _g118[_g28] + u[eOffset2 + -2];
			var _g29 = eOffset01 + -3;
			var _g119 = u;
			_g119[_g29] = _g119[_g29] + u[eOffset2 + -3];
			u[eOffset2 + -2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -3] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -4] - u[eOffset2 + -4];
			k01_212 = u[eOffset01 + -5] - u[eOffset2 + -5];
			var _g30 = eOffset01 + -4;
			var _g120 = u;
			_g120[_g30] = _g120[_g30] + u[eOffset2 + -4];
			var _g31 = eOffset01 + -5;
			var _g121 = u;
			_g121[_g31] = _g121[_g31] + u[eOffset2 + -5];
			u[eOffset2 + -4] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -5] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -6] - u[eOffset2 + -6];
			k01_212 = u[eOffset01 + -7] - u[eOffset2 + -7];
			var _g32 = eOffset01 + -6;
			var _g122 = u;
			_g122[_g32] = _g122[_g32] + u[eOffset2 + -6];
			var _g33 = eOffset01 + -7;
			var _g123 = u;
			_g123[_g33] = _g123[_g33] + u[eOffset2 + -7];
			u[eOffset2 + -6] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -7] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			eOffset01 -= 8;
			eOffset2 -= 8;
			aOffset2 += 16;
		}
		var d01 = n2 - 1 - n8;
		var aOffset3 = 0;
		var eOffset02 = d01;
		var eOffset21 = d01 + -(n >> 4);
		var i3 = (n >> 5 >> 2) + 1;
		while(--i3 > 0) {
			var k00_203 = u[eOffset02] - u[eOffset21];
			var k01_213 = u[eOffset02 + -1] - u[eOffset21 + -1];
			var _g34 = eOffset02;
			var _g124 = u;
			_g124[_g34] = _g124[_g34] + u[eOffset21];
			var _g35 = eOffset02 + -1;
			var _g125 = u;
			_g125[_g35] = _g125[_g35] + u[eOffset21 + -1];
			u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -1] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -2] - u[eOffset21 + -2];
			k01_213 = u[eOffset02 + -3] - u[eOffset21 + -3];
			var _g36 = eOffset02 + -2;
			var _g126 = u;
			_g126[_g36] = _g126[_g36] + u[eOffset21 + -2];
			var _g37 = eOffset02 + -3;
			var _g127 = u;
			_g127[_g37] = _g127[_g37] + u[eOffset21 + -3];
			u[eOffset21 + -2] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -3] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -4] - u[eOffset21 + -4];
			k01_213 = u[eOffset02 + -5] - u[eOffset21 + -5];
			var _g38 = eOffset02 + -4;
			var _g128 = u;
			_g128[_g38] = _g128[_g38] + u[eOffset21 + -4];
			var _g39 = eOffset02 + -5;
			var _g129 = u;
			_g129[_g39] = _g129[_g39] + u[eOffset21 + -5];
			u[eOffset21 + -4] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -5] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -6] - u[eOffset21 + -6];
			k01_213 = u[eOffset02 + -7] - u[eOffset21 + -7];
			var _g40 = eOffset02 + -6;
			var _g130 = u;
			_g130[_g40] = _g130[_g40] + u[eOffset21 + -6];
			var _g41 = eOffset02 + -7;
			var _g131 = u;
			_g131[_g41] = _g131[_g41] + u[eOffset21 + -7];
			u[eOffset21 + -6] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -7] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			eOffset02 -= 8;
			eOffset21 -= 8;
			aOffset3 += 16;
		}
		var d02 = n2 - 1 - n8 * 2;
		var aOffset4 = 0;
		var eOffset03 = d02;
		var eOffset22 = d02 + -(n >> 4);
		var i4 = (n >> 5 >> 2) + 1;
		while(--i4 > 0) {
			var k00_204 = u[eOffset03] - u[eOffset22];
			var k01_214 = u[eOffset03 + -1] - u[eOffset22 + -1];
			var _g42 = eOffset03;
			var _g132 = u;
			_g132[_g42] = _g132[_g42] + u[eOffset22];
			var _g43 = eOffset03 + -1;
			var _g133 = u;
			_g133[_g43] = _g133[_g43] + u[eOffset22 + -1];
			u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -1] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -2] - u[eOffset22 + -2];
			k01_214 = u[eOffset03 + -3] - u[eOffset22 + -3];
			var _g44 = eOffset03 + -2;
			var _g134 = u;
			_g134[_g44] = _g134[_g44] + u[eOffset22 + -2];
			var _g45 = eOffset03 + -3;
			var _g135 = u;
			_g135[_g45] = _g135[_g45] + u[eOffset22 + -3];
			u[eOffset22 + -2] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -3] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -4] - u[eOffset22 + -4];
			k01_214 = u[eOffset03 + -5] - u[eOffset22 + -5];
			var _g46 = eOffset03 + -4;
			var _g136 = u;
			_g136[_g46] = _g136[_g46] + u[eOffset22 + -4];
			var _g47 = eOffset03 + -5;
			var _g137 = u;
			_g137[_g47] = _g137[_g47] + u[eOffset22 + -5];
			u[eOffset22 + -4] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -5] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -6] - u[eOffset22 + -6];
			k01_214 = u[eOffset03 + -7] - u[eOffset22 + -7];
			var _g48 = eOffset03 + -6;
			var _g138 = u;
			_g138[_g48] = _g138[_g48] + u[eOffset22 + -6];
			var _g49 = eOffset03 + -7;
			var _g139 = u;
			_g139[_g49] = _g139[_g49] + u[eOffset22 + -7];
			u[eOffset22 + -6] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -7] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			eOffset03 -= 8;
			eOffset22 -= 8;
			aOffset4 += 16;
		}
		var d03 = n2 - 1 - n8 * 3;
		var aOffset5 = 0;
		var eOffset04 = d03;
		var eOffset23 = d03 + -(n >> 4);
		var i5 = (n >> 5 >> 2) + 1;
		while(--i5 > 0) {
			var k00_205 = u[eOffset04] - u[eOffset23];
			var k01_215 = u[eOffset04 + -1] - u[eOffset23 + -1];
			var _g50 = eOffset04;
			var _g140 = u;
			_g140[_g50] = _g140[_g50] + u[eOffset23];
			var _g51 = eOffset04 + -1;
			var _g141 = u;
			_g141[_g51] = _g141[_g51] + u[eOffset23 + -1];
			u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -1] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -2] - u[eOffset23 + -2];
			k01_215 = u[eOffset04 + -3] - u[eOffset23 + -3];
			var _g52 = eOffset04 + -2;
			var _g142 = u;
			_g142[_g52] = _g142[_g52] + u[eOffset23 + -2];
			var _g53 = eOffset04 + -3;
			var _g143 = u;
			_g143[_g53] = _g143[_g53] + u[eOffset23 + -3];
			u[eOffset23 + -2] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -3] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -4] - u[eOffset23 + -4];
			k01_215 = u[eOffset04 + -5] - u[eOffset23 + -5];
			var _g54 = eOffset04 + -4;
			var _g144 = u;
			_g144[_g54] = _g144[_g54] + u[eOffset23 + -4];
			var _g55 = eOffset04 + -5;
			var _g145 = u;
			_g145[_g55] = _g145[_g55] + u[eOffset23 + -5];
			u[eOffset23 + -4] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -5] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -6] - u[eOffset23 + -6];
			k01_215 = u[eOffset04 + -7] - u[eOffset23 + -7];
			var _g56 = eOffset04 + -6;
			var _g146 = u;
			_g146[_g56] = _g146[_g56] + u[eOffset23 + -6];
			var _g57 = eOffset04 + -7;
			var _g147 = u;
			_g147[_g57] = _g147[_g57] + u[eOffset23 + -7];
			u[eOffset23 + -6] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -7] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			eOffset04 -= 8;
			eOffset23 -= 8;
			aOffset5 += 16;
		}
		var _g148 = 2;
		var _g58 = ld - 3 >> 1;
		while(_g148 < _g58) {
			var l = _g148++;
			var k0 = n >> l + 2;
			var k0_2 = k0 >> 1;
			var lim = 1 << l + 1;
			var _g310 = 0;
			var _g210 = lim;
			while(_g310 < _g210) {
				var i6 = _g310++;
				var d04 = n2 - 1 - k0 * i6;
				var k1 = 1 << l + 3;
				var aOffset6 = 0;
				var eOffset05 = d04;
				var eOffset24 = d04 + -k0_2;
				var i7 = (n >> l + 4 >> 2) + 1;
				while(--i7 > 0) {
					var k00_206 = u[eOffset05] - u[eOffset24];
					var k01_216 = u[eOffset05 + -1] - u[eOffset24 + -1];
					var _g59 = eOffset05;
					var _g149 = u;
					_g149[_g59] = _g149[_g59] + u[eOffset24];
					var _g60 = eOffset05 + -1;
					var _g150 = u;
					_g150[_g60] = _g150[_g60] + u[eOffset24 + -1];
					u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -1] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -2] - u[eOffset24 + -2];
					k01_216 = u[eOffset05 + -3] - u[eOffset24 + -3];
					var _g61 = eOffset05 + -2;
					var _g151 = u;
					_g151[_g61] = _g151[_g61] + u[eOffset24 + -2];
					var _g62 = eOffset05 + -3;
					var _g152 = u;
					_g152[_g62] = _g152[_g62] + u[eOffset24 + -3];
					u[eOffset24 + -2] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -3] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -4] - u[eOffset24 + -4];
					k01_216 = u[eOffset05 + -5] - u[eOffset24 + -5];
					var _g63 = eOffset05 + -4;
					var _g153 = u;
					_g153[_g63] = _g153[_g63] + u[eOffset24 + -4];
					var _g64 = eOffset05 + -5;
					var _g154 = u;
					_g154[_g64] = _g154[_g64] + u[eOffset24 + -5];
					u[eOffset24 + -4] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -5] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -6] - u[eOffset24 + -6];
					k01_216 = u[eOffset05 + -7] - u[eOffset24 + -7];
					var _g65 = eOffset05 + -6;
					var _g155 = u;
					_g155[_g65] = _g155[_g65] + u[eOffset24 + -6];
					var _g66 = eOffset05 + -7;
					var _g156 = u;
					_g156[_g66] = _g156[_g66] + u[eOffset24 + -7];
					u[eOffset24 + -6] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -7] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					eOffset05 -= 8;
					eOffset24 -= 8;
					aOffset6 += k1;
				}
			}
		}
		var _g157 = ld - 3 >> 1;
		var _g67 = ld - 6;
		while(_g157 < _g67) {
			var l1 = _g157++;
			var k01 = n >> l1 + 2;
			var k11 = 1 << l1 + 3;
			var k0_21 = k01 >> 1;
			var rlim = n >> l1 + 6;
			var lim1 = 1 << l1 + 1;
			var aOffset7 = 0;
			var i_off2 = n2 - 1;
			var r = rlim + 1;
			while(--r > 0) {
				var A0 = a[aOffset7];
				var A1 = a[aOffset7 + 1];
				var A2 = a[aOffset7 + k11];
				var A3 = a[aOffset7 + k11 + 1];
				var A4 = a[aOffset7 + k11 * 2];
				var A5 = a[aOffset7 + k11 * 2 + 1];
				var A6 = a[aOffset7 + k11 * 3];
				var A7 = a[aOffset7 + k11 * 3 + 1];
				var eeOffset02 = i_off2;
				var eeOffset22 = i_off2 + -k0_21;
				var i8 = lim1 + 1;
				while(--i8 > 0) {
					var k00 = u[eeOffset02] - u[eeOffset22];
					var k111 = u[eeOffset02 + -1] - u[eeOffset22 + -1];
					u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
					u[eeOffset02 + -1] = u[eeOffset02 + -1] + u[eeOffset22 + -1];
					u[eeOffset22] = k00 * A0 - k111 * A1;
					u[eeOffset22 + -1] = k111 * A0 + k00 * A1;
					k00 = u[eeOffset02 + -2] - u[eeOffset22 + -2];
					k111 = u[eeOffset02 + -3] - u[eeOffset22 + -3];
					u[eeOffset02 + -2] = u[eeOffset02 + -2] + u[eeOffset22 + -2];
					u[eeOffset02 + -3] = u[eeOffset02 + -3] + u[eeOffset22 + -3];
					u[eeOffset22 + -2] = k00 * A2 - k111 * A3;
					u[eeOffset22 + -3] = k111 * A2 + k00 * A3;
					k00 = u[eeOffset02 + -4] - u[eeOffset22 + -4];
					k111 = u[eeOffset02 + -5] - u[eeOffset22 + -5];
					u[eeOffset02 + -4] = u[eeOffset02 + -4] + u[eeOffset22 + -4];
					u[eeOffset02 + -5] = u[eeOffset02 + -5] + u[eeOffset22 + -5];
					u[eeOffset22 + -4] = k00 * A4 - k111 * A5;
					u[eeOffset22 + -5] = k111 * A4 + k00 * A5;
					k00 = u[eeOffset02 + -6] - u[eeOffset22 + -6];
					k111 = u[eeOffset02 + -7] - u[eeOffset22 + -7];
					u[eeOffset02 + -6] = u[eeOffset02 + -6] + u[eeOffset22 + -6];
					u[eeOffset02 + -7] = u[eeOffset02 + -7] + u[eeOffset22 + -7];
					u[eeOffset22 + -6] = k00 * A6 - k111 * A7;
					u[eeOffset22 + -7] = k111 * A6 + k00 * A7;
					eeOffset02 -= k01;
					eeOffset22 -= k01;
				}
				aOffset7 += k11 * 4;
				i_off2 -= 8;
			}
		}
		var i_off3 = n2 - 1;
		var A21 = a[n >> 3];
		var zOffset = i_off3;
		var baseOffset = i_off3 - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			var t0 = u[zOffset];
			var t1 = u[zOffset + -8];
			u[zOffset + -8] = t0 - t1;
			u[zOffset] = t0 + t1;
			t0 = u[zOffset + -1];
			t1 = u[zOffset + -9];
			u[zOffset + -9] = t0 - t1;
			u[zOffset + -1] = t0 + t1;
			t0 = u[zOffset + -2];
			t1 = u[zOffset + -10];
			var k001 = t0 - t1;
			u[zOffset + -2] = t0 + t1;
			t0 = u[zOffset + -3];
			t1 = u[zOffset + -11];
			var k112 = t0 - t1;
			u[zOffset + -3] = t0 + t1;
			u[zOffset + -10] = (k001 + k112) * A21;
			u[zOffset + -11] = (k112 - k001) * A21;
			t0 = u[zOffset + -4];
			t1 = u[zOffset + -12];
			k001 = t1 - t0;
			u[zOffset + -4] = t0 + t1;
			t0 = u[zOffset + -5];
			t1 = u[zOffset + -13];
			k112 = t0 - t1;
			u[zOffset + -5] = t0 + t1;
			u[zOffset + -12] = k112;
			u[zOffset + -13] = k001;
			t0 = u[zOffset + -6];
			t1 = u[zOffset + -14];
			k001 = t1 - t0;
			u[zOffset + -6] = t0 + t1;
			t0 = u[zOffset + -7];
			t1 = u[zOffset + -15];
			k112 = t0 - t1;
			u[zOffset + -7] = t0 + t1;
			u[zOffset + -14] = (k001 + k112) * A21;
			u[zOffset + -15] = (k001 - k112) * A21;
			var t01 = u[zOffset];
			var t11 = u[zOffset + -4];
			var k002 = t01 - t11;
			var y0 = t01 + t11;
			t01 = u[zOffset + -2];
			t11 = u[zOffset + -6];
			var y2 = t01 + t11;
			var k22 = t01 - t11;
			u[zOffset] = y0 + y2;
			u[zOffset + -2] = y0 - y2;
			var k33 = u[zOffset + -3] - u[zOffset + -7];
			u[zOffset + -4] = k002 + k33;
			u[zOffset + -6] = k002 - k33;
			t01 = u[zOffset + -1];
			t11 = u[zOffset + -5];
			var k113 = t01 - t11;
			var y1 = t01 + t11;
			var y3 = u[zOffset + -3] + u[zOffset + -7];
			u[zOffset + -1] = y1 + y3;
			u[zOffset + -3] = y1 - y3;
			u[zOffset + -5] = k113 - k22;
			u[zOffset + -7] = k113 + k22;
			var zOffset1 = zOffset - 8;
			var t02 = u[zOffset1];
			var t12 = u[zOffset1 + -4];
			var k003 = t02 - t12;
			var y01 = t02 + t12;
			t02 = u[zOffset1 + -2];
			t12 = u[zOffset1 + -6];
			var y21 = t02 + t12;
			var k221 = t02 - t12;
			u[zOffset1] = y01 + y21;
			u[zOffset1 + -2] = y01 - y21;
			var k331 = u[zOffset1 + -3] - u[zOffset1 + -7];
			u[zOffset1 + -4] = k003 + k331;
			u[zOffset1 + -6] = k003 - k331;
			t02 = u[zOffset1 + -1];
			t12 = u[zOffset1 + -5];
			var k114 = t02 - t12;
			var y11 = t02 + t12;
			var y31 = u[zOffset1 + -3] + u[zOffset1 + -7];
			u[zOffset1 + -1] = y11 + y31;
			u[zOffset1 + -3] = y11 - y31;
			u[zOffset1 + -5] = k114 - k221;
			u[zOffset1 + -7] = k114 + k221;
			zOffset -= 16;
		}
		var brOffset = 0;
		var dOffset01 = n4 - 4;
		var dOffset11 = n2 - 4;
		while(dOffset01 >= 0) {
			var k4 = bitReverse[brOffset];
			v[dOffset11 + 3] = u[k4];
			v[dOffset11 + 2] = u[k4 + 1];
			v[dOffset01 + 3] = u[k4 + 2];
			v[dOffset01 + 2] = u[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			v[dOffset11 + 1] = u[k4];
			v[dOffset11] = u[k4 + 1];
			v[dOffset01 + 1] = u[k4 + 2];
			v[dOffset01] = u[k4 + 3];
			dOffset01 -= 4;
			dOffset11 -= 4;
			brOffset += 2;
		}
		var cOffset = 0;
		var dOffset2 = 0;
		var eOffset3 = n2 - 4;
		while(dOffset2 < eOffset3) {
			var a02 = v[dOffset2] - v[eOffset3 + 2];
			var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
			var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			var b2 = v[dOffset2] + v[eOffset3 + 2];
			var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
			v[dOffset2] = b2 + b0;
			v[dOffset2 + 1] = b3 + b1;
			v[eOffset3 + 2] = b2 - b0;
			v[eOffset3 + 3] = b1 - b3;
			a02 = v[dOffset2 + 2] - v[eOffset3];
			a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = v[dOffset2 + 2] + v[eOffset3];
			b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
			v[dOffset2 + 2] = b2 + b0;
			v[dOffset2 + 3] = b3 + b1;
			v[eOffset3] = b2 - b0;
			v[eOffset3 + 1] = b1 - b3;
			cOffset += 4;
			dOffset2 += 4;
			eOffset3 -= 4;
		}
		var bOffset = n2 - 8;
		var eOffset4 = n2 - 8;
		var dOffset02 = 0;
		var dOffset12 = n2 - 4;
		var dOffset21 = n2;
		var dOffset3 = n - 4;
		while(eOffset4 >= 0) {
			var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
			var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
			buffer[dOffset02] = p3;
			buffer[dOffset12 + 3] = -p3;
			buffer[dOffset21] = p2;
			buffer[dOffset3 + 3] = p2;
			var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
			var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
			buffer[dOffset02 + 1] = p1;
			buffer[dOffset12 + 2] = -p1;
			buffer[dOffset21 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
			buffer[dOffset02 + 2] = p3;
			buffer[dOffset12 + 1] = -p3;
			buffer[dOffset21 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
			p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
			buffer[dOffset02 + 3] = p1;
			buffer[dOffset12] = -p1;
			buffer[dOffset21 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset4 -= 8;
			dOffset02 += 4;
			dOffset21 += 4;
			dOffset12 -= 4;
			dOffset3 -= 4;
		}
	}
	,decodePacket: function() {
		var result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		var rest = this.decodePacketRest(result);
		return rest;
	}
	,decodeInitial: function() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			var _this = this.decodeState;
			var tmp;
			if(_this.validBits < 0) {
				tmp = 0;
			} else if(_this.validBits < 1) {
				if(_this.validBits == 0) {
					_this.acc = 0;
				}
				while(true) {
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						_this.validBits = -1;
						break;
					} else {
						_this.bytesInSeg--;
						_this.inputPosition += 1;
						_this.acc = _this.acc + (_this.input.readByte() << _this.validBits);
						_this.validBits += 8;
					}
					if(!(_this.validBits < 1)) {
						break;
					}
				}
				if(_this.validBits < 0) {
					tmp = 0;
				} else {
					var z = _this.acc & 1;
					_this.acc = _this.acc >>> 1;
					_this.validBits -= 1;
					tmp = z;
				}
			} else {
				var z1 = _this.acc & 1;
				_this.acc = _this.acc >>> 1;
				_this.validBits -= 1;
				tmp = z1;
			}
			if(tmp != 0) {
				while(true) {
					var _this1 = this.decodeState;
					var x;
					if(_this1.bytesInSeg == 0 && (_this1.lastSeg || _this1.next() == 0)) {
						x = -1;
					} else {
						_this1.bytesInSeg--;
						_this1.inputPosition += 1;
						x = _this1.input.readByte();
					}
					_this1.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		var _this2 = this.decodeState;
		var n = this.header.modes.length - 1;
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var n1 = n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0;
		var i;
		if(_this2.validBits < 0) {
			i = 0;
		} else if(_this2.validBits < n1) {
			if(n1 > 24) {
				i = _this2.readBits(24) + (_this2.readBits(n1 - 24) << 24);
			} else {
				if(_this2.validBits == 0) {
					_this2.acc = 0;
				}
				while(true) {
					if(_this2.bytesInSeg == 0 && (_this2.lastSeg || _this2.next() == 0)) {
						_this2.validBits = -1;
						break;
					} else {
						_this2.bytesInSeg--;
						_this2.inputPosition += 1;
						_this2.acc = _this2.acc + (_this2.input.readByte() << _this2.validBits);
						_this2.validBits += 8;
					}
					if(!(_this2.validBits < n1)) {
						break;
					}
				}
				if(_this2.validBits < 0) {
					i = 0;
				} else {
					var z2 = _this2.acc & (1 << n1) - 1;
					_this2.acc = _this2.acc >>> n1;
					_this2.validBits -= n1;
					i = z2;
				}
			}
		} else {
			var z3 = _this2.acc & (1 << n1) - 1;
			_this2.acc = _this2.acc >>> n1;
			_this2.validBits -= n1;
			i = z3;
		}
		if(i == -1 || i >= this.header.modes.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		var m = this.header.modes[i];
		var n2;
		var prev;
		var next;
		if(m.blockflag) {
			n2 = this.header.blocksize1;
			var _this3 = this.decodeState;
			if(_this3.validBits < 0) {
				prev = 0;
			} else if(_this3.validBits < 1) {
				if(_this3.validBits == 0) {
					_this3.acc = 0;
				}
				while(true) {
					if(_this3.bytesInSeg == 0 && (_this3.lastSeg || _this3.next() == 0)) {
						_this3.validBits = -1;
						break;
					} else {
						_this3.bytesInSeg--;
						_this3.inputPosition += 1;
						_this3.acc = _this3.acc + (_this3.input.readByte() << _this3.validBits);
						_this3.validBits += 8;
					}
					if(!(_this3.validBits < 1)) {
						break;
					}
				}
				if(_this3.validBits < 0) {
					prev = 0;
				} else {
					var z4 = _this3.acc & 1;
					_this3.acc = _this3.acc >>> 1;
					_this3.validBits -= 1;
					prev = z4;
				}
			} else {
				var z5 = _this3.acc & 1;
				_this3.acc = _this3.acc >>> 1;
				_this3.validBits -= 1;
				prev = z5;
			}
			var _this4 = this.decodeState;
			if(_this4.validBits < 0) {
				next = 0;
			} else if(_this4.validBits < 1) {
				if(_this4.validBits == 0) {
					_this4.acc = 0;
				}
				while(true) {
					if(_this4.bytesInSeg == 0 && (_this4.lastSeg || _this4.next() == 0)) {
						_this4.validBits = -1;
						break;
					} else {
						_this4.bytesInSeg--;
						_this4.inputPosition += 1;
						_this4.acc = _this4.acc + (_this4.input.readByte() << _this4.validBits);
						_this4.validBits += 8;
					}
					if(!(_this4.validBits < 1)) {
						break;
					}
				}
				if(_this4.validBits < 0) {
					next = 0;
				} else {
					var z6 = _this4.acc & 1;
					_this4.acc = _this4.acc >>> 1;
					_this4.validBits -= 1;
					next = z6;
				}
			} else {
				var z7 = _this4.acc & 1;
				_this4.acc = _this4.acc >>> 1;
				_this4.validBits -= 1;
				next = z7;
			}
		} else {
			next = 0;
			prev = next;
			n2 = this.header.blocksize0;
		}
		var windowCenter = n2 >> 1;
		return { mode : i, left : m.blockflag && prev == 0 ? { start : n2 - this.header.blocksize0 >> 2, end : n2 + this.header.blocksize0 >> 2} : { start : 0, end : windowCenter}, right : m.blockflag && next == 0 ? { start : n2 * 3 - this.header.blocksize0 >> 2, end : n2 * 3 + this.header.blocksize0 >> 2} : { start : windowCenter, end : n2}};
	}
	,decodePacketRest: function(r) {
		var len = 0;
		var m = this.header.modes[r.mode];
		var this1 = new Array(256);
		var zeroChannel = this1;
		var this2 = new Array(256);
		var reallyZeroChannel = this2;
		var n = m.blockflag ? this.header.blocksize1 : this.header.blocksize0;
		var map = this.header.mapping[m.mapping];
		var n2 = n >> 1;
		var rangeList = [256,128,86,64];
		var codebooks = this.header.codebooks;
		var _g1 = 0;
		var _g = this.header.channel;
		while(_g1 < _g) {
			var i = _g1++;
			var s = map.chan[i].mux;
			zeroChannel[i] = false;
			var floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				var g = floor.floor1;
				var _this = this.decodeState;
				var tmp;
				if(_this.validBits < 0) {
					tmp = 0;
				} else if(_this.validBits < 1) {
					if(_this.validBits == 0) {
						_this.acc = 0;
					}
					while(true) {
						if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
							_this.validBits = -1;
							break;
						} else {
							_this.bytesInSeg--;
							_this.inputPosition += 1;
							_this.acc = _this.acc + (_this.input.readByte() << _this.validBits);
							_this.validBits += 8;
						}
						if(!(_this.validBits < 1)) {
							break;
						}
					}
					if(_this.validBits < 0) {
						tmp = 0;
					} else {
						var z = _this.acc & 1;
						_this.acc = _this.acc >>> 1;
						_this.validBits -= 1;
						tmp = z;
					}
				} else {
					var z1 = _this.acc & 1;
					_this.acc = _this.acc >>> 1;
					_this.validBits -= 1;
					tmp = z1;
				}
				if(tmp != 0) {
					var fy = [];
					var this3 = new Array(256);
					var step2Flag = this3;
					var range = rangeList[g.floor1Multiplier - 1];
					var offset = 2;
					fy = this.finalY[i];
					var _this1 = this.decodeState;
					var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					var n1 = (range < 16384 ? range < 16 ? log2_4[range] : range < 512 ? 5 + log2_4[range >> 5] : 10 + log2_4[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_4[range >> 15] : 20 + log2_4[range >> 20] : range < 536870912 ? 25 + log2_4[range >> 25] : range < -2147483648 ? 30 + log2_4[range >> 30] : 0) - 1;
					var tmp1;
					if(_this1.validBits < 0) {
						tmp1 = 0;
					} else if(_this1.validBits < n1) {
						if(n1 > 24) {
							tmp1 = _this1.readBits(24) + (_this1.readBits(n1 - 24) << 24);
						} else {
							if(_this1.validBits == 0) {
								_this1.acc = 0;
							}
							while(true) {
								if(_this1.bytesInSeg == 0 && (_this1.lastSeg || _this1.next() == 0)) {
									_this1.validBits = -1;
									break;
								} else {
									_this1.bytesInSeg--;
									_this1.inputPosition += 1;
									_this1.acc = _this1.acc + (_this1.input.readByte() << _this1.validBits);
									_this1.validBits += 8;
								}
								if(!(_this1.validBits < n1)) {
									break;
								}
							}
							if(_this1.validBits < 0) {
								tmp1 = 0;
							} else {
								var z2 = _this1.acc & (1 << n1) - 1;
								_this1.acc = _this1.acc >>> n1;
								_this1.validBits -= n1;
								tmp1 = z2;
							}
						}
					} else {
						var z3 = _this1.acc & (1 << n1) - 1;
						_this1.acc = _this1.acc >>> n1;
						_this1.validBits -= n1;
						tmp1 = z3;
					}
					fy[0] = tmp1;
					var _this2 = this.decodeState;
					var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					var n3 = (range < 16384 ? range < 16 ? log2_41[range] : range < 512 ? 5 + log2_41[range >> 5] : 10 + log2_41[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_41[range >> 15] : 20 + log2_41[range >> 20] : range < 536870912 ? 25 + log2_41[range >> 25] : range < -2147483648 ? 30 + log2_41[range >> 30] : 0) - 1;
					var tmp2;
					if(_this2.validBits < 0) {
						tmp2 = 0;
					} else if(_this2.validBits < n3) {
						if(n3 > 24) {
							tmp2 = _this2.readBits(24) + (_this2.readBits(n3 - 24) << 24);
						} else {
							if(_this2.validBits == 0) {
								_this2.acc = 0;
							}
							while(true) {
								if(_this2.bytesInSeg == 0 && (_this2.lastSeg || _this2.next() == 0)) {
									_this2.validBits = -1;
									break;
								} else {
									_this2.bytesInSeg--;
									_this2.inputPosition += 1;
									_this2.acc = _this2.acc + (_this2.input.readByte() << _this2.validBits);
									_this2.validBits += 8;
								}
								if(!(_this2.validBits < n3)) {
									break;
								}
							}
							if(_this2.validBits < 0) {
								tmp2 = 0;
							} else {
								var z4 = _this2.acc & (1 << n3) - 1;
								_this2.acc = _this2.acc >>> n3;
								_this2.validBits -= n3;
								tmp2 = z4;
							}
						}
					} else {
						var z5 = _this2.acc & (1 << n3) - 1;
						_this2.acc = _this2.acc >>> n3;
						_this2.validBits -= n3;
						tmp2 = z5;
					}
					fy[1] = tmp2;
					var _g3 = 0;
					var _g2 = g.partitions;
					while(_g3 < _g2) {
						var j = _g3++;
						var pclass = g.partitionClassList[j];
						var cdim = g.classDimensions[pclass];
						var cbits = g.classSubclasses[pclass];
						var csub = (1 << cbits) - 1;
						var cval = 0;
						if(cbits != 0) {
							var c = codebooks[g.classMasterbooks[pclass]];
							var _this3 = this.decodeState;
							if(_this3.validBits < 10) {
								_this3.prepHuffman();
							}
							var i1 = c.fastHuffman[_this3.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								_this3.acc = _this3.acc >>> l;
								_this3.validBits -= l;
								if(_this3.validBits < 0) {
									_this3.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = _this3.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						var books = g.subclassBooks[pclass];
						var _g5 = 0;
						var _g4 = cdim;
						while(_g5 < _g4) {
							var k = _g5++;
							var book = books[cval & csub];
							cval >>= cbits;
							var tmp3 = offset++;
							var tmp4;
							if(book >= 0) {
								var _this4 = this.decodeState;
								var c1 = codebooks[book];
								if(_this4.validBits < 10) {
									_this4.prepHuffman();
								}
								var i2 = c1.fastHuffman[_this4.acc & 1023];
								var val1;
								if(i2 >= 0) {
									var l1 = c1.codewordLengths[i2];
									_this4.acc = _this4.acc >>> l1;
									_this4.validBits -= l1;
									if(_this4.validBits < 0) {
										_this4.validBits = 0;
										val1 = -1;
									} else {
										val1 = i2;
									}
								} else {
									val1 = _this4.decodeScalarRaw(c1);
								}
								if(c1.sparse) {
									val1 = c1.sortedValues[val1];
								}
								tmp4 = val1;
							} else {
								tmp4 = 0;
							}
							fy[tmp3] = tmp4;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[0] = step2Flag[1] = true;
					var naighbors = g.neighbors;
					var xlist = g.xlist;
					var _g31 = 2;
					var _g21 = g.values;
					while(_g31 < _g21) {
						var j1 = _g31++;
						var low = naighbors[j1][0];
						var high = naighbors[j1][1];
						var x0 = xlist[low];
						var y0 = fy[low];
						var dy = fy[high] - y0;
						var adx = xlist[high] - x0;
						var err = Math.abs(dy) * (xlist[j1] - x0);
						var off = err / adx | 0;
						var lowroom = dy < 0 ? y0 - off : y0 + off;
						var val2 = fy[j1];
						var highroom = range - lowroom;
						var room = highroom < lowroom ? highroom * 2 : lowroom * 2;
						if(val2 != 0) {
							step2Flag[low] = step2Flag[high] = true;
							step2Flag[j1] = true;
							if(val2 >= room) {
								if(highroom > lowroom) {
									fy[j1] = val2 - lowroom + lowroom;
								} else {
									fy[j1] = lowroom - val2 + highroom - 1;
								}
							} else if((val2 & 1) != 0) {
								fy[j1] = lowroom - (val2 + 1 >> 1);
							} else {
								fy[j1] = lowroom + (val2 >> 1);
							}
						} else {
							step2Flag[j1] = false;
							fy[j1] = lowroom;
						}
					}
					var _g32 = 0;
					var _g22 = g.values;
					while(_g32 < _g22) {
						var j2 = _g32++;
						if(!step2Flag[j2]) {
							fy[j2] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		var _g11 = 0;
		var _g6 = this.header.channel;
		while(_g11 < _g6) {
			var i3 = _g11++;
			reallyZeroChannel[i3] = zeroChannel[i3];
		}
		var _g12 = 0;
		var _g7 = map.couplingSteps;
		while(_g12 < _g7) {
			var i4 = _g12++;
			if(!zeroChannel[map.chan[i4].magnitude] || !zeroChannel[map.chan[i4].angle]) {
				zeroChannel[map.chan[i4].magnitude] = zeroChannel[map.chan[i4].angle] = false;
			}
		}
		var _g13 = 0;
		var _g8 = map.submaps;
		while(_g13 < _g8) {
			var i5 = _g13++;
			var length = this.header.channel;
			var this4 = new Array(length);
			var residueBuffers = this4;
			var this5 = new Array(256);
			var doNotDecode = this5;
			var ch = 0;
			var _g33 = 0;
			var _g23 = this.header.channel;
			while(_g33 < _g23) {
				var j3 = _g33++;
				if(map.chan[j3].mux == i5) {
					if(zeroChannel[j3]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j3];
					}
					++ch;
				}
			}
			var r1 = map.submapResidue[i5];
			var residue = this.header.residueConfig[r1];
			residue.decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		var i6 = map.couplingSteps;
		var n21 = n >> 1;
		while(--i6 >= 0) {
			var m1 = this.channelBuffers[map.chan[i6].magnitude];
			var a = this.channelBuffers[map.chan[i6].angle];
			var _g14 = 0;
			var _g9 = n21;
			while(_g14 < _g9) {
				var j4 = _g14++;
				var a2;
				var m2;
				if(m1[j4] > 0) {
					if(a[j4] > 0) {
						m2 = m1[j4];
						a2 = m1[j4] - a[j4];
					} else {
						a2 = m1[j4];
						m2 = m1[j4] + a[j4];
					}
				} else if(a[j4] > 0) {
					m2 = m1[j4];
					a2 = m1[j4] + a[j4];
				} else {
					a2 = m1[j4];
					m2 = m1[j4] - a[j4];
				}
				m1[j4] = m2;
				a[j4] = a2;
			}
		}
		var _g15 = 0;
		var _g10 = this.header.channel;
		while(_g15 < _g10) {
			var i7 = _g15++;
			if(reallyZeroChannel[i7]) {
				var _g34 = 0;
				var _g24 = n21;
				while(_g34 < _g24) {
					var j5 = _g34++;
					this.channelBuffers[i7][j5] = 0;
				}
			} else {
				map.doFloor(this.header.floorConfig,i7,n,this.channelBuffers[i7],this.finalY[i7],null);
			}
		}
		var _g16 = 0;
		var _g17 = this.header.channel;
		while(_g16 < _g17) {
			var i8 = _g16++;
			this.inverseMdct(this.channelBuffers[i8],n,m.blockflag);
		}
		var _this5 = this.decodeState;
		while(_this5.bytesInSeg != 0 || !_this5.lastSeg && _this5.next() != 0) {
			_this5.bytesInSeg--;
			_this5.inputPosition += 1;
			_this5.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecoder
};
var kha_audio2_ogg_vorbis_VorbisTools = function() { };
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = true;
kha_audio2_ogg_vorbis_VorbisTools.pointCompare = function(a,b) {
	if(a.x < b.x) {
		return -1;
	} else if(a.x > b.x) {
		return 1;
	} else {
		return 0;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.uintAsc = function(a,b) {
	if(_$UInt_UInt_$Impl_$.gt(b,a)) {
		return -1;
	} else if(a == b) {
		return 0;
	} else {
		return 1;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.lookup1Values = function(entries,dim) {
	var r = Math.exp(Math.log(entries) / dim) | 0;
	if((Math.pow(r + 1,dim) | 0) <= entries) {
		++r;
	}
	var b = Math.pow(r + 1,dim) > entries;
	var b1 = (Math.pow(r,dim) | 0) <= entries;
	return r;
};
kha_audio2_ogg_vorbis_VorbisTools.computeWindow = function(n,window) {
	var n2 = n >> 1;
	var _g1 = 0;
	var _g = n2;
	while(_g1 < _g) {
		var i = _g1++;
		window[i] = Math.sin(1.57079632679489656 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
	}
};
kha_audio2_ogg_vorbis_VorbisTools.square = function(f) {
	return f * f;
};
kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse = function(n,rev) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var n8 = n >> 3;
	var _g1 = 0;
	var _g = n8;
	while(_g1 < _g) {
		var i = _g1++;
		var n1 = i;
		n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
		n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
		n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
		n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
		rev[i] = (n1 >>> 16 | n1 << 16) >>> 32 - ld + 3 << 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors = function(n,af,bf,cf) {
	var n4 = n >> 2;
	var n8 = n >> 3;
	var k2 = 0;
	var _g1 = 0;
	var _g = n4;
	while(_g1 < _g) {
		var k = _g1++;
		af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
		af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
		bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		k2 += 2;
	}
	var k21 = 0;
	var _g11 = 0;
	var _g2 = n8;
	while(_g11 < _g2) {
		var k1 = _g11++;
		cf[k21] = Math.cos(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		cf[k21 + 1] = -Math.sin(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		k21 += 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.drawLine = function(output,x0,y0,x1,y1,n) {
	if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
		var this1 = new Array(32);
		kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = this1;
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			var this2 = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable;
			var this3 = new Array(64);
			this2[i] = this3;
			var _g1 = 1;
			while(_g1 < 64) {
				var j = _g1++;
				kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
			}
		}
	}
	var dy = y1 - y0;
	var adx = x1 - x0;
	var ady = dy < 0 ? -dy : dy;
	var base;
	var x = x0;
	var y = y0;
	var err = 0;
	var sy;
	if(adx < 64 && ady < 32) {
		if(dy < 0) {
			base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base - 1;
		} else {
			base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base + 1;
		}
	} else {
		base = dy / adx | 0;
		if(dy < 0) {
			sy = base - 1;
		} else {
			sy = base + 1;
		}
	}
	ady -= (base < 0 ? -base : base) * adx;
	if(x1 > n) {
		x1 = n;
	}
	var _g2 = x;
	var _g11 = output;
	_g11[_g2] = _g11[_g2] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	var _g12 = x + 1;
	var _g3 = x1;
	while(_g12 < _g3) {
		var i1 = _g12++;
		err += ady;
		if(err >= adx) {
			err -= adx;
			y += sy;
		} else {
			y += base;
		}
		var _g21 = i1;
		var _g31 = output;
		_g31[_g21] = _g31[_g21] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	}
};
var kha_audio2_ogg_vorbis_data_Codebook = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = true;
kha_audio2_ogg_vorbis_data_Codebook.read = function(decodeState) {
	var c = new kha_audio2_ogg_vorbis_data_Codebook();
	var tmp;
	var tmp1;
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp2 = z;
		}
	} else {
		var z1 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp2 = z1;
	}
	if(tmp2 == 66) {
		var tmp3;
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp3 = 0;
			} else {
				var z2 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp3 = z2;
			}
		} else {
			var z3 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp3 = z3;
		}
		tmp1 = tmp3 != 67;
	} else {
		tmp1 = true;
	}
	if(!tmp1) {
		var tmp4;
		if(decodeState.validBits < 0) {
			tmp4 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp4 = 0;
			} else {
				var z4 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp4 = z4;
			}
		} else {
			var z5 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp4 = z5;
		}
		tmp = tmp4 != 86;
	} else {
		tmp = true;
	}
	if(tmp) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	var x;
	if(decodeState.validBits < 0) {
		x = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			x = 0;
		} else {
			var z6 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			x = z6;
		}
	} else {
		var z7 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		x = z7;
	}
	var tmp5;
	if(decodeState.validBits < 0) {
		tmp5 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp5 = 0;
		} else {
			var z8 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp5 = z8;
		}
	} else {
		var z9 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp5 = z9;
	}
	c.dimensions = (tmp5 << 8) + x;
	var x1;
	if(decodeState.validBits < 0) {
		x1 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			x1 = 0;
		} else {
			var z10 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			x1 = z10;
		}
	} else {
		var z11 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		x1 = z11;
	}
	var y;
	if(decodeState.validBits < 0) {
		y = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			y = 0;
		} else {
			var z12 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			y = z12;
		}
	} else {
		var z13 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		y = z13;
	}
	var tmp6;
	if(decodeState.validBits < 0) {
		tmp6 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp6 = 0;
		} else {
			var z14 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp6 = z14;
		}
	} else {
		var z15 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp6 = z15;
	}
	c.entries = (tmp6 << 16) + (y << 8) + x1;
	var ordered;
	if(decodeState.validBits < 0) {
		ordered = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			ordered = 0;
		} else {
			var z16 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			ordered = z16;
		}
	} else {
		var z17 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		ordered = z17;
	}
	var tmp7;
	if(ordered != 0) {
		tmp7 = false;
	} else {
		var tmp8;
		if(decodeState.validBits < 0) {
			tmp8 = 0;
		} else if(decodeState.validBits < 1) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 1)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp8 = 0;
			} else {
				var z18 = decodeState.acc & 1;
				decodeState.acc = decodeState.acc >>> 1;
				decodeState.validBits -= 1;
				tmp8 = z18;
			}
		} else {
			var z19 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp8 = z19;
		}
		tmp7 = tmp8 != 0;
	}
	c.sparse = tmp7;
	var length = c.entries;
	var this1 = new Array(length);
	var lengths = this1;
	if(!c.sparse) {
		c.codewordLengths = lengths;
	}
	var total = 0;
	if(ordered != 0) {
		var currentEntry = 0;
		var currentLength;
		if(decodeState.validBits < 0) {
			currentLength = 0;
		} else if(decodeState.validBits < 5) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 5)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				currentLength = 0;
			} else {
				var z20 = decodeState.acc & 31;
				decodeState.acc = decodeState.acc >>> 5;
				decodeState.validBits -= 5;
				currentLength = z20;
			}
		} else {
			var z21 = decodeState.acc & 31;
			decodeState.acc = decodeState.acc >>> 5;
			decodeState.validBits -= 5;
			currentLength = z21;
		}
		var currentLength1 = currentLength + 1;
		while(currentEntry < c.entries) {
			var limit = c.entries - currentEntry;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n = limit < 16384 ? limit < 16 ? log2_4[limit] : limit < 512 ? 5 + log2_4[limit >> 5] : 10 + log2_4[limit >> 10] : limit < 16777216 ? limit < 524288 ? 15 + log2_4[limit >> 15] : 20 + log2_4[limit >> 20] : limit < 536870912 ? 25 + log2_4[limit >> 25] : limit < -2147483648 ? 30 + log2_4[limit >> 30] : 0;
			var n1;
			if(decodeState.validBits < 0) {
				n1 = 0;
			} else if(decodeState.validBits < n) {
				if(n > 24) {
					n1 = decodeState.readBits(24) + (decodeState.readBits(n - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						n1 = 0;
					} else {
						var z22 = decodeState.acc & (1 << n) - 1;
						decodeState.acc = decodeState.acc >>> n;
						decodeState.validBits -= n;
						n1 = z22;
					}
				}
			} else {
				var z23 = decodeState.acc & (1 << n) - 1;
				decodeState.acc = decodeState.acc >>> n;
				decodeState.validBits -= n;
				n1 = z23;
			}
			if(currentEntry + n1 > c.entries) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			var _g1 = 0;
			var _g = n1;
			while(_g1 < _g) {
				var i = _g1++;
				lengths[currentEntry + i] = currentLength1;
			}
			currentEntry += n1;
			++currentLength1;
		}
	} else {
		var _g11 = 0;
		var _g2 = c.entries;
		while(_g11 < _g2) {
			var j = _g11++;
			var present;
			if(c.sparse) {
				if(decodeState.validBits < 0) {
					present = 0;
				} else if(decodeState.validBits < 1) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 1)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						present = 0;
					} else {
						var z24 = decodeState.acc & 1;
						decodeState.acc = decodeState.acc >>> 1;
						decodeState.validBits -= 1;
						present = z24;
					}
				} else {
					var z25 = decodeState.acc & 1;
					decodeState.acc = decodeState.acc >>> 1;
					decodeState.validBits -= 1;
					present = z25;
				}
			} else {
				present = 1;
			}
			if(present != 0) {
				var val;
				if(decodeState.validBits < 0) {
					val = 0;
				} else if(decodeState.validBits < 5) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 5)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						val = 0;
					} else {
						var z26 = decodeState.acc & 31;
						decodeState.acc = decodeState.acc >>> 5;
						decodeState.validBits -= 5;
						val = z26;
					}
				} else {
					var z27 = decodeState.acc & 31;
					decodeState.acc = decodeState.acc >>> 5;
					decodeState.validBits -= 5;
					val = z27;
				}
				lengths[j] = val + 1;
				++total;
			} else {
				lengths[j] = 255;
			}
		}
	}
	if(c.sparse && total >= c.entries >> 2) {
		c.codewordLengths = lengths;
		c.sparse = false;
	}
	var tmp9;
	if(c.sparse) {
		tmp9 = total;
	} else {
		var sortedCount = 0;
		var _g12 = 0;
		var _g3 = c.entries;
		while(_g12 < _g3) {
			var j1 = _g12++;
			var l = lengths[j1];
			if(l > 10 && l != 255) {
				++sortedCount;
			}
		}
		tmp9 = sortedCount;
	}
	c.sortedEntries = tmp9;
	var values = null;
	if(!c.sparse) {
		var length1 = c.entries;
		var this2 = new Array(length1);
		c.codewords = this2;
	} else {
		if(c.sortedEntries != 0) {
			var length2 = c.sortedEntries;
			var this3 = new Array(length2);
			c.codewordLengths = this3;
			var length3 = c.entries;
			var this4 = new Array(length3);
			c.codewords = this4;
			var length4 = c.entries;
			var this5 = new Array(length4);
			values = this5;
		}
		var size = c.entries + 64 * c.sortedEntries;
	}
	if(!c.computeCodewords(lengths,c.entries,values)) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.sortedEntries != 0) {
		c.sortedCodewords = [];
		var length5 = c.sortedEntries;
		var this6 = new Array(length5);
		c.sortedValues = this6;
		c.computeSortedHuffman(lengths,values);
	}
	if(c.sparse) {
		values = null;
		c.codewords = null;
		lengths = null;
	}
	c.computeAcceleratedHuffman();
	var tmp10;
	if(decodeState.validBits < 0) {
		tmp10 = 0;
	} else if(decodeState.validBits < 4) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 4)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp10 = 0;
		} else {
			var z28 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp10 = z28;
		}
	} else {
		var z29 = decodeState.acc & 15;
		decodeState.acc = decodeState.acc >>> 4;
		decodeState.validBits -= 4;
		tmp10 = z29;
	}
	c.lookupType = tmp10;
	if(c.lookupType > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.lookupType > 0) {
		var x2;
		if(decodeState.validBits < 0) {
			x2 = 0;
		} else if(decodeState.validBits < 32) {
			x2 = decodeState.readBits(24) + (decodeState.readBits(8) << 24);
		} else {
			var z30 = decodeState.acc & -1;
			decodeState.acc = decodeState.acc >>> 32;
			decodeState.validBits -= 32;
			x2 = z30;
		}
		var mantissa = _$UInt_UInt_$Impl_$.toFloat(x2 & 2097151);
		var sign = x2 & -2147483648;
		var exp = (x2 & 2145386496) >>> 21;
		var res = sign != 0 ? -mantissa : mantissa;
		c.minimumValue = res * Math.pow(2,exp - 788);
		var x3;
		if(decodeState.validBits < 0) {
			x3 = 0;
		} else if(decodeState.validBits < 32) {
			x3 = decodeState.readBits(24) + (decodeState.readBits(8) << 24);
		} else {
			var z31 = decodeState.acc & -1;
			decodeState.acc = decodeState.acc >>> 32;
			decodeState.validBits -= 32;
			x3 = z31;
		}
		var mantissa1 = _$UInt_UInt_$Impl_$.toFloat(x3 & 2097151);
		var sign1 = x3 & -2147483648;
		var exp1 = (x3 & 2145386496) >>> 21;
		var res1 = sign1 != 0 ? -mantissa1 : mantissa1;
		c.deltaValue = res1 * Math.pow(2,exp1 - 788);
		var tmp11;
		if(decodeState.validBits < 0) {
			tmp11 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp11 = 0;
			} else {
				var z32 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp11 = z32;
			}
		} else {
			var z33 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp11 = z33;
		}
		c.valueBits = tmp11 + 1;
		var tmp12;
		if(decodeState.validBits < 0) {
			tmp12 = 0;
		} else if(decodeState.validBits < 1) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 1)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp12 = 0;
			} else {
				var z34 = decodeState.acc & 1;
				decodeState.acc = decodeState.acc >>> 1;
				decodeState.validBits -= 1;
				tmp12 = z34;
			}
		} else {
			var z35 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp12 = z35;
		}
		c.sequenceP = tmp12 != 0;
		if(c.lookupType == 1) {
			c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
		} else {
			c.lookupValues = c.entries * c.dimensions;
		}
		var length6 = c.lookupValues;
		var this7 = new Array(length6);
		var mults = this7;
		var _g13 = 0;
		var _g4 = c.lookupValues;
		while(_g13 < _g4) {
			var j2 = _g13++;
			var n2 = c.valueBits;
			var q;
			if(decodeState.validBits < 0) {
				q = 0;
			} else if(decodeState.validBits < n2) {
				if(n2 > 24) {
					q = decodeState.readBits(24) + (decodeState.readBits(n2 - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n2)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						q = 0;
					} else {
						var z36 = decodeState.acc & (1 << n2) - 1;
						decodeState.acc = decodeState.acc >>> n2;
						decodeState.validBits -= n2;
						q = z36;
					}
				}
			} else {
				var z37 = decodeState.acc & (1 << n2) - 1;
				decodeState.acc = decodeState.acc >>> n2;
				decodeState.validBits -= n2;
				q = z37;
			}
			if(q == -1) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			mults[j2] = q;
		}
		var length7 = c.lookupValues;
		var this8 = new Array(length7);
		c.multiplicands = this8;
		var _g14 = 0;
		var _g5 = c.lookupValues;
		while(_g14 < _g5) {
			var j3 = _g14++;
			c.multiplicands[j3] = mults[j3] * c.deltaValue + c.minimumValue;
		}
		if(c.lookupType == 2 && c.sequenceP) {
			var _g15 = 1;
			var _g6 = c.lookupValues;
			while(_g15 < _g6) {
				var j4 = _g15++;
				c.multiplicands[j4] = c.multiplicands[j4 - 1];
			}
			c.sequenceP = false;
		}
	}
	return c;
};
kha_audio2_ogg_vorbis_data_Codebook.prototype = {
	computeCodewords: function(len,n,values) {
		var this1 = new Array(32);
		var available = this1;
		var _g = 0;
		while(_g < 32) {
			var x = _g++;
			available[x] = 0;
		}
		var k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			var b = this.sortedEntries == 0;
			return true;
		}
		var m = 0;
		var count = m++;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[count] = 0;
			this.codewordLengths[count] = len[k];
			values[count] = k;
		}
		var i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			var z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			var res = available[z];
			available[z] = 0;
			var n1 = res;
			n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
			n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
			n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
			n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
			var huffCode = n1 >>> 16 | n1 << 16;
			var count1 = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count1] = huffCode;
				this.codewordLengths[count1] = len[i];
				values[count1] = i;
			}
			if(z != len[i]) {
				var y = len[i];
				while(y > z) {
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	,computeSortedHuffman: function(lengths,values) {
		if(!this.sparse) {
			var k = 0;
			var _g1 = 0;
			var _g = this.entries;
			while(_g1 < _g) {
				var i = _g1++;
				var len = lengths[i];
				if(this.sparse ? true : len == 255 ? false : len > 10) {
					var n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[k++] = n >>> 16 | n << 16;
				}
			}
			var b = k == this.sortedEntries;
		} else {
			var _g11 = 0;
			var _g2 = this.sortedEntries;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var n1 = this.codewords[i1];
				n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
				n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
				n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
				n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
				this.sortedCodewords[i1] = n1 >>> 16 | n1 << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		var len1 = this.sparse ? this.sortedEntries : this.entries;
		var _g12 = 0;
		var _g3 = len1;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var huffLen = this.sparse ? lengths[values[i2]] : lengths[i2];
			if(this.sparse ? true : huffLen == 255 ? false : huffLen > 10) {
				var n2 = this.codewords[i2];
				n2 = (n2 & -1431655766) >>> 1 | (n2 & 1431655765) << 1;
				n2 = (n2 & -858993460) >>> 2 | (n2 & 858993459) << 2;
				n2 = (n2 & -252645136) >>> 4 | (n2 & 252645135) << 4;
				n2 = (n2 & -16711936) >>> 8 | (n2 & 16711935) << 8;
				var code = n2 >>> 16 | n2 << 16;
				var x = 0;
				var n3 = this.sortedEntries;
				while(n3 > 1) {
					var m = x + (n3 >> 1);
					if(_$UInt_UInt_$Impl_$.gte(code,this.sortedCodewords[m])) {
						x = m;
						n3 -= n3 >> 1;
					} else {
						n3 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i2];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i2;
				}
			}
		}
	}
	,computeAcceleratedHuffman: function() {
		var this1 = new Array(1024);
		this.fastHuffman = this1;
		this.fastHuffman[0] = -1;
		var _g1 = 0;
		var _g = 1024;
		while(_g1 < _g) {
			var i = _g1++;
			this.fastHuffman[i] = -1;
		}
		var len = this.sparse ? this.sortedEntries : this.entries;
		var _g11 = 0;
		var _g2 = len;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(this.codewordLengths[i1] <= 10) {
				var z;
				if(this.sparse) {
					var n = this.sortedCodewords[i1];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i1];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i1;
					z += 1 << this.codewordLengths[i1];
				}
			}
		}
	}
	,codebookDecode: function(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		var minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			var div = 1;
			var last = 0.0;
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var i1 = _g1++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1;
				var _g3 = output;
				_g3[_g2] = _g3[_g2] + val1;
				if(sequenceP) {
					last = val1 + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			var last1 = 0.0;
			var _g11 = 0;
			var _g4 = len;
			while(_g11 < _g4) {
				var i2 = _g11++;
				var val2 = multiplicands[z + i2] + last1;
				var _g21 = offset + i2;
				var _g31 = output;
				_g31[_g21] = _g31[_g21] + val2;
				last1 = val2 + minimumValue;
			}
		} else {
			var last2 = 0.0;
			var _g12 = 0;
			var _g5 = len;
			while(_g12 < _g5) {
				var i3 = _g12++;
				var _g22 = offset + i3;
				var _g32 = output;
				_g32[_g22] = _g32[_g22] + (multiplicands[z + i3] + last2);
			}
		}
		return true;
	}
	,codebookDecodeStep: function(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			var div = 1;
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var i1 = _g1++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1 * step;
				var _g3 = output;
				_g3[_g2] = _g3[_g2] + val1;
				if(sequenceP) {
					last = val1;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		var _g11 = 0;
		var _g4 = len;
		while(_g11 < _g4) {
			var i2 = _g11++;
			var val2 = multiplicands[z + i2] + last;
			var _g21 = offset + i2 * step;
			var _g31 = output;
			_g31[_g21] = _g31[_g21] + val2;
			if(sequenceP) {
				last = val2;
			}
		}
		return true;
	}
	,decodeDeinterleaveRepeat: function(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		var effective = this.dimensions;
		if(this.lookupType == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		var multiplicands = this.multiplicands;
		var sequenceP = this.sequenceP;
		var lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			var last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			var i = this.fastHuffman[decodeState.acc & 1023];
			var val;
			if(i >= 0) {
				var l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			var z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				var div = 1;
				if(sequenceP) {
					var _g1 = 0;
					var _g = effective;
					while(_g1 < _g) {
						var i1 = _g1++;
						var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val1 = multiplicands[off] + last;
						var _g2 = pInter;
						var _g3 = residueBuffers[cInter];
						_g3[_g2] = _g3[_g2] + val1;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val1;
						div = div * lookupValues;
					}
				} else {
					var _g11 = 0;
					var _g4 = effective;
					while(_g11 < _g4) {
						var i2 = _g11++;
						var off1 = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val2 = multiplicands[off1] + last;
						var _g21 = pInter;
						var _g31 = residueBuffers[cInter];
						_g31[_g21] = _g31[_g21] + val2;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					var _g12 = 0;
					var _g5 = effective;
					while(_g12 < _g5) {
						var i3 = _g12++;
						var val3 = multiplicands[z + i3] + last;
						var _g22 = pInter;
						var _g32 = residueBuffers[cInter];
						_g32[_g22] = _g32[_g22] + val3;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val3;
					}
				} else {
					var _g13 = 0;
					var _g6 = effective;
					while(_g13 < _g6) {
						var i4 = _g13++;
						var val4 = multiplicands[z + i4] + last;
						var _g23 = pInter;
						var _g33 = residueBuffers[cInter];
						_g33[_g23] = _g33[_g23] + val4;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	,residueDecode: function(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			var step = n / this.dimensions | 0;
			var _g1 = 0;
			var _g = step;
			while(_g1 < _g) {
				var k = _g1++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			var k1 = 0;
			while(k1 < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k1)) {
					return false;
				}
				k1 += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	,__class__: kha_audio2_ogg_vorbis_data_Codebook
};
var kha_audio2_ogg_vorbis_data_Comment = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = true;
kha_audio2_ogg_vorbis_data_Comment.prototype = {
	get_loopStart: function() {
		return Std.parseInt(this.getString("loopstart"));
	}
	,get_loopLength: function() {
		return Std.parseInt(this.getString("looplength"));
	}
	,add: function(key,value) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			(__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).push(value);
		} else {
			var v = [value];
			var _this2 = this.data;
			if(__map_reserved[key] != null) {
				_this2.setReserved(key,v);
			} else {
				_this2.h[key] = v;
			}
		}
	}
	,getString: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			return (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key])[0];
		} else {
			return null;
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Comment
	,__properties__: {get_loopLength:"get_loopLength",get_loopStart:"get_loopStart"}
};
var kha_audio2_ogg_vorbis_data_Floor = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = true;
kha_audio2_ogg_vorbis_data_Floor.read = function(decodeState,codebooks) {
	var floor = new kha_audio2_ogg_vorbis_data_Floor();
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp = z;
		}
	} else {
		var z1 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp = z1;
	}
	floor.type = tmp;
	if(floor.type > 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	}
	if(floor.type == 0) {
		var g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
		var tmp1;
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp1 = 0;
			} else {
				var z2 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp1 = z2;
			}
		} else {
			var z3 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp1 = z3;
		}
		g.order = tmp1;
		var tmp2;
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else if(decodeState.validBits < 16) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 16)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp2 = 0;
			} else {
				var z4 = decodeState.acc & 65535;
				decodeState.acc = decodeState.acc >>> 16;
				decodeState.validBits -= 16;
				tmp2 = z4;
			}
		} else {
			var z5 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp2 = z5;
		}
		g.rate = tmp2;
		var tmp3;
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else if(decodeState.validBits < 16) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 16)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp3 = 0;
			} else {
				var z6 = decodeState.acc & 65535;
				decodeState.acc = decodeState.acc >>> 16;
				decodeState.validBits -= 16;
				tmp3 = z6;
			}
		} else {
			var z7 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp3 = z7;
		}
		g.barkMapSize = tmp3;
		var tmp4;
		if(decodeState.validBits < 0) {
			tmp4 = 0;
		} else if(decodeState.validBits < 6) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 6)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp4 = 0;
			} else {
				var z8 = decodeState.acc & 63;
				decodeState.acc = decodeState.acc >>> 6;
				decodeState.validBits -= 6;
				tmp4 = z8;
			}
		} else {
			var z9 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			tmp4 = z9;
		}
		g.amplitudeBits = tmp4;
		var tmp5;
		if(decodeState.validBits < 0) {
			tmp5 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp5 = 0;
			} else {
				var z10 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp5 = z10;
			}
		} else {
			var z11 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp5 = z11;
		}
		g.amplitudeOffset = tmp5;
		var tmp6;
		if(decodeState.validBits < 0) {
			tmp6 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp6 = 0;
			} else {
				var z12 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp6 = z12;
			}
		} else {
			var z13 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp6 = z13;
		}
		g.numberOfBooks = tmp6 + 1;
		var _g1 = 0;
		var _g = g.numberOfBooks;
		while(_g1 < _g) {
			var j = _g1++;
			var this1 = g.bookList;
			var val;
			if(decodeState.validBits < 0) {
				val = 0;
			} else if(decodeState.validBits < 8) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 8)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val = 0;
				} else {
					var z14 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val = z14;
				}
			} else {
				var z15 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				val = z15;
			}
			this1[j] = val;
		}
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	} else {
		var p = [];
		var g1 = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
		var maxClass = -1;
		var tmp7;
		if(decodeState.validBits < 0) {
			tmp7 = 0;
		} else if(decodeState.validBits < 5) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 5)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp7 = 0;
			} else {
				var z16 = decodeState.acc & 31;
				decodeState.acc = decodeState.acc >>> 5;
				decodeState.validBits -= 5;
				tmp7 = z16;
			}
		} else {
			var z17 = decodeState.acc & 31;
			decodeState.acc = decodeState.acc >>> 5;
			decodeState.validBits -= 5;
			tmp7 = z17;
		}
		g1.partitions = tmp7;
		var length = g1.partitions;
		var this2 = new Array(length);
		g1.partitionClassList = this2;
		var _g11 = 0;
		var _g2 = g1.partitions;
		while(_g11 < _g2) {
			var j1 = _g11++;
			var this3 = g1.partitionClassList;
			var val1;
			if(decodeState.validBits < 0) {
				val1 = 0;
			} else if(decodeState.validBits < 4) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 4)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val1 = 0;
				} else {
					var z18 = decodeState.acc & 15;
					decodeState.acc = decodeState.acc >>> 4;
					decodeState.validBits -= 4;
					val1 = z18;
				}
			} else {
				var z19 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				val1 = z19;
			}
			this3[j1] = val1;
			if(g1.partitionClassList[j1] > maxClass) {
				maxClass = g1.partitionClassList[j1];
			}
		}
		var this4 = new Array(maxClass + 1);
		g1.classDimensions = this4;
		var this5 = new Array(maxClass + 1);
		g1.classMasterbooks = this5;
		var this6 = new Array(maxClass + 1);
		g1.classSubclasses = this6;
		var this7 = new Array(maxClass + 1);
		g1.subclassBooks = this7;
		var _g12 = 0;
		var _g3 = maxClass + 1;
		while(_g12 < _g3) {
			var j2 = _g12++;
			var this8 = g1.classDimensions;
			var val2;
			if(decodeState.validBits < 0) {
				val2 = 0;
			} else if(decodeState.validBits < 3) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 3)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val2 = 0;
				} else {
					var z20 = decodeState.acc & 7;
					decodeState.acc = decodeState.acc >>> 3;
					decodeState.validBits -= 3;
					val2 = z20;
				}
			} else {
				var z21 = decodeState.acc & 7;
				decodeState.acc = decodeState.acc >>> 3;
				decodeState.validBits -= 3;
				val2 = z21;
			}
			this8[j2] = val2 + 1;
			var this9 = g1.classSubclasses;
			var val3;
			if(decodeState.validBits < 0) {
				val3 = 0;
			} else if(decodeState.validBits < 2) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 2)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val3 = 0;
				} else {
					var z22 = decodeState.acc & 3;
					decodeState.acc = decodeState.acc >>> 2;
					decodeState.validBits -= 2;
					val3 = z22;
				}
			} else {
				var z23 = decodeState.acc & 3;
				decodeState.acc = decodeState.acc >>> 2;
				decodeState.validBits -= 2;
				val3 = z23;
			}
			this9[j2] = val3;
			if(g1.classSubclasses[j2] != 0) {
				var this10 = g1.classMasterbooks;
				var val4;
				if(decodeState.validBits < 0) {
					val4 = 0;
				} else if(decodeState.validBits < 8) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 8)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						val4 = 0;
					} else {
						var z24 = decodeState.acc & 255;
						decodeState.acc = decodeState.acc >>> 8;
						decodeState.validBits -= 8;
						val4 = z24;
					}
				} else {
					var z25 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val4 = z25;
				}
				this10[j2] = val4;
				if(g1.classMasterbooks[j2] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
			var kl = 1 << g1.classSubclasses[j2];
			var this11 = g1.subclassBooks;
			var this12 = new Array(kl);
			this11[j2] = this12;
			var _g31 = 0;
			var _g21 = kl;
			while(_g31 < _g21) {
				var k = _g31++;
				var this13 = g1.subclassBooks[j2];
				var val5;
				if(decodeState.validBits < 0) {
					val5 = 0;
				} else if(decodeState.validBits < 8) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 8)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						val5 = 0;
					} else {
						var z26 = decodeState.acc & 255;
						decodeState.acc = decodeState.acc >>> 8;
						decodeState.validBits -= 8;
						val5 = z26;
					}
				} else {
					var z27 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val5 = z27;
				}
				this13[k] = val5 - 1;
				if(g1.subclassBooks[j2][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
		}
		var tmp8;
		if(decodeState.validBits < 0) {
			tmp8 = 0;
		} else if(decodeState.validBits < 2) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 2)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp8 = 0;
			} else {
				var z28 = decodeState.acc & 3;
				decodeState.acc = decodeState.acc >>> 2;
				decodeState.validBits -= 2;
				tmp8 = z28;
			}
		} else {
			var z29 = decodeState.acc & 3;
			decodeState.acc = decodeState.acc >>> 2;
			decodeState.validBits -= 2;
			tmp8 = z29;
		}
		g1.floor1Multiplier = tmp8 + 1;
		var tmp9;
		if(decodeState.validBits < 0) {
			tmp9 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp9 = 0;
			} else {
				var z30 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp9 = z30;
			}
		} else {
			var z31 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp9 = z31;
		}
		g1.rangebits = tmp9;
		var this14 = new Array(250);
		g1.xlist = this14;
		g1.xlist[0] = 0;
		g1.xlist[1] = 1 << g1.rangebits;
		g1.values = 2;
		var _g13 = 0;
		var _g4 = g1.partitions;
		while(_g13 < _g4) {
			var j3 = _g13++;
			var c = g1.partitionClassList[j3];
			var _g32 = 0;
			var _g22 = g1.classDimensions[c];
			while(_g32 < _g22) {
				var k1 = _g32++;
				var this15 = g1.xlist;
				var index = g1.values;
				var n = g1.rangebits;
				var val6;
				if(decodeState.validBits < 0) {
					val6 = 0;
				} else if(decodeState.validBits < n) {
					if(n > 24) {
						val6 = decodeState.readBits(24) + (decodeState.readBits(n - 24) << 24);
					} else {
						if(decodeState.validBits == 0) {
							decodeState.acc = 0;
						}
						while(true) {
							if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
								decodeState.validBits = -1;
								break;
							} else {
								decodeState.bytesInSeg--;
								decodeState.inputPosition += 1;
								decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
								decodeState.validBits += 8;
							}
							if(!(decodeState.validBits < n)) {
								break;
							}
						}
						if(decodeState.validBits < 0) {
							val6 = 0;
						} else {
							var z32 = decodeState.acc & (1 << n) - 1;
							decodeState.acc = decodeState.acc >>> n;
							decodeState.validBits -= n;
							val6 = z32;
						}
					}
				} else {
					var z33 = decodeState.acc & (1 << n) - 1;
					decodeState.acc = decodeState.acc >>> n;
					decodeState.validBits -= n;
					val6 = z33;
				}
				this15[index] = val6;
				g1.values++;
			}
		}
		var _g14 = 0;
		var _g5 = g1.values;
		while(_g14 < _g5) {
			var j4 = _g14++;
			p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
			p[j4].x = g1.xlist[j4];
			p[j4].y = j4;
		}
		p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
		var length1 = g1.values;
		var this16 = new Array(length1);
		g1.sortedOrder = this16;
		var _g15 = 0;
		var _g6 = g1.values;
		while(_g15 < _g6) {
			var j5 = _g15++;
			g1.sortedOrder[j5] = p[j5].y;
		}
		var length2 = g1.values;
		var this17 = new Array(length2);
		g1.neighbors = this17;
		var _g16 = 2;
		var _g7 = g1.values;
		while(_g16 < _g7) {
			var j6 = _g16++;
			var ne_low;
			var ne_high;
			var x = g1.xlist;
			var low = -1;
			var high = 65536;
			var plow = 0;
			var phigh = 0;
			var _g17 = 0;
			var _g8 = j6;
			while(_g17 < _g8) {
				var i = _g17++;
				if(x[i] > low && x[i] < x[j6]) {
					plow = i;
					low = x[i];
				}
				if(x[i] < high && x[i] > x[j6]) {
					phigh = i;
					high = x[i];
				}
			}
			ne_low = plow;
			ne_high = phigh;
			var this18 = g1.neighbors;
			var length3 = g1.values;
			var this19 = new Array(length3);
			this18[j6] = this19;
			g1.neighbors[j6][0] = ne_low;
			g1.neighbors[j6][1] = ne_high;
		}
	}
	return floor;
};
kha_audio2_ogg_vorbis_data_Floor.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor
};
var kha_audio2_ogg_vorbis_data_Floor0 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = true;
kha_audio2_ogg_vorbis_data_Floor0.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor0
};
var kha_audio2_ogg_vorbis_data_Floor1 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = true;
kha_audio2_ogg_vorbis_data_Floor1.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor1
};
var kha_audio2_ogg_vorbis_data_Header = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = true;
kha_audio2_ogg_vorbis_data_Header.read = function(decodeState) {
	var page = decodeState.page;
	page.start(decodeState);
	if((page.flag & 2) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 4) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 1) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.firstPageValidate();
	decodeState.inputPosition += 1;
	if(decodeState.input.readByte() != 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new haxe_io_Bytes(new ArrayBuffer(6));
	var _g = 0;
	while(_g < 6) {
		var i = _g++;
		var x;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header.b[i] = x & 255;
	}
	if(header.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "VorbisDecodeState.hx", lineNumber : 300, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	decodeState.inputPosition += 4;
	var version = decodeState.input.readInt32();
	if(version != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header1 = new kha_audio2_ogg_vorbis_data_Header();
	decodeState.inputPosition += 1;
	header1.channel = decodeState.input.readByte();
	if(header1.channel == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	} else if(header1.channel > 16) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.sampleRate = decodeState.input.readInt32();
	if(header1.sampleRate == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.maximumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.nominalBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.minimumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 1;
	var x1 = decodeState.input.readByte();
	var log0 = x1 & 15;
	var log1 = x1 >> 4;
	header1.blocksize0 = 1 << log0;
	header1.blocksize1 = 1 << log1;
	if(log0 < 6 || log0 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log1 < 6 || log1 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log0 > log1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 1;
	var x2 = decodeState.input.readByte();
	if((x2 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.page.start(decodeState);
	decodeState.startPacket();
	var len = 0;
	var output = new haxe_io_BytesOutput();
	while(true) {
		len = decodeState.next();
		if(!(len != 0)) {
			break;
		}
		decodeState.inputPosition += len;
		output.write(decodeState.input.read(len));
		decodeState.bytesInSeg = 0;
	}
	var packetInput = new haxe_io_BytesInput(output.getBytes());
	packetInput.readByte();
	packetInput.read(6);
	var vendorLength = packetInput.readInt32();
	header1.vendor = packetInput.readString(vendorLength);
	header1.comment = new kha_audio2_ogg_vorbis_data_Comment();
	var commentCount = packetInput.readInt32();
	var _g1 = 0;
	var _g2 = commentCount;
	while(_g1 < _g2) {
		var i1 = _g1++;
		var n = packetInput.readInt32();
		var str = packetInput.readString(n);
		var splitter = str.indexOf("=");
		if(splitter != -1) {
			header1.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
		}
	}
	var x3 = packetInput.readByte();
	if((x3 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.startPacket();
	var x4;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x4 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x4 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	if(x4 != 5) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header2 = new haxe_io_Bytes(new ArrayBuffer(6));
	var _g3 = 0;
	while(_g3 < 6) {
		var i2 = _g3++;
		var x5;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x5 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x5 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header2.b[i2] = x5 & 255;
	}
	if(header2.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "VorbisDecodeState.hx", lineNumber : 300, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	var codebookCount;
	if(decodeState.validBits < 0) {
		codebookCount = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			codebookCount = 0;
		} else {
			var z = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			codebookCount = z;
		}
	} else {
		var z1 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		codebookCount = z1;
	}
	var codebookCount1 = codebookCount + 1;
	var this1 = new Array(codebookCount1);
	header1.codebooks = this1;
	var _g11 = 0;
	var _g4 = codebookCount1;
	while(_g11 < _g4) {
		var i3 = _g11++;
		header1.codebooks[i3] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
	}
	var x6;
	if(decodeState.validBits < 0) {
		x6 = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			x6 = 0;
		} else {
			var z2 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			x6 = z2;
		}
	} else {
		var z3 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		x6 = z3;
	}
	x2 = x6 + 1;
	var _g12 = 0;
	var _g5 = x2;
	while(_g12 < _g5) {
		var i4 = _g12++;
		var tmp;
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else if(decodeState.validBits < 16) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 16)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp = 0;
			} else {
				var z4 = decodeState.acc & 65535;
				decodeState.acc = decodeState.acc >>> 16;
				decodeState.validBits -= 16;
				tmp = z4;
			}
		} else {
			var z5 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp = z5;
		}
		if(tmp != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	var floorCount;
	if(decodeState.validBits < 0) {
		floorCount = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			floorCount = 0;
		} else {
			var z6 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			floorCount = z6;
		}
	} else {
		var z7 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		floorCount = z7;
	}
	var floorCount1 = floorCount + 1;
	var this2 = new Array(floorCount1);
	header1.floorConfig = this2;
	var _g13 = 0;
	var _g6 = floorCount1;
	while(_g13 < _g6) {
		var i5 = _g13++;
		header1.floorConfig[i5] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header1.codebooks);
	}
	var residueCount;
	if(decodeState.validBits < 0) {
		residueCount = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			residueCount = 0;
		} else {
			var z8 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			residueCount = z8;
		}
	} else {
		var z9 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		residueCount = z9;
	}
	var residueCount1 = residueCount + 1;
	var this3 = new Array(residueCount1);
	header1.residueConfig = this3;
	var _g14 = 0;
	var _g7 = residueCount1;
	while(_g14 < _g7) {
		var i6 = _g14++;
		header1.residueConfig[i6] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header1.codebooks);
	}
	var mappingCount;
	if(decodeState.validBits < 0) {
		mappingCount = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			mappingCount = 0;
		} else {
			var z10 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			mappingCount = z10;
		}
	} else {
		var z11 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		mappingCount = z11;
	}
	var mappingCount1 = mappingCount + 1;
	var this4 = new Array(mappingCount1);
	header1.mapping = this4;
	var _g15 = 0;
	var _g8 = mappingCount1;
	while(_g15 < _g8) {
		var i7 = _g15++;
		var map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header1.channel);
		header1.mapping[i7] = map;
		var _g31 = 0;
		var _g21 = map.submaps;
		while(_g31 < _g21) {
			var j = _g31++;
			if(map.submapFloor[j] >= header1.floorConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
			if(map.submapResidue[j] >= header1.residueConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
	}
	var modeCount;
	if(decodeState.validBits < 0) {
		modeCount = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			modeCount = 0;
		} else {
			var z12 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			modeCount = z12;
		}
	} else {
		var z13 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		modeCount = z13;
	}
	var modeCount1 = modeCount + 1;
	var this5 = new Array(modeCount1);
	header1.modes = this5;
	var _g16 = 0;
	var _g9 = modeCount1;
	while(_g16 < _g9) {
		var i8 = _g16++;
		var mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
		header1.modes[i8] = mode;
		if(mode.mapping >= header1.mapping.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		decodeState.input.readByte();
	}
	return header1;
};
kha_audio2_ogg_vorbis_data_Header.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Header
};
var kha_audio2_ogg_vorbis_data_IntPoint = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = true;
kha_audio2_ogg_vorbis_data_IntPoint.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_IntPoint
};
var kha_audio2_ogg_vorbis_data_Mapping = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = true;
kha_audio2_ogg_vorbis_data_Mapping.read = function(decodeState,channels) {
	var m = new kha_audio2_ogg_vorbis_data_Mapping();
	var mappingType;
	if(decodeState.validBits < 0) {
		mappingType = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			mappingType = 0;
		} else {
			var z = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			mappingType = z;
		}
	} else {
		var z1 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		mappingType = z1;
	}
	if(mappingType != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	var this1 = new Array(channels);
	m.chan = this1;
	var _g1 = 0;
	var _g = channels;
	while(_g1 < _g) {
		var j = _g1++;
		m.chan[j] = new kha_audio2_ogg_vorbis_data_MappingChannel();
	}
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z2 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp = z2;
		}
	} else {
		var z3 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		tmp = z3;
	}
	if(tmp != 0) {
		var tmp1;
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp1 = 0;
			} else {
				var z4 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp1 = z4;
			}
		} else {
			var z5 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp1 = z5;
		}
		m.submaps = tmp1 + 1;
	} else {
		m.submaps = 1;
	}
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z6 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp2 = z6;
		}
	} else {
		var z7 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		tmp2 = z7;
	}
	if(tmp2 != 0) {
		var tmp3;
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp3 = 0;
			} else {
				var z8 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp3 = z8;
			}
		} else {
			var z9 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp3 = z9;
		}
		m.couplingSteps = tmp3 + 1;
		var _g11 = 0;
		var _g2 = m.couplingSteps;
		while(_g11 < _g2) {
			var k = _g11++;
			var tmp4 = m.chan[k];
			var n = channels - 1;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n1 = n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0;
			var tmp5;
			if(decodeState.validBits < 0) {
				tmp5 = 0;
			} else if(decodeState.validBits < n1) {
				if(n1 > 24) {
					tmp5 = decodeState.readBits(24) + (decodeState.readBits(n1 - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n1)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						tmp5 = 0;
					} else {
						var z10 = decodeState.acc & (1 << n1) - 1;
						decodeState.acc = decodeState.acc >>> n1;
						decodeState.validBits -= n1;
						tmp5 = z10;
					}
				}
			} else {
				var z11 = decodeState.acc & (1 << n1) - 1;
				decodeState.acc = decodeState.acc >>> n1;
				decodeState.validBits -= n1;
				tmp5 = z11;
			}
			tmp4.magnitude = tmp5;
			var tmp6 = m.chan[k];
			var n2 = channels - 1;
			var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n3 = n2 < 16384 ? n2 < 16 ? log2_41[n2] : n2 < 512 ? 5 + log2_41[n2 >> 5] : 10 + log2_41[n2 >> 10] : n2 < 16777216 ? n2 < 524288 ? 15 + log2_41[n2 >> 15] : 20 + log2_41[n2 >> 20] : n2 < 536870912 ? 25 + log2_41[n2 >> 25] : n2 < -2147483648 ? 30 + log2_41[n2 >> 30] : 0;
			var tmp7;
			if(decodeState.validBits < 0) {
				tmp7 = 0;
			} else if(decodeState.validBits < n3) {
				if(n3 > 24) {
					tmp7 = decodeState.readBits(24) + (decodeState.readBits(n3 - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n3)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						tmp7 = 0;
					} else {
						var z12 = decodeState.acc & (1 << n3) - 1;
						decodeState.acc = decodeState.acc >>> n3;
						decodeState.validBits -= n3;
						tmp7 = z12;
					}
				}
			} else {
				var z13 = decodeState.acc & (1 << n3) - 1;
				decodeState.acc = decodeState.acc >>> n3;
				decodeState.validBits -= n3;
				tmp7 = z13;
			}
			tmp6.angle = tmp7;
			if(m.chan[k].magnitude >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].angle >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].magnitude == m.chan[k].angle) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		m.couplingSteps = 0;
	}
	var tmp8;
	if(decodeState.validBits < 0) {
		tmp8 = 0;
	} else if(decodeState.validBits < 2) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 2)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp8 = 0;
		} else {
			var z14 = decodeState.acc & 3;
			decodeState.acc = decodeState.acc >>> 2;
			decodeState.validBits -= 2;
			tmp8 = z14;
		}
	} else {
		var z15 = decodeState.acc & 3;
		decodeState.acc = decodeState.acc >>> 2;
		decodeState.validBits -= 2;
		tmp8 = z15;
	}
	if(tmp8 != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	if(m.submaps > 1) {
		var _g12 = 0;
		var _g3 = channels;
		while(_g12 < _g3) {
			var j1 = _g12++;
			var tmp9 = m.chan[j1];
			var tmp10;
			if(decodeState.validBits < 0) {
				tmp10 = 0;
			} else if(decodeState.validBits < 4) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 4)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					tmp10 = 0;
				} else {
					var z16 = decodeState.acc & 15;
					decodeState.acc = decodeState.acc >>> 4;
					decodeState.validBits -= 4;
					tmp10 = z16;
				}
			} else {
				var z17 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp10 = z17;
			}
			tmp9.mux = tmp10;
			if(m.chan[j1].mux >= m.submaps) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		var _g13 = 0;
		var _g4 = channels;
		while(_g13 < _g4) {
			var j2 = _g13++;
			m.chan[j2].mux = 0;
		}
	}
	var length = m.submaps;
	var this2 = new Array(length);
	m.submapFloor = this2;
	var length1 = m.submaps;
	var this3 = new Array(length1);
	m.submapResidue = this3;
	var _g14 = 0;
	var _g5 = m.submaps;
	while(_g14 < _g5) {
		var j3 = _g14++;
		if(decodeState.validBits >= 0) {
			if(decodeState.validBits < 8) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 8)) {
						break;
					}
				}
				if(decodeState.validBits >= 0) {
					var z18 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
				}
			} else {
				var z19 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
			}
		}
		var this4 = m.submapFloor;
		var val;
		if(decodeState.validBits < 0) {
			val = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				val = 0;
			} else {
				var z20 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				val = z20;
			}
		} else {
			var z21 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			val = z21;
		}
		this4[j3] = val;
		var this5 = m.submapResidue;
		var val1;
		if(decodeState.validBits < 0) {
			val1 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				val1 = 0;
			} else {
				var z22 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				val1 = z22;
			}
		} else {
			var z23 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			val1 = z23;
		}
		this5[j3] = val1;
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mapping.prototype = {
	doFloor: function(floors,i,n,target,finalY,step2Flag) {
		var n2 = n >> 1;
		var s = this.chan[i].mux;
		var floor;
		var floor1 = floors[this.submapFloor[s]];
		if(floor1.type == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			var g = floor1.floor1;
			var lx = 0;
			var ly = finalY[0] * g.floor1Multiplier;
			var _g1 = 1;
			var _g = g.values;
			while(_g1 < _g) {
				var q = _g1++;
				var j = g.sortedOrder[q];
				if(finalY[j] >= 0) {
					var hy = finalY[j] * g.floor1Multiplier;
					var hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				var _g11 = lx;
				var _g2 = n2;
				while(_g11 < _g2) {
					var j1 = _g11++;
					var _g21 = j1;
					var _g3 = target;
					_g3[_g21] = _g3[_g21] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Mapping
};
var kha_audio2_ogg_vorbis_data_MappingChannel = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = true;
kha_audio2_ogg_vorbis_data_MappingChannel.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_MappingChannel
};
var kha_audio2_ogg_vorbis_data_Mode = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = true;
kha_audio2_ogg_vorbis_data_Mode.read = function(decodeState) {
	var m = new kha_audio2_ogg_vorbis_data_Mode();
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp = z;
		}
	} else {
		var z1 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		tmp = z1;
	}
	m.blockflag = tmp != 0;
	var tmp1;
	if(decodeState.validBits < 0) {
		tmp1 = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else {
			var z2 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp1 = z2;
		}
	} else {
		var z3 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp1 = z3;
	}
	m.windowtype = tmp1;
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z4 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp2 = z4;
		}
	} else {
		var z5 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp2 = z5;
	}
	m.transformtype = tmp2;
	var tmp3;
	if(decodeState.validBits < 0) {
		tmp3 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else {
			var z6 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp3 = z6;
		}
	} else {
		var z7 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp3 = z7;
	}
	m.mapping = tmp3;
	if(m.windowtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	if(m.transformtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mode.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Mode
};
var kha_audio2_ogg_vorbis_data_Page = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = true;
kha_audio2_ogg_vorbis_data_Page.prototype = {
	clone: function() {
		var page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	,start: function(decodeState) {
		var tmp;
		var tmp1;
		var tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 323, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	,startWithoutCapturePattern: function(decodeState) {
		decodeState.inputPosition += 1;
		var version = decodeState.input.readByte();
		if(version != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		var loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		var loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
	,__class__: kha_audio2_ogg_vorbis_data_Page
};
var kha_audio2_ogg_vorbis_data_ProbedPage = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = true;
kha_audio2_ogg_vorbis_data_ProbedPage.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_ProbedPage
};
var kha_audio2_ogg_vorbis_data_ReaderError = function(type,message,posInfos) {
	if(message == null) {
		message = "";
	}
	this.type = type;
	this.message = message;
	this.posInfos = posInfos;
};
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = true;
kha_audio2_ogg_vorbis_data_ReaderError.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_ReaderError
};
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxClasses["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__ : true, __constructs__ : ["NEED_MORE_DATA","INVALID_API_MIXING","OUTOFMEM","FEATURE_NOT_SUPPORTED","TOO_MANY_CHANNELS","FILE_OPEN_FAILURE","SEEK_WITHOUT_LENGTH","UNEXPECTED_EOF","SEEK_INVALID","INVALID_SETUP","INVALID_STREAM","MISSING_CAPTURE_PATTERN","INVALID_STREAM_STRUCTURE_VERSION","CONTINUED_PACKET_FLAG_INVALID","INCORRECT_STREAM_SERIAL_NUMBER","INVALID_FIRST_PAGE","BAD_PACKET_TYPE","CANT_FIND_LAST_PAGE","SEEK_FAILED","OTHER"] };
kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA = ["NEED_MORE_DATA",0];
kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING = ["INVALID_API_MIXING",1];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM = ["OUTOFMEM",2];
kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED = ["FEATURE_NOT_SUPPORTED",3];
kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS = ["TOO_MANY_CHANNELS",4];
kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE = ["FILE_OPEN_FAILURE",5];
kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH = ["SEEK_WITHOUT_LENGTH",6];
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF = ["UNEXPECTED_EOF",7];
kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID = ["SEEK_INVALID",8];
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP = ["INVALID_SETUP",9];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM = ["INVALID_STREAM",10];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN = ["MISSING_CAPTURE_PATTERN",11];
kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION = ["INVALID_STREAM_STRUCTURE_VERSION",12];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID = ["CONTINUED_PACKET_FLAG_INVALID",13];
kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER = ["INCORRECT_STREAM_SERIAL_NUMBER",14];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE = ["INVALID_FIRST_PAGE",15];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE = ["BAD_PACKET_TYPE",16];
kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE = ["CANT_FIND_LAST_PAGE",17];
kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED = ["SEEK_FAILED",18];
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER = ["OTHER",19];
kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
var kha_audio2_ogg_vorbis_data_Residue = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = true;
kha_audio2_ogg_vorbis_data_Residue.read = function(decodeState,codebooks) {
	var r = new kha_audio2_ogg_vorbis_data_Residue();
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp = z;
		}
	} else {
		var z1 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp = z1;
	}
	r.type = tmp;
	if(r.type > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
	}
	var this1 = new Array(64);
	var residueCascade = this1;
	var tmp1;
	if(decodeState.validBits < 0) {
		tmp1 = 0;
	} else if(decodeState.validBits < 24) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 24)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else {
			var z2 = decodeState.acc & 16777215;
			decodeState.acc = decodeState.acc >>> 24;
			decodeState.validBits -= 24;
			tmp1 = z2;
		}
	} else {
		var z3 = decodeState.acc & 16777215;
		decodeState.acc = decodeState.acc >>> 24;
		decodeState.validBits -= 24;
		tmp1 = z3;
	}
	r.begin = tmp1;
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 24) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 24)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z4 = decodeState.acc & 16777215;
			decodeState.acc = decodeState.acc >>> 24;
			decodeState.validBits -= 24;
			tmp2 = z4;
		}
	} else {
		var z5 = decodeState.acc & 16777215;
		decodeState.acc = decodeState.acc >>> 24;
		decodeState.validBits -= 24;
		tmp2 = z5;
	}
	r.end = tmp2;
	var tmp3;
	if(decodeState.validBits < 0) {
		tmp3 = 0;
	} else if(decodeState.validBits < 24) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 24)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else {
			var z6 = decodeState.acc & 16777215;
			decodeState.acc = decodeState.acc >>> 24;
			decodeState.validBits -= 24;
			tmp3 = z6;
		}
	} else {
		var z7 = decodeState.acc & 16777215;
		decodeState.acc = decodeState.acc >>> 24;
		decodeState.validBits -= 24;
		tmp3 = z7;
	}
	r.partSize = tmp3 + 1;
	var classifications;
	if(decodeState.validBits < 0) {
		classifications = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			classifications = 0;
		} else {
			var z8 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			classifications = z8;
		}
	} else {
		var z9 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		classifications = z9;
	}
	var classifications1 = r.classifications = classifications + 1;
	var tmp4;
	if(decodeState.validBits < 0) {
		tmp4 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp4 = 0;
		} else {
			var z10 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp4 = z10;
		}
	} else {
		var z11 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp4 = z11;
	}
	r.classbook = tmp4;
	var _g1 = 0;
	var _g = r.classifications;
	while(_g1 < _g) {
		var j = _g1++;
		var highBits = 0;
		var lowBits;
		if(decodeState.validBits < 0) {
			lowBits = 0;
		} else if(decodeState.validBits < 3) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 3)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				lowBits = 0;
			} else {
				var z12 = decodeState.acc & 7;
				decodeState.acc = decodeState.acc >>> 3;
				decodeState.validBits -= 3;
				lowBits = z12;
			}
		} else {
			var z13 = decodeState.acc & 7;
			decodeState.acc = decodeState.acc >>> 3;
			decodeState.validBits -= 3;
			lowBits = z13;
		}
		var tmp5;
		if(decodeState.validBits < 0) {
			tmp5 = 0;
		} else if(decodeState.validBits < 1) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 1)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp5 = 0;
			} else {
				var z14 = decodeState.acc & 1;
				decodeState.acc = decodeState.acc >>> 1;
				decodeState.validBits -= 1;
				tmp5 = z14;
			}
		} else {
			var z15 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp5 = z15;
		}
		if(tmp5 != 0) {
			if(decodeState.validBits < 0) {
				highBits = 0;
			} else if(decodeState.validBits < 5) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 5)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					highBits = 0;
				} else {
					var z16 = decodeState.acc & 31;
					decodeState.acc = decodeState.acc >>> 5;
					decodeState.validBits -= 5;
					highBits = z16;
				}
			} else {
				var z17 = decodeState.acc & 31;
				decodeState.acc = decodeState.acc >>> 5;
				decodeState.validBits -= 5;
				highBits = z17;
			}
		}
		residueCascade[j] = highBits * 8 + lowBits;
	}
	var length = r.classifications;
	var this2 = new Array(length);
	r.residueBooks = this2;
	var _g11 = 0;
	var _g2 = r.classifications;
	while(_g11 < _g2) {
		var j1 = _g11++;
		var this3 = r.residueBooks;
		var this4 = new Array(8);
		this3[j1] = this4;
		var _g21 = 0;
		while(_g21 < 8) {
			var k = _g21++;
			if((residueCascade[j1] & 1 << k) != 0) {
				var this5 = r.residueBooks[j1];
				var val;
				if(decodeState.validBits < 0) {
					val = 0;
				} else if(decodeState.validBits < 8) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 8)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						val = 0;
					} else {
						var z18 = decodeState.acc & 255;
						decodeState.acc = decodeState.acc >>> 8;
						decodeState.validBits -= 8;
						val = z18;
					}
				} else {
					var z19 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val = z19;
				}
				this5[k] = val;
				if(r.residueBooks[j1][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
				}
			} else {
				r.residueBooks[j1][k] = -1;
			}
		}
	}
	var el = codebooks[r.classbook].entries;
	var classwords = codebooks[r.classbook].dimensions;
	var this6 = new Array(el);
	r.classdata = this6;
	var _g12 = 0;
	var _g3 = el;
	while(_g12 < _g3) {
		var j2 = _g12++;
		var temp = j2;
		var k1 = classwords;
		var this7 = r.classdata;
		var this8 = new Array(classwords);
		var cd = this7[j2] = this8;
		while(--k1 >= 0) {
			cd[k1] = temp % classifications1;
			temp = temp / classifications1 | 0;
		}
	}
	return r;
};
kha_audio2_ogg_vorbis_data_Residue.prototype = {
	decode: function(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		var codebooks = header.codebooks;
		var classwords = codebooks[this.classbook].dimensions;
		var nRead = this.end - this.begin;
		var partSize = this.partSize;
		var partRead = _$UInt_UInt_$Impl_$.toFloat(nRead) / _$UInt_UInt_$Impl_$.toFloat(partSize) | 0;
		var length = header.channel * partRead + 1;
		var this1 = new Array(length);
		var classifications = this1;
		var _g1 = 0;
		var _g = ch;
		while(_g1 < _g) {
			var i = _g1++;
			if(!doNotDecode[i]) {
				var buffer = residueBuffers[i];
				var _g3 = 0;
				var _g2 = buffer.length;
				while(_g3 < _g2) {
					var j = _g3++;
					buffer[j] = 0;
				}
			}
		}
		if(this.type == 2 && ch != 1) {
			var _g11 = 0;
			var _g4 = ch;
			while(_g11 < _g4) {
				var j1 = _g11++;
				if(!doNotDecode[j1]) {
					break;
				} else if(j1 == ch - 1) {
					return;
				}
			}
			var _g5 = 0;
			while(_g5 < 8) {
				var pass = _g5++;
				var pcount = 0;
				var classSet = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						var z = this.begin + pcount * partSize;
						var cInter = z & 1;
						var pInter = z >>> 1;
						if(pass == 0) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i1 = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var q = val;
							if(q == -1) {
								return;
							}
							var i2 = classwords;
							while(--i2 >= 0) {
								classifications[i2 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						var _g21 = 0;
						var _g12 = classwords;
						while(_g21 < _g12) {
							var i3 = _g21++;
							if(pcount >= partRead) {
								break;
							}
							var z1 = this.begin + pcount * partSize;
							var c1 = classifications[pcount];
							var b = this.residueBooks[c1][pass];
							if(b >= 0) {
								var book = codebooks[b];
								var result = book.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z1 = z1 + partSize;
								cInter = z1 & 1;
								pInter = z1 >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						var z2 = this.begin + pcount * partSize;
						var cInter1 = 0;
						var pInter1 = z2;
						if(pass == 0) {
							var c2 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i4 = c2.fastHuffman[decodeState.acc & 1023];
							var val1;
							if(i4 >= 0) {
								var l1 = c2.codewordLengths[i4];
								decodeState.acc = decodeState.acc >>> l1;
								decodeState.validBits -= l1;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val1 = -1;
								} else {
									val1 = i4;
								}
							} else {
								val1 = decodeState.decodeScalarRaw(c2);
							}
							if(c2.sparse) {
								val1 = c2.sortedValues[val1];
							}
							var q1 = val1;
							if(q1 == -1) {
								return;
							}
							var i5 = classwords;
							while(--i5 >= 0) {
								classifications[i5 + pcount] = q1 % this.classifications;
								q1 = q1 / this.classifications | 0;
							}
						}
						var _g22 = 0;
						var _g13 = classwords;
						while(_g22 < _g13) {
							var i6 = _g22++;
							if(pcount >= partRead) {
								break;
							}
							var z3 = this.begin + pcount * partSize;
							var b1 = this.residueBooks[classifications[pcount]][pass];
							if(b1 >= 0) {
								var book1 = codebooks[b1];
								var result1 = book1.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter1,pInter1,n,partSize);
								if(result1 == null) {
									return;
								} else {
									cInter1 = result1.cInter;
									pInter1 = result1.pInter;
								}
							} else {
								z3 = z3 + partSize;
								cInter1 = 0;
								pInter1 = z3;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						var z4 = this.begin + pcount * partSize;
						var cInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						var pInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						if(pass == 0) {
							var c3 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i7 = c3.fastHuffman[decodeState.acc & 1023];
							var val2;
							if(i7 >= 0) {
								var l2 = c3.codewordLengths[i7];
								decodeState.acc = decodeState.acc >>> l2;
								decodeState.validBits -= l2;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val2 = -1;
								} else {
									val2 = i7;
								}
							} else {
								val2 = decodeState.decodeScalarRaw(c3);
							}
							if(c3.sparse) {
								val2 = c3.sortedValues[val2];
							}
							var q2 = val2;
							if(q2 == -1) {
								return;
							}
							var i8 = classwords;
							while(--i8 >= 0) {
								classifications[i8 + pcount] = q2 % this.classifications;
								q2 = q2 / this.classifications | 0;
							}
						}
						var _g23 = 0;
						var _g14 = classwords;
						while(_g23 < _g14) {
							var i9 = _g23++;
							if(pcount >= partRead) {
								break;
							}
							var z5 = this.begin + pcount * partSize;
							var b2 = this.residueBooks[classifications[pcount]][pass];
							if(b2 >= 0) {
								var book2 = codebooks[b2];
								var result2 = book2.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter2,pInter2,n,partSize);
								if(result2 == null) {
									return;
								} else {
									cInter2 = result2.cInter;
									pInter2 = result2.pInter;
								}
							} else {
								z5 = z5 + partSize;
								cInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
								pInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		var _g6 = 0;
		while(_g6 < 8) {
			var pass1 = _g6++;
			var pcount1 = 0;
			var classSet1 = 0;
			while(pcount1 < partRead) {
				if(pass1 == 0) {
					var _g24 = 0;
					var _g15 = ch;
					while(_g24 < _g15) {
						var j2 = _g24++;
						if(!doNotDecode[j2]) {
							var c4 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i10 = c4.fastHuffman[decodeState.acc & 1023];
							var val3;
							if(i10 >= 0) {
								var l3 = c4.codewordLengths[i10];
								decodeState.acc = decodeState.acc >>> l3;
								decodeState.validBits -= l3;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val3 = -1;
								} else {
									val3 = i10;
								}
							} else {
								val3 = decodeState.decodeScalarRaw(c4);
							}
							if(c4.sparse) {
								val3 = c4.sortedValues[val3];
							}
							var temp = val3;
							if(temp == -1) {
								return;
							}
							var i11 = classwords;
							while(--i11 >= 0) {
								classifications[j2 * partRead + i11 + pcount1] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				var _g25 = 0;
				var _g16 = classwords;
				while(_g25 < _g16) {
					var i12 = _g25++;
					if(pcount1 >= partRead) {
						break;
					}
					var _g41 = 0;
					var _g31 = ch;
					while(_g41 < _g31) {
						var j3 = _g41++;
						if(!doNotDecode[j3]) {
							var c5 = classifications[j3 * partRead + pcount1];
							var b3 = this.residueBooks[c5][pass1];
							if(b3 >= 0) {
								var target = residueBuffers[j3];
								var offset = this.begin + pcount1 * partSize;
								var n1 = partSize;
								var book3 = codebooks[b3];
								if(!book3.residueDecode(decodeState,target,offset,n1,this.type)) {
									return;
								}
							}
						}
					}
					++pcount1;
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Residue
};
var kha_graphics1_Graphics = function() { };
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = true;
var kha_graphics2_Graphics = function() {
	this.transformations = [];
	this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
	this.opacities = [];
	this.opacities.push(1);
	this.myFontSize = 12;
	this.myFontGlyphs = [];
	var _g = 32;
	while(_g < 256) {
		var i = _g++;
		this.myFontGlyphs.push(i);
	}
	this.pipe = null;
};
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = true;
kha_graphics2_Graphics.prototype = {
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	,end: function() {
	}
	,fillRect: function(x,y,width,height) {
	}
	,set_color: function(color) {
		return -16777216;
	}
	,get_fontSize: function() {
		return this.myFontSize;
	}
	,get_opacity: function() {
		return this.opacities[this.opacities.length - 1];
	}
	,__class__: kha_graphics2_Graphics
	,__properties__: {get_opacity:"get_opacity",get_fontSize:"get_fontSize",set_color:"set_color"}
};
var kha_graphics2_Graphics1 = function(canvas) {
	this.canvas = canvas;
};
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = true;
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
kha_graphics2_Graphics1.prototype = {
	__class__: kha_graphics2_Graphics1
};
var kha_graphics2_ImageScaleQuality = $hxClasses["kha.graphics2.ImageScaleQuality"] = { __ename__ : true, __constructs__ : ["Low","High"] };
kha_graphics2_ImageScaleQuality.Low = ["Low",0];
kha_graphics2_ImageScaleQuality.Low.toString = $estr;
kha_graphics2_ImageScaleQuality.Low.__enum__ = kha_graphics2_ImageScaleQuality;
kha_graphics2_ImageScaleQuality.High = ["High",1];
kha_graphics2_ImageScaleQuality.High.toString = $estr;
kha_graphics2_ImageScaleQuality.High.__enum__ = kha_graphics2_ImageScaleQuality;
var kha_graphics2_truetype_VectorOfIntPointer = function() {
};
$hxClasses["kha.graphics2.truetype.VectorOfIntPointer"] = kha_graphics2_truetype_VectorOfIntPointer;
kha_graphics2_truetype_VectorOfIntPointer.__name__ = true;
kha_graphics2_truetype_VectorOfIntPointer.prototype = {
	__class__: kha_graphics2_truetype_VectorOfIntPointer
};
var kha_graphics2_truetype_Stbtt_$temp_$rect = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_rect"] = kha_graphics2_truetype_Stbtt_$temp_$rect;
kha_graphics2_truetype_Stbtt_$temp_$rect.__name__ = true;
kha_graphics2_truetype_Stbtt_$temp_$rect.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$rect
};
var kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.__name__ = true;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_font_v_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.__name__ = true;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics
};
var kha_graphics2_truetype_Stbtt_$bakedchar = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_bakedchar"] = kha_graphics2_truetype_Stbtt_$bakedchar;
kha_graphics2_truetype_Stbtt_$bakedchar.__name__ = true;
kha_graphics2_truetype_Stbtt_$bakedchar.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$bakedchar
};
var kha_graphics2_truetype_Stbtt_$fontinfo = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_fontinfo"] = kha_graphics2_truetype_Stbtt_$fontinfo;
kha_graphics2_truetype_Stbtt_$fontinfo.__name__ = true;
kha_graphics2_truetype_Stbtt_$fontinfo.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$fontinfo
};
var kha_graphics2_truetype_Stbtt_$vertex = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_vertex"] = kha_graphics2_truetype_Stbtt_$vertex;
kha_graphics2_truetype_Stbtt_$vertex.__name__ = true;
kha_graphics2_truetype_Stbtt_$vertex.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$vertex
};
var kha_graphics2_truetype_Stbtt_$_$bitmap = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__bitmap"] = kha_graphics2_truetype_Stbtt_$_$bitmap;
kha_graphics2_truetype_Stbtt_$_$bitmap.__name__ = true;
kha_graphics2_truetype_Stbtt_$_$bitmap.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$bitmap
};
var kha_graphics2_truetype_Stbtt_$_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__edge"] = kha_graphics2_truetype_Stbtt_$_$edge;
kha_graphics2_truetype_Stbtt_$_$edge.__name__ = true;
kha_graphics2_truetype_Stbtt_$_$edge.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$edge
};
var kha_graphics2_truetype_Stbtt_$_$active_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__active_edge"] = kha_graphics2_truetype_Stbtt_$_$active_$edge;
kha_graphics2_truetype_Stbtt_$_$active_$edge.__name__ = true;
kha_graphics2_truetype_Stbtt_$_$active_$edge.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$active_$edge
};
var kha_graphics2_truetype_Stbtt_$_$point = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__point"] = kha_graphics2_truetype_Stbtt_$_$point;
kha_graphics2_truetype_Stbtt_$_$point.__name__ = true;
kha_graphics2_truetype_Stbtt_$_$point.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$point
};
var kha_graphics2_truetype_StbTruetype = function() { };
$hxClasses["kha.graphics2.truetype.StbTruetype"] = kha_graphics2_truetype_StbTruetype;
kha_graphics2_truetype_StbTruetype.__name__ = true;
kha_graphics2_truetype_StbTruetype.stbtt__find_table = function(data,fontstart,tag) {
	var pos = fontstart + 4;
	var ch1 = data.readU8(pos);
	var ch2 = data.readU8(pos + 1);
	var num_tables = ch2 | ch1 << 8;
	var tabledir = fontstart + 12;
	var _g1 = 0;
	var _g = num_tables;
	while(_g1 < _g) {
		var i = _g1++;
		var loc = tabledir + 16 * i;
		var c0 = HxOverrides.cca(tag,0);
		var c1 = HxOverrides.cca(tag,1);
		var c2 = HxOverrides.cca(tag,2);
		var c3 = HxOverrides.cca(tag,3);
		if(data.readU8(loc) == c0 && data.readU8(loc + 1) == c1 && data.readU8(loc + 2) == c2 && data.readU8(loc + 3) == c3) {
			var pos1 = loc + 8;
			var ch11 = data.readU8(pos1);
			var ch21 = data.readU8(pos1 + 1);
			var ch3 = data.readU8(pos1 + 2);
			var ch4 = data.readU8(pos1 + 3);
			return ch4 | ch3 << 8 | ch21 << 16 | ch11 << 24;
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_InitFont = function(info,data,fontstart) {
	var cmap;
	var t;
	var numTables;
	info.data = data;
	info.fontstart = fontstart;
	cmap = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"cmap");
	info.loca = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"loca");
	info.head = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"head");
	info.glyf = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"glyf");
	info.hhea = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hhea");
	info.hmtx = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hmtx");
	info.kern = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"kern");
	if(cmap == 0 || info.loca == 0 || info.head == 0 || info.glyf == 0 || info.hhea == 0 || info.hmtx == 0) {
		return false;
	}
	t = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"maxp");
	if(t != 0) {
		var pos = t + 4;
		var ch1 = data.readU8(pos);
		var ch2 = data.readU8(pos + 1);
		info.numGlyphs = ch2 | ch1 << 8;
	} else {
		info.numGlyphs = 65535;
	}
	var pos1 = cmap + 2;
	var ch11 = data.readU8(pos1);
	var ch21 = data.readU8(pos1 + 1);
	numTables = ch21 | ch11 << 8;
	info.index_map = 0;
	var _g1 = 0;
	var _g = numTables;
	while(_g1 < _g) {
		var i = _g1++;
		var encoding_record = cmap + 4 + 8 * i;
		var ch12 = data.readU8(encoding_record);
		var ch22 = data.readU8(encoding_record + 1);
		var _g2 = ch22 | ch12 << 8;
		switch(_g2) {
		case 0:
			var pos2 = encoding_record + 4;
			var ch13 = data.readU8(pos2);
			var ch23 = data.readU8(pos2 + 1);
			var ch3 = data.readU8(pos2 + 2);
			var ch4 = data.readU8(pos2 + 3);
			info.index_map = cmap + (ch4 | ch3 << 8 | ch23 << 16 | ch13 << 24);
			break;
		case 3:
			var pos3 = encoding_record + 2;
			var ch14 = data.readU8(pos3);
			var ch24 = data.readU8(pos3 + 1);
			var _g21 = ch24 | ch14 << 8;
			switch(_g21) {
			case 1:case 10:
				var pos4 = encoding_record + 4;
				var ch15 = data.readU8(pos4);
				var ch25 = data.readU8(pos4 + 1);
				var ch31 = data.readU8(pos4 + 2);
				var ch41 = data.readU8(pos4 + 3);
				info.index_map = cmap + (ch41 | ch31 << 8 | ch25 << 16 | ch15 << 24);
				break;
			}
			break;
		}
	}
	if(info.index_map == 0) {
		return false;
	}
	var pos5 = info.head + 50;
	var ch16 = data.readU8(pos5);
	var ch26 = data.readU8(pos5 + 1);
	info.indexToLocFormat = ch26 | ch16 << 8;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex = function(info,unicode_codepoint) {
	var data = info.data;
	var index_map = info.index_map;
	var ch1 = data.readU8(index_map);
	var ch2 = data.readU8(index_map + 1);
	var format = ch2 | ch1 << 8;
	if(format == 0) {
		var pos = index_map + 2;
		var ch11 = data.readU8(pos);
		var ch21 = data.readU8(pos + 1);
		var bytes = ch21 | ch11 << 8;
		if(unicode_codepoint < bytes - 6) {
			return data.readU8(index_map + 6 + unicode_codepoint);
		}
		return 0;
	} else if(format == 6) {
		var pos1 = index_map + 6;
		var ch12 = data.readU8(pos1);
		var ch22 = data.readU8(pos1 + 1);
		var first = ch22 | ch12 << 8;
		var pos2 = index_map + 8;
		var ch13 = data.readU8(pos2);
		var ch23 = data.readU8(pos2 + 1);
		var count = ch23 | ch13 << 8;
		if(unicode_codepoint >= first && unicode_codepoint < first + count) {
			var pos3 = index_map + 10 + (unicode_codepoint - first) * 2;
			var ch14 = data.readU8(pos3);
			var ch24 = data.readU8(pos3 + 1);
			return ch24 | ch14 << 8;
		}
		return 0;
	} else if(format == 2) {
		throw new js__$Boot_HaxeError("Error");
	} else if(format == 4) {
		var pos4 = index_map + 6;
		var ch15 = data.readU8(pos4);
		var ch25 = data.readU8(pos4 + 1);
		var segcount = (ch25 | ch15 << 8) >> 1;
		var pos5 = index_map + 8;
		var ch16 = data.readU8(pos5);
		var ch26 = data.readU8(pos5 + 1);
		var searchRange = (ch26 | ch16 << 8) >> 1;
		var pos6 = index_map + 10;
		var ch17 = data.readU8(pos6);
		var ch27 = data.readU8(pos6 + 1);
		var entrySelector = ch27 | ch17 << 8;
		var pos7 = index_map + 12;
		var ch18 = data.readU8(pos7);
		var ch28 = data.readU8(pos7 + 1);
		var rangeShift = (ch28 | ch18 << 8) >> 1;
		var endCount = index_map + 14;
		var search = endCount;
		if(unicode_codepoint > 65535) {
			return 0;
		}
		var pos8 = search + rangeShift * 2;
		var ch19 = data.readU8(pos8);
		var ch29 = data.readU8(pos8 + 1);
		if(unicode_codepoint >= (ch29 | ch19 << 8)) {
			search += rangeShift * 2;
		}
		search -= 2;
		while(entrySelector != 0) {
			var end;
			searchRange >>= 1;
			var pos9 = search + searchRange * 2;
			var ch110 = data.readU8(pos9);
			var ch210 = data.readU8(pos9 + 1);
			end = ch210 | ch110 << 8;
			if(unicode_codepoint > end) {
				search += searchRange * 2;
			}
			--entrySelector;
		}
		search += 2;
		var offset;
		var start;
		var item = search - endCount >> 1;
		var pos10 = endCount + 2 * item;
		var ch111 = data.readU8(pos10);
		var ch211 = data.readU8(pos10 + 1);
		if(unicode_codepoint > (ch211 | ch111 << 8)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var pos11 = index_map + 14 + segcount * 2 + 2 + 2 * item;
		var ch112 = data.readU8(pos11);
		var ch212 = data.readU8(pos11 + 1);
		start = ch212 | ch112 << 8;
		if(unicode_codepoint < start) {
			return 0;
		}
		var pos12 = index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch113 = data.readU8(pos12);
		var ch213 = data.readU8(pos12 + 1);
		offset = ch213 | ch113 << 8;
		if(offset == 0) {
			var pos13 = index_map + 14 + segcount * 4 + 2 + 2 * item;
			var ch114 = data.readU8(pos13);
			var ch214 = data.readU8(pos13 + 1);
			var n = ch214 | ch114 << 8;
			return unicode_codepoint + ((n & 32768) != 0 ? n - 65536 : n);
		}
		var pos14 = offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch115 = data.readU8(pos14);
		var ch215 = data.readU8(pos14 + 1);
		return ch215 | ch115 << 8;
	} else if(format == 12 || format == 13) {
		var pos15 = index_map + 12;
		var ch116 = data.readU8(pos15);
		var ch216 = data.readU8(pos15 + 1);
		var ch3 = data.readU8(pos15 + 2);
		var ch4 = data.readU8(pos15 + 3);
		var ngroups = ch4 | ch3 << 8 | ch216 << 16 | ch116 << 24;
		var low;
		var high;
		low = 0;
		high = ngroups;
		while(low < high) {
			var mid = low + (high - low >> 1);
			var pos16 = index_map + 16 + mid * 12;
			var ch117 = data.readU8(pos16);
			var ch217 = data.readU8(pos16 + 1);
			var ch31 = data.readU8(pos16 + 2);
			var ch41 = data.readU8(pos16 + 3);
			var start_char = ch41 | ch31 << 8 | ch217 << 16 | ch117 << 24;
			var pos17 = index_map + 16 + mid * 12 + 4;
			var ch118 = data.readU8(pos17);
			var ch218 = data.readU8(pos17 + 1);
			var ch32 = data.readU8(pos17 + 2);
			var ch42 = data.readU8(pos17 + 3);
			var end_char = ch42 | ch32 << 8 | ch218 << 16 | ch118 << 24;
			if(unicode_codepoint < start_char) {
				high = mid;
			} else if(unicode_codepoint > end_char) {
				low = mid + 1;
			} else {
				var pos18 = index_map + 16 + mid * 12 + 8;
				var ch119 = data.readU8(pos18);
				var ch219 = data.readU8(pos18 + 1);
				var ch33 = data.readU8(pos18 + 2);
				var ch43 = data.readU8(pos18 + 3);
				var start_glyph = ch43 | ch33 << 8 | ch219 << 16 | ch119 << 24;
				if(format == 12) {
					return start_glyph + unicode_codepoint - start_char;
				} else {
					return start_glyph;
				}
			}
		}
		return 0;
	}
	throw new js__$Boot_HaxeError("Error");
};
kha_graphics2_truetype_StbTruetype.stbtt_setvertex = function(v,type,x,y,cx,cy) {
	v.type = type;
	v.x = x;
	v.y = y;
	v.cx = cx;
	v.cy = cy;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset = function(info,glyph_index) {
	var g1;
	var g2;
	if(glyph_index >= info.numGlyphs) {
		return -1;
	}
	if(info.indexToLocFormat >= 2) {
		return -1;
	}
	if(info.indexToLocFormat == 0) {
		var info1 = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 2;
		var ch1 = p.readU8(pos);
		var ch2 = p.readU8(pos + 1);
		g1 = info1 + (ch2 | ch1 << 8) * 2;
		var info2 = info.glyf;
		var p1 = info.data;
		var pos1 = info.loca + glyph_index * 2 + 2;
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		g2 = info2 + (ch21 | ch11 << 8) * 2;
	} else {
		var info3 = info.glyf;
		var p2 = info.data;
		var pos2 = info.loca + glyph_index * 4;
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var ch3 = p2.readU8(pos2 + 2);
		var ch4 = p2.readU8(pos2 + 3);
		g1 = info3 + (ch4 | ch3 << 8 | ch22 << 16 | ch12 << 24);
		var info4 = info.glyf;
		var p3 = info.data;
		var pos3 = info.loca + glyph_index * 4 + 4;
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var ch31 = p3.readU8(pos3 + 2);
		var ch41 = p3.readU8(pos3 + 3);
		g2 = info4 + (ch41 | ch31 << 8 | ch23 << 16 | ch13 << 24);
	}
	if(g1 == g2) {
		return -1;
	} else {
		return g1;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox = function(info,glyph_index,rect) {
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return false;
	}
	var p = info.data;
	var pos = g + 2;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = g + 4;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = g + 6;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	var p3 = info.data;
	var pos3 = g + 8;
	var ch13 = p3.readU8(pos3);
	var ch23 = p3.readU8(pos3 + 1);
	var n3 = ch23 | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt__close_shape = function(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy) {
	if(start_off) {
		if(was_off) {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + scx >> 1,cy + scy >> 1,cx,cy);
		}
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,scx,scy);
	} else if(was_off) {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,cx,cy);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,sx,sy,0,0);
	}
	return num_vertices;
};
kha_graphics2_truetype_StbTruetype.copyVertices = function(from,to,offset,count) {
	var _g1 = 0;
	var _g = count;
	while(_g1 < _g) {
		var i = _g1++;
		to[offset + i] = from[i];
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape = function(info,glyph_index) {
	var numberOfContours;
	var endPtsOfContours;
	var data = info.data;
	var vertices = null;
	var num_vertices = 0;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return null;
	}
	var ch1 = data.readU8(g);
	var ch2 = data.readU8(g + 1);
	var n = ch2 | ch1 << 8;
	if((n & 32768) != 0) {
		numberOfContours = n - 65536;
	} else {
		numberOfContours = n;
	}
	if(numberOfContours > 0) {
		var flags = 0;
		var flagcount;
		var ins;
		var j = 0;
		var m;
		var n1;
		var next_move = 0;
		var off = 0;
		var was_off = false;
		var start_off = false;
		var x;
		var y;
		var cx;
		var cy;
		var sx;
		var sy;
		var scx;
		var scy;
		var points;
		var pointsIndex = 0;
		endPtsOfContours = data.sub(g + 10,data.get_length() - (g + 10));
		var pos = g + 10 + numberOfContours * 2;
		var ch11 = data.readU8(pos);
		var ch21 = data.readU8(pos + 1);
		ins = ch21 | ch11 << 8;
		points = data.sub(g + 10 + numberOfContours * 2 + 2 + ins,data.get_length() - (g + 10 + numberOfContours * 2 + 2 + ins));
		var pos1 = numberOfContours * 2 - 2;
		var ch12 = endPtsOfContours.readU8(pos1);
		var ch22 = endPtsOfContours.readU8(pos1 + 1);
		n1 = 1 + (ch22 | ch12 << 8);
		m = n1 + 2 * numberOfContours;
		var this1 = new Array(m);
		vertices = this1;
		if(vertices == null) {
			return null;
		} else {
			var _g1 = 0;
			var _g = vertices.length;
			while(_g1 < _g) {
				var i = _g1++;
				vertices[i] = new kha_graphics2_truetype_Stbtt_$vertex();
			}
		}
		next_move = 0;
		flagcount = 0;
		off = m - n1;
		var _g11 = 0;
		var _g2 = n1;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(flagcount == 0) {
				flags = points.readU8(pointsIndex++);
				if((flags & 8) != 0) {
					flagcount = points.readU8(pointsIndex++);
				}
			} else {
				--flagcount;
			}
			vertices[off + i1].type = flags;
		}
		x = 0;
		var _g12 = 0;
		var _g3 = n1;
		while(_g12 < _g3) {
			var i2 = _g12++;
			flags = vertices[off + i2].type;
			if((flags & 2) != 0) {
				var dx = points.readU8(pointsIndex++);
				x += (flags & 16) != 0 ? dx : -dx;
			} else if((flags & 16) == 0) {
				var value;
				var ch13 = points.readU8(pointsIndex);
				var ch23 = points.readU8(pointsIndex + 1);
				var n2 = ch23 | ch13 << 8;
				if((n2 & 32768) != 0) {
					value = n2 - 65536;
				} else {
					value = n2;
				}
				x += value;
				pointsIndex += 2;
			}
			vertices[off + i2].x = x;
		}
		y = 0;
		var _g13 = 0;
		var _g4 = n1;
		while(_g13 < _g4) {
			var i3 = _g13++;
			flags = vertices[off + i3].type;
			if((flags & 4) != 0) {
				var dy = points.readU8(pointsIndex++);
				y += (flags & 32) != 0 ? dy : -dy;
			} else if((flags & 32) == 0) {
				var value1;
				var ch14 = points.readU8(pointsIndex);
				var ch24 = points.readU8(pointsIndex + 1);
				var n3 = ch24 | ch14 << 8;
				if((n3 & 32768) != 0) {
					value1 = n3 - 65536;
				} else {
					value1 = n3;
				}
				y += value1;
				pointsIndex += 2;
			}
			vertices[off + i3].y = y;
		}
		num_vertices = 0;
		scy = 0;
		scx = scy;
		cy = scx;
		cx = cy;
		sy = cx;
		sx = sy;
		var i4 = 0;
		while(i4 < n1) {
			flags = vertices[off + i4].type;
			x = vertices[off + i4].x;
			y = vertices[off + i4].y;
			if(next_move == i4) {
				if(i4 != 0) {
					num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
				}
				start_off = (flags & 1) == 0;
				if(start_off) {
					scx = x;
					scy = y;
					if((vertices[off + i4 + 1].type & 1) == 0) {
						sx = x + vertices[off + i4 + 1].x >> 1;
						sy = y + vertices[off + i4 + 1].y >> 1;
					} else {
						sx = vertices[off + i4 + 1].x;
						sy = vertices[off + i4 + 1].y;
						++i4;
					}
				} else {
					sx = x;
					sy = y;
				}
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],1,sx,sy,0,0);
				was_off = false;
				var pos2 = j * 2;
				var ch15 = endPtsOfContours.readU8(pos2);
				var ch25 = endPtsOfContours.readU8(pos2 + 1);
				next_move = 1 + (ch25 | ch15 << 8);
				++j;
			} else if((flags & 1) == 0) {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + x >> 1,cy + y >> 1,cx,cy);
				}
				cx = x;
				cy = y;
				was_off = true;
			} else {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,x,y,cx,cy);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,x,y,0,0);
				}
				was_off = false;
			}
			++i4;
		}
		num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
	} else if(numberOfContours == -1) {
		var more = 1;
		var comp = data.sub(g + 10,data.get_length() - (g + 10));
		var compIndex = 0;
		num_vertices = 0;
		vertices = null;
		while(more != 0) {
			var flags1;
			var gidx;
			var comp_num_verts = 0;
			var i5;
			var comp_verts = null;
			var tmp = null;
			var mtx0 = 1;
			var mtx1 = 0;
			var mtx2 = 0;
			var mtx3 = 1;
			var mtx4 = 0;
			var mtx5 = 0;
			var m1;
			var n4;
			var ch16 = comp.readU8(compIndex);
			var ch26 = comp.readU8(compIndex + 1);
			var n5 = ch26 | ch16 << 8;
			if((n5 & 32768) != 0) {
				flags1 = n5 - 65536;
			} else {
				flags1 = n5;
			}
			compIndex += 2;
			var ch17 = comp.readU8(compIndex);
			var ch27 = comp.readU8(compIndex + 1);
			var n6 = ch27 | ch17 << 8;
			if((n6 & 32768) != 0) {
				gidx = n6 - 65536;
			} else {
				gidx = n6;
			}
			compIndex += 2;
			if((flags1 & 2) != 0) {
				if((flags1 & 1) != 0) {
					var ch18 = comp.readU8(compIndex);
					var ch28 = comp.readU8(compIndex + 1);
					var n7 = ch28 | ch18 << 8;
					if((n7 & 32768) != 0) {
						mtx4 = n7 - 65536;
					} else {
						mtx4 = n7;
					}
					compIndex += 2;
					var ch19 = comp.readU8(compIndex);
					var ch29 = comp.readU8(compIndex + 1);
					var n8 = ch29 | ch19 << 8;
					if((n8 & 32768) != 0) {
						mtx5 = n8 - 65536;
					} else {
						mtx5 = n8;
					}
					compIndex += 2;
				} else {
					var n9 = comp.readU8(compIndex);
					if(n9 >= 128) {
						mtx4 = n9 - 256;
					} else {
						mtx4 = n9;
					}
					++compIndex;
					var n10 = comp.readU8(compIndex);
					if(n10 >= 128) {
						mtx5 = n10 - 256;
					} else {
						mtx5 = n10;
					}
					++compIndex;
				}
			} else {
				throw new js__$Boot_HaxeError("Error");
			}
			if((flags1 & 8) != 0) {
				var ch110 = comp.readU8(compIndex);
				var ch210 = comp.readU8(compIndex + 1);
				var n11 = ch210 | ch110 << 8;
				mtx3 = ((n11 & 32768) != 0 ? n11 - 65536 : n11) / 16384.0;
				mtx0 = mtx3;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
			} else if((flags1 & 64) != 0) {
				var ch111 = comp.readU8(compIndex);
				var ch211 = comp.readU8(compIndex + 1);
				var n12 = ch211 | ch111 << 8;
				mtx0 = ((n12 & 32768) != 0 ? n12 - 65536 : n12) / 16384.0;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
				var ch112 = comp.readU8(compIndex);
				var ch212 = comp.readU8(compIndex + 1);
				var n13 = ch212 | ch112 << 8;
				mtx3 = ((n13 & 32768) != 0 ? n13 - 65536 : n13) / 16384.0;
				compIndex += 2;
			} else if((flags1 & 128) != 0) {
				var ch113 = comp.readU8(compIndex);
				var ch213 = comp.readU8(compIndex + 1);
				var n14 = ch213 | ch113 << 8;
				mtx0 = ((n14 & 32768) != 0 ? n14 - 65536 : n14) / 16384.0;
				compIndex += 2;
				var ch114 = comp.readU8(compIndex);
				var ch214 = comp.readU8(compIndex + 1);
				var n15 = ch214 | ch114 << 8;
				mtx1 = ((n15 & 32768) != 0 ? n15 - 65536 : n15) / 16384.0;
				compIndex += 2;
				var ch115 = comp.readU8(compIndex);
				var ch215 = comp.readU8(compIndex + 1);
				var n16 = ch215 | ch115 << 8;
				mtx2 = ((n16 & 32768) != 0 ? n16 - 65536 : n16) / 16384.0;
				compIndex += 2;
				var ch116 = comp.readU8(compIndex);
				var ch216 = comp.readU8(compIndex + 1);
				var n17 = ch216 | ch116 << 8;
				mtx3 = ((n17 & 32768) != 0 ? n17 - 65536 : n17) / 16384.0;
				compIndex += 2;
			}
			m1 = Math.sqrt(mtx0 * mtx0 + mtx1 * mtx1);
			n4 = Math.sqrt(mtx2 * mtx2 + mtx3 * mtx3);
			comp_verts = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,gidx);
			if(comp_verts == null) {
				comp_num_verts = 0;
			} else {
				comp_num_verts = comp_verts.length;
			}
			if(comp_num_verts > 0) {
				var _g14 = 0;
				var _g5 = comp_num_verts;
				while(_g14 < _g5) {
					var i6 = _g14++;
					var v = comp_verts[i6];
					var x1;
					var y1;
					x1 = v.x;
					y1 = v.y;
					v.x = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.y = n4 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
					x1 = v.cx;
					y1 = v.cy;
					v.cx = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.cy = n4 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
				}
				var this2 = new Array(num_vertices + comp_num_verts);
				tmp = this2;
				if(tmp == null) {
					return null;
				}
				if(num_vertices > 0) {
					kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
				}
				kha_graphics2_truetype_StbTruetype.copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
				vertices = tmp;
				num_vertices += comp_num_verts;
			}
			more = flags1 & 32;
		}
	} else if(numberOfContours < 0) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(vertices == null) {
		return null;
	}
	if(vertices.length < num_vertices) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(num_vertices < vertices.length) {
		var this3 = new Array(num_vertices);
		var tmp1 = this3;
		kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp1,0,num_vertices);
		return tmp1;
	} else {
		return vertices;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics = function(info,glyph_index) {
	var p = info.data;
	var pos = info.hhea + 34;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var numOfLongHorMetrics = ch2 | ch1 << 8;
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics();
	if(glyph_index < numOfLongHorMetrics) {
		var p1 = info.data;
		var pos1 = info.hmtx + 4 * glyph_index;
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		var n = ch21 | ch11 << 8;
		metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
		var p2 = info.data;
		var pos2 = info.hmtx + 4 * glyph_index + 2;
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var n1 = ch22 | ch12 << 8;
		metrics.leftSideBearing = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	} else {
		var p3 = info.data;
		var pos3 = info.hmtx + 4 * (numOfLongHorMetrics - 1);
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var n2 = ch23 | ch13 << 8;
		metrics.advanceWidth = (n2 & 32768) != 0 ? n2 - 65536 : n2;
		var p4 = info.data;
		var pos4 = info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics);
		var ch14 = p4.readU8(pos4);
		var ch24 = p4.readU8(pos4 + 1);
		var n3 = ch24 | ch14 << 8;
		metrics.leftSideBearing = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	}
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics = function(info) {
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics();
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	metrics.ascent = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	metrics.descent = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = info.hhea + 8;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	metrics.lineGap = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight = function(info,height) {
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	var fheight = ((n & 32768) != 0 ? n - 65536 : n) - ((n1 & 32768) != 0 ? n1 - 65536 : n1);
	return height / fheight;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel = function(font,glyph,scale_x,scale_y,shift_x,shift_y) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(font,glyph,rect)) {
		rect.x0 = 0;
		rect.y0 = 0;
		rect.x1 = 0;
		rect.y1 = 0;
	} else {
		var x0 = rect.x0;
		var x1 = rect.x1;
		var y0 = rect.y0;
		var y1 = rect.y1;
		rect.x0 = Math.floor(x0 * scale_x + shift_x);
		rect.y0 = Math.floor(-y1 * scale_y + shift_y);
		rect.x1 = Math.ceil(x1 * scale_x + shift_x);
		rect.y1 = Math.ceil(-y0 * scale_y + shift_y);
	}
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox = function(font,glyph,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt__new_active = function(e,eIndex,off_x,start_point) {
	var z = new kha_graphics2_truetype_Stbtt_$_$active_$edge();
	var dxdy = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);
	if(z == null) {
		return z;
	}
	z.fdx = dxdy;
	z.fdy = dxdy != 0.0 ? 1.0 / dxdy : 0.0;
	z.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);
	z.fx -= off_x;
	z.direction = e[eIndex].invert ? 1.0 : -1.0;
	z.sy = e[eIndex].y0;
	z.ey = e[eIndex].y1;
	z.next = null;
	return z;
};
kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge = function(scanline,scanlineIndex,x,e,x0,y0,x1,y1) {
	if(y0 == y1) {
		return;
	}
	if(!(y0 < y1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(!(e.sy <= e.ey)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(y0 > e.ey) {
		return;
	}
	if(y1 < e.sy) {
		return;
	}
	if(y0 < e.sy) {
		x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);
		y0 = e.sy;
	}
	if(y1 > e.ey) {
		x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);
		y1 = e.ey;
	}
	if(x0 == x) {
		if(!(x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 == x + 1) {
		if(!(x1 >= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 <= x) {
		if(!(x1 <= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 >= x + 1) {
		if(!(x1 >= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(!(x1 >= x && x1 <= x + 1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(x0 <= x && x1 <= x) {
		var _g = scanlineIndex + x;
		var _g1 = scanline;
		_g1[_g] = _g1[_g] + e.direction * (y1 - y0);
	} else if(!(x0 >= x + 1 && x1 >= x + 1)) {
		if(!(x0 >= x && x0 <= x + 1 && x1 >= x && x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var _g2 = scanlineIndex + x;
		var _g11 = scanline;
		_g11[_g2] = _g11[_g2] + e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new = function(scanline,scanline_fill,scanline_fillIndex,len,e,y_top) {
	var y_bottom = y_top + 1;
	while(e != null) {
		if(!(e.ey >= y_top)) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(e.fdx == 0) {
			var x0 = e.fx;
			if(x0 < len) {
				if(x0 >= 0) {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x0 | 0,e,x0,y_top,x0,y_bottom);
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,x0 + 1 | 0,e,x0,y_top,x0,y_bottom);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,0,e,x0,y_top,x0,y_bottom);
				}
			}
		} else {
			var x01 = e.fx;
			var dx = e.fdx;
			var xb = x01 + dx;
			var x_top;
			var x_bottom;
			var sy0;
			var sy1;
			var dy = e.fdy;
			if(!(e.sy <= y_bottom && e.ey >= y_top)) {
				throw new js__$Boot_HaxeError("Error");
			}
			if(e.sy > y_top) {
				x_top = x01 + dx * (e.sy - y_top);
				sy0 = e.sy;
			} else {
				x_top = x01;
				sy0 = y_top;
			}
			if(e.ey < y_bottom) {
				x_bottom = x01 + dx * (e.ey - y_top);
				sy1 = e.ey;
			} else {
				x_bottom = xb;
				sy1 = y_bottom;
			}
			if(x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {
				if((x_top | 0) == (x_bottom | 0)) {
					var height;
					var x = x_top | 0;
					height = sy1 - sy0;
					if(!(x >= 0 && x < len)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g = x;
					var _g1 = scanline;
					_g1[_g] = _g1[_g] + e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;
					var _g2 = scanline_fillIndex + x;
					var _g11 = scanline_fill;
					_g11[_g2] = _g11[_g2] + e.direction * height;
				} else {
					var x1;
					var x11;
					var x2;
					var y_crossing;
					var step;
					var sign;
					var area;
					if(x_top > x_bottom) {
						var t;
						sy0 = y_bottom - (sy0 - y_top);
						sy1 = y_bottom - (sy1 - y_top);
						t = sy0;
						sy0 = sy1;
						sy1 = t;
						t = x_bottom;
						x_bottom = x_top;
						x_top = t;
						dx = -dx;
						dy = -dy;
						t = x01;
						x01 = xb;
						xb = t;
					}
					x11 = x_top | 0;
					x2 = x_bottom | 0;
					y_crossing = (x11 + 1 - x01) * dy + y_top;
					sign = e.direction;
					area = sign * (y_crossing - sy0);
					var _g3 = x11;
					var _g12 = scanline;
					_g12[_g3] = _g12[_g3] + area * (1 - (x_top - x11 + (x11 + 1 - x11)) / 2);
					step = sign * dy;
					var _g13 = x11 + 1;
					var _g4 = x2;
					while(_g13 < _g4) {
						var x3 = _g13++;
						var _g21 = x3;
						var _g31 = scanline;
						_g31[_g21] = _g31[_g21] + (area + step / 2);
						area += step;
					}
					y_crossing += dy * (x2 - (x11 + 1));
					if(!(Math.abs(area) <= 1.01)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g5 = x2;
					var _g14 = scanline;
					_g14[_g5] = _g14[_g5] + (area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing));
					var _g6 = scanline_fillIndex + x2;
					var _g15 = scanline_fill;
					_g15[_g6] = _g15[_g6] + sign * (sy1 - sy0);
				}
			} else {
				var _g16 = 0;
				var _g7 = len;
				while(_g16 < _g7) {
					var x4 = _g16++;
					var y0 = y_top;
					var x12 = x4;
					var x21 = x4 + 1;
					var x31 = xb;
					var y3 = y_bottom;
					var y1;
					var y2;
					y1 = (x4 - x01) / dx + y_top;
					y2 = (x4 + 1 - x01) / dx + y_top;
					if(x01 < x12 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x12 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x12 && x31 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x31 < x12 && x01 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x21 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x21 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x31,y3);
					}
				}
			}
		}
		e = e.next;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges = function(result,e,n,vsubsample,off_x,off_y) {
	var active = null;
	var y;
	var j = 0;
	var i;
	var scanline;
	var scanline2;
	var scanline2Index = 0;
	var eIndex = 0;
	if(result.w > 64) {
		var length = result.w * 2 + 1;
		var this1 = new Array(length);
		scanline = this1;
	} else {
		var this2 = new Array(129);
		scanline = this2;
	}
	scanline2 = scanline;
	scanline2Index = result.w;
	y = off_y;
	e[eIndex + n].y0 = off_y + result.h + 1;
	while(j < result.h) {
		var scan_y_top = y + 0.0;
		var scan_y_bottom = y + 1.0;
		var step_value;
		var step_parent;
		step_value = active;
		step_parent = null;
		var _g1 = 0;
		var _g = result.w;
		while(_g1 < _g) {
			var i1 = _g1++;
			scanline[i1] = 0;
		}
		var _g11 = 0;
		var _g2 = result.w + 1;
		while(_g11 < _g2) {
			var i2 = _g11++;
			scanline2[scanline2Index + i2] = 0;
		}
		while(step_value != null) {
			var z = step_value;
			if(z.ey <= scan_y_top) {
				if(step_parent == null) {
					active = z.next;
					step_value = z.next;
				} else {
					step_parent.next = z.next;
					step_value = z.next;
				}
				if(z.direction == 0) {
					throw new js__$Boot_HaxeError("Error");
				}
				z.direction = 0;
			} else {
				step_parent = step_value;
				step_value = step_value.next;
			}
		}
		while(e[eIndex].y0 <= scan_y_bottom) {
			if(e[eIndex].y0 != e[eIndex].y1) {
				var z1 = kha_graphics2_truetype_StbTruetype.stbtt__new_active(e,eIndex,off_x,scan_y_top);
				if(!(z1.ey >= scan_y_top)) {
					throw new js__$Boot_HaxeError("Error");
				}
				z1.next = active;
				active = z1;
			}
			++eIndex;
		}
		if(active != null) {
			kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new(scanline,scanline2,scanline2Index + 1,result.w,active,scan_y_top);
		}
		var sum = 0;
		var _g12 = 0;
		var _g3 = result.w;
		while(_g12 < _g3) {
			var i3 = _g12++;
			var k;
			var m;
			sum += scanline2[scanline2Index + i3];
			k = scanline[i3] + sum;
			k = Math.abs(k) * 255.0 + 0.5;
			m = k | 0;
			if(m > 255) {
				m = 255;
			}
			result.pixels.writeU8(result.pixels_offset + j * result.stride + i3,m);
		}
		step_parent = null;
		step_value = active;
		while(step_value != null) {
			var z2 = step_value;
			z2.fx += z2.fdx;
			step_parent = step_value;
			step_value = step_value.next;
		}
		++y;
		++j;
	}
};
kha_graphics2_truetype_StbTruetype.STBTT__COMPARE = function(a,b) {
	return a.y0 < b.y0;
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort = function(p,n) {
	var i;
	var j;
	var _g1 = 1;
	var _g = n;
	while(_g1 < _g) {
		var i1 = _g1++;
		var t = p[i1];
		var a = t;
		j = i1;
		while(j > 0) {
			var b = p[j - 1];
			var c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(a,b);
			if(!c) {
				break;
			}
			p[j] = p[j - 1];
			--j;
		}
		if(i1 != j) {
			p[j] = t;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort = function(p,pIndex,n) {
	while(n > 12) {
		var t;
		var c01;
		var c12;
		var c;
		var m;
		var i;
		var j;
		m = n >> 1;
		c01 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + m]);
		c12 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + m],p[pIndex + n - 1]);
		if(c01 != c12) {
			var z;
			c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + n - 1]);
			if(c == c12) {
				z = 0;
			} else {
				z = n - 1;
			}
			t = p[pIndex + z];
			p[pIndex + z] = p[pIndex + m];
			p[pIndex + m] = t;
		}
		t = p[pIndex];
		p[pIndex] = p[pIndex + m];
		p[pIndex + m] = t;
		i = 1;
		j = n - 1;
		while(true) {
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + i],p[pIndex])) ++i;
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + j])) --j;
			if(i >= j) {
				break;
			}
			t = p[pIndex + i];
			p[pIndex + i] = p[pIndex + j];
			p[pIndex + j] = t;
			++i;
			--j;
		}
		if(j < n - i) {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex,j);
			pIndex += i;
			n -= i;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex + i,n - i);
			n = j;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges = function(p,n) {
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,0,n);
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort(p,n);
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize = function(result,pts,wcount,windings,scale_x,scale_y,shift_x,shift_y,off_x,off_y,invert) {
	var y_scale_inv = invert ? -scale_y : scale_y;
	var e;
	var n;
	var i;
	var j;
	var k;
	var m;
	var vsubsample = 1;
	var ptsIndex = 0;
	n = 0;
	var _g1 = 0;
	var _g = windings;
	while(_g1 < _g) {
		var i1 = _g1++;
		n += wcount[i1];
	}
	var this1 = new Array(n + 1);
	e = this1;
	if(e == null) {
		return;
	} else {
		var _g11 = 0;
		var _g2 = e.length;
		while(_g11 < _g2) {
			var i2 = _g11++;
			e[i2] = new kha_graphics2_truetype_Stbtt_$_$edge();
		}
	}
	n = 0;
	m = 0;
	var _g12 = 0;
	var _g3 = windings;
	while(_g12 < _g3) {
		var i3 = _g12++;
		var p = pts;
		var pIndex = ptsIndex + m;
		m += wcount[i3];
		j = wcount[i3] - 1;
		var _g31 = 0;
		var _g21 = wcount[i3];
		while(_g31 < _g21) {
			var k1 = _g31++;
			var a = k1;
			var b = j;
			if(p[pIndex + j].y == p[pIndex + k1].y) {
				j = k1;
				continue;
			}
			e[n].invert = false;
			if(invert ? p[pIndex + j].y > p[pIndex + k1].y : p[pIndex + j].y < p[pIndex + k1].y) {
				e[n].invert = true;
				a = j;
				b = k1;
			}
			e[n].x0 = p[pIndex + a].x * scale_x + shift_x;
			e[n].y0 = (p[pIndex + a].y * y_scale_inv + shift_y) * vsubsample;
			e[n].x1 = p[pIndex + b].x * scale_x + shift_x;
			e[n].y1 = (p[pIndex + b].y * y_scale_inv + shift_y) * vsubsample;
			++n;
			j = k1;
		}
	}
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges(e,n);
	kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges(result,e,n,vsubsample,off_x,off_y);
};
kha_graphics2_truetype_StbTruetype.stbtt__add_point = function(points,n,x,y) {
	if(points == null) {
		return;
	}
	points[n].x = x;
	points[n].y = y;
};
kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve = function(points,num_points,x0,y0,x1,y1,x2,y2,objspace_flatness_squared,n) {
	var mx = (x0 + 2 * x1 + x2) / 4;
	var my = (y0 + 2 * y1 + y2) / 4;
	var dx = (x0 + x2) / 2 - mx;
	var dy = (y0 + y2) / 2 - my;
	if(n > 16) {
		return 1;
	}
	if(dx * dx + dy * dy > objspace_flatness_squared) {
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,x0,y0,(x0 + x1) / 2.0,(y0 + y1) / 2.0,mx,my,objspace_flatness_squared,n + 1);
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,mx,my,(x1 + x2) / 2.0,(y1 + y2) / 2.0,x2,y2,objspace_flatness_squared,n + 1);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x2,y2);
		num_points.value += 1;
	}
	return 1;
};
kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves = function(vertices,num_verts,objspace_flatness,contour_lengths,num_contours) {
	var points = null;
	var num_points = 0;
	var objspace_flatness_squared = objspace_flatness * objspace_flatness;
	var i;
	var n = 0;
	var start = 0;
	var pass;
	var _g1 = 0;
	var _g = num_verts;
	while(_g1 < _g) {
		var i1 = _g1++;
		if(vertices[i1].type == 1) {
			++n;
		}
	}
	num_contours.value = n;
	if(n == 0) {
		return null;
	}
	var this1 = new Array(n);
	contour_lengths.value = this1;
	if(contour_lengths.value == null) {
		num_contours.value = 0;
		return null;
	}
	var _g2 = 0;
	while(_g2 < 2) {
		var pass1 = _g2++;
		var x = 0;
		var y = 0;
		if(pass1 == 1) {
			var this2 = new Array(num_points);
			points = this2;
			if(points == null) {
				contour_lengths.value = null;
				num_contours.value = 0;
				return null;
			} else {
				var _g21 = 0;
				var _g11 = points.length;
				while(_g21 < _g11) {
					var i2 = _g21++;
					points[i2] = new kha_graphics2_truetype_Stbtt_$_$point();
				}
			}
		}
		num_points = 0;
		n = -1;
		var _g22 = 0;
		var _g12 = num_verts;
		while(_g22 < _g12) {
			var i3 = _g22++;
			var _g3 = vertices[i3].type;
			switch(_g3) {
			case 1:
				if(n >= 0) {
					contour_lengths.value[n] = num_points - start;
				}
				++n;
				start = num_points;
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 2:
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 3:
				var num_points_reference = { value : num_points};
				kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points_reference,x,y,vertices[i3].cx,vertices[i3].cy,vertices[i3].x,vertices[i3].y,objspace_flatness_squared,0);
				num_points = num_points_reference.value;
				x = vertices[i3].x;
				y = vertices[i3].y;
				break;
			}
		}
		contour_lengths.value[n] = num_points - start;
	}
	return points;
};
kha_graphics2_truetype_StbTruetype.stbtt_Rasterize = function(result,flatness_in_pixels,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert) {
	var scale = scale_x > scale_y ? scale_y : scale_x;
	var winding_count = 0;
	var winding_lengths = null;
	var winding_count_reference = { value : winding_count};
	var winding_lengths_reference = new kha_graphics2_truetype_VectorOfIntPointer();
	var windings = kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves(vertices,num_verts,flatness_in_pixels / scale,winding_lengths_reference,winding_count_reference);
	winding_count = winding_count_reference.value;
	winding_lengths = winding_lengths_reference.value;
	if(windings != null) {
		kha_graphics2_truetype_StbTruetype.stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,glyph) {
	var ix0 = 0;
	var iy0 = 0;
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices == null ? 0 : vertices.length;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	gbm.pixels = output;
	gbm.pixels_offset = output_offset;
	gbm.w = out_w;
	gbm.h = out_h;
	gbm.stride = out_stride;
	if(gbm.w != 0 && gbm.h != 0) {
		kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,glyph) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,glyph);
};
kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap = function(data,offset,pixel_height,pixels,pw,ph,chars,chardata) {
	var scale;
	var x;
	var y;
	var bottom_y;
	var f = new kha_graphics2_truetype_Stbtt_$fontinfo();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_InitFont(f,data,offset)) {
		return -1;
	}
	var _g1 = 0;
	var _g = pw * ph;
	while(_g1 < _g) {
		var i = _g1++;
		pixels.writeU8(i,0);
	}
	y = 1;
	x = y;
	bottom_y = 1;
	scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(f,pixel_height);
	var i1 = 0;
	var _g2 = 0;
	while(_g2 < chars.length) {
		var index = chars[_g2];
		++_g2;
		var advance;
		var lsb;
		var x0;
		var y0;
		var x1;
		var y1;
		var gw;
		var gh;
		var g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,index);
		var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(f,g);
		advance = metrics.advanceWidth;
		lsb = metrics.leftSideBearing;
		var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox(f,g,scale,scale);
		x0 = rect.x0;
		y0 = rect.y0;
		x1 = rect.x1;
		y1 = rect.y1;
		gw = x1 - x0;
		gh = y1 - y0;
		if(x + gw + 1 >= pw) {
			y = bottom_y;
			x = 1;
		}
		if(y + gh + 1 >= ph) {
			return -i1;
		}
		if(x + gw >= pw) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(y + gh >= ph) {
			throw new js__$Boot_HaxeError("Error");
		}
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap(f,pixels,x + y * pw,gw,gh,pw,scale,scale,g);
		chardata[i1].x0 = x;
		chardata[i1].y0 = y;
		chardata[i1].x1 = x + gw;
		chardata[i1].y1 = y + gh;
		chardata[i1].xadvance = scale * advance;
		chardata[i1].xoff = x0;
		chardata[i1].yoff = y0;
		x = x + gw + 1;
		if(y + gh + 1 > bottom_y) {
			bottom_y = y + gh + 1;
		}
		++i1;
	}
	return bottom_y;
};
var kha_graphics4_BlendingFactor = $hxClasses["kha.graphics4.BlendingFactor"] = { __ename__ : true, __constructs__ : ["Undefined","BlendOne","BlendZero","SourceAlpha","DestinationAlpha","InverseSourceAlpha","InverseDestinationAlpha","SourceColor","DestinationColor","InverseSourceColor","InverseDestinationColor"] };
kha_graphics4_BlendingFactor.Undefined = ["Undefined",0];
kha_graphics4_BlendingFactor.Undefined.toString = $estr;
kha_graphics4_BlendingFactor.Undefined.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.BlendOne = ["BlendOne",1];
kha_graphics4_BlendingFactor.BlendOne.toString = $estr;
kha_graphics4_BlendingFactor.BlendOne.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.BlendZero = ["BlendZero",2];
kha_graphics4_BlendingFactor.BlendZero.toString = $estr;
kha_graphics4_BlendingFactor.BlendZero.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.SourceAlpha = ["SourceAlpha",3];
kha_graphics4_BlendingFactor.SourceAlpha.toString = $estr;
kha_graphics4_BlendingFactor.SourceAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.DestinationAlpha = ["DestinationAlpha",4];
kha_graphics4_BlendingFactor.DestinationAlpha.toString = $estr;
kha_graphics4_BlendingFactor.DestinationAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseSourceAlpha = ["InverseSourceAlpha",5];
kha_graphics4_BlendingFactor.InverseSourceAlpha.toString = $estr;
kha_graphics4_BlendingFactor.InverseSourceAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseDestinationAlpha = ["InverseDestinationAlpha",6];
kha_graphics4_BlendingFactor.InverseDestinationAlpha.toString = $estr;
kha_graphics4_BlendingFactor.InverseDestinationAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.SourceColor = ["SourceColor",7];
kha_graphics4_BlendingFactor.SourceColor.toString = $estr;
kha_graphics4_BlendingFactor.SourceColor.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.DestinationColor = ["DestinationColor",8];
kha_graphics4_BlendingFactor.DestinationColor.toString = $estr;
kha_graphics4_BlendingFactor.DestinationColor.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseSourceColor = ["InverseSourceColor",9];
kha_graphics4_BlendingFactor.InverseSourceColor.toString = $estr;
kha_graphics4_BlendingFactor.InverseSourceColor.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseDestinationColor = ["InverseDestinationColor",10];
kha_graphics4_BlendingFactor.InverseDestinationColor.toString = $estr;
kha_graphics4_BlendingFactor.InverseDestinationColor.__enum__ = kha_graphics4_BlendingFactor;
var kha_graphics4_BlendingOperation = $hxClasses["kha.graphics4.BlendingOperation"] = { __ename__ : true, __constructs__ : ["Add","Subtract","ReverseSubtract","Min","Max"] };
kha_graphics4_BlendingOperation.Add = ["Add",0];
kha_graphics4_BlendingOperation.Add.toString = $estr;
kha_graphics4_BlendingOperation.Add.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.Subtract = ["Subtract",1];
kha_graphics4_BlendingOperation.Subtract.toString = $estr;
kha_graphics4_BlendingOperation.Subtract.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.ReverseSubtract = ["ReverseSubtract",2];
kha_graphics4_BlendingOperation.ReverseSubtract.toString = $estr;
kha_graphics4_BlendingOperation.ReverseSubtract.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.Min = ["Min",3];
kha_graphics4_BlendingOperation.Min.toString = $estr;
kha_graphics4_BlendingOperation.Min.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.Max = ["Max",4];
kha_graphics4_BlendingOperation.Max.toString = $estr;
kha_graphics4_BlendingOperation.Max.__enum__ = kha_graphics4_BlendingOperation;
var kha_graphics4_CompareMode = $hxClasses["kha.graphics4.CompareMode"] = { __ename__ : true, __constructs__ : ["Always","Never","Equal","NotEqual","Less","LessEqual","Greater","GreaterEqual"] };
kha_graphics4_CompareMode.Always = ["Always",0];
kha_graphics4_CompareMode.Always.toString = $estr;
kha_graphics4_CompareMode.Always.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Never = ["Never",1];
kha_graphics4_CompareMode.Never.toString = $estr;
kha_graphics4_CompareMode.Never.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Equal = ["Equal",2];
kha_graphics4_CompareMode.Equal.toString = $estr;
kha_graphics4_CompareMode.Equal.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.NotEqual = ["NotEqual",3];
kha_graphics4_CompareMode.NotEqual.toString = $estr;
kha_graphics4_CompareMode.NotEqual.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Less = ["Less",4];
kha_graphics4_CompareMode.Less.toString = $estr;
kha_graphics4_CompareMode.Less.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.LessEqual = ["LessEqual",5];
kha_graphics4_CompareMode.LessEqual.toString = $estr;
kha_graphics4_CompareMode.LessEqual.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Greater = ["Greater",6];
kha_graphics4_CompareMode.Greater.toString = $estr;
kha_graphics4_CompareMode.Greater.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.GreaterEqual = ["GreaterEqual",7];
kha_graphics4_CompareMode.GreaterEqual.toString = $estr;
kha_graphics4_CompareMode.GreaterEqual.__enum__ = kha_graphics4_CompareMode;
var kha_graphics4_ConstantLocation = function() { };
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = true;
var kha_graphics4_CubeMap = function(size,format,renderTarget,depthStencilFormat) {
	this.isDepthAttachment = false;
	this.depthTexture = null;
	this.texture = null;
	this.frameBuffer = null;
	this.myWidth = size;
	this.myHeight = size;
	this.format = format;
	this.renderTarget = renderTarget;
	this.depthStencilFormat = depthStencilFormat;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = true;
kha_graphics4_CubeMap.__interfaces__ = [kha_Resource,kha_Canvas];
kha_graphics4_CubeMap.createRenderTarget = function(size,format,depthStencil,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	return new kha_graphics4_CubeMap(size,format,true,depthStencil);
};
kha_graphics4_CubeMap.prototype = {
	createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
		kha_SystemImpl.gl.texParameteri(34067,10240,9729);
		kha_SystemImpl.gl.texParameteri(34067,10241,9729);
		kha_SystemImpl.gl.texParameteri(34067,10242,33071);
		kha_SystemImpl.gl.texParameteri(34067,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			var _g = this.format;
			switch(_g[1]) {
			case 0:
				var _g1 = 0;
				while(_g1 < 6) {
					var i = _g1++;
					kha_SystemImpl.gl.texImage2D(34069 + i,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				}
				break;
			case 2:
				var _g2 = 0;
				while(_g2 < 6) {
					var i1 = _g2++;
					kha_SystemImpl.gl.texImage2D(34069 + i1,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				}
				break;
			case 3:
				var _g3 = 0;
				while(_g3 < 6) {
					var i2 = _g3++;
					kha_SystemImpl.gl.texImage2D(34069 + i2,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				}
				break;
			case 4:
				var _g4 = 0;
				while(_g4 < 6) {
					var i3 = _g4++;
					kha_SystemImpl.gl.texImage2D(34069 + i3,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				}
				break;
			case 5:
				var _g5 = 0;
				while(_g5 < 6) {
					var i4 = _g5++;
					kha_SystemImpl.gl.texImage2D(34069 + i4,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				}
				break;
			case 6:
				var _g6 = 0;
				while(_g6 < 6) {
					var i5 = _g6++;
					kha_SystemImpl.gl.texImage2D(34069 + i5,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				}
				break;
			default:
				var _g7 = 0;
				while(_g7 < 6) {
					var i6 = _g7++;
					kha_SystemImpl.gl.texImage2D(34069 + i6,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				}
			}
			if(this.format == kha_graphics4_TextureFormat.DEPTH16) {
				kha_SystemImpl.gl.texParameteri(34067,10240,9728);
				kha_SystemImpl.gl.texParameteri(34067,10241,9728);
				this.isDepthAttachment = true;
				if(navigator.appVersion.indexOf("Win") == -1) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(34067,colortex);
					var _g11 = 0;
					while(_g11 < 6) {
						var i7 = _g11++;
						kha_SystemImpl.gl.texImage2D(34069 + i7,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
						kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34069 + i7,colortex,0);
					}
					kha_SystemImpl.gl.bindTexture(34067,this.texture);
				}
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		}
		kha_SystemImpl.gl.bindTexture(34067,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			if(depthStencilFormat == 1) {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.myWidth,this.myHeight,0,6402,5125,null);
			} else {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
			}
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36096,34067,this.depthTexture,0);
			break;
		case 2:case 3:case 4:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.myWidth,this.myHeight,0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,33306,34067,this.depthTexture,0);
			break;
		}
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,__class__: kha_graphics4_CubeMap
	,__properties__: {get_g4:"get_g4",get_height:"get_height",get_width:"get_width"}
};
var kha_graphics4_CullMode = $hxClasses["kha.graphics4.CullMode"] = { __ename__ : true, __constructs__ : ["Clockwise","CounterClockwise","None"] };
kha_graphics4_CullMode.Clockwise = ["Clockwise",0];
kha_graphics4_CullMode.Clockwise.toString = $estr;
kha_graphics4_CullMode.Clockwise.__enum__ = kha_graphics4_CullMode;
kha_graphics4_CullMode.CounterClockwise = ["CounterClockwise",1];
kha_graphics4_CullMode.CounterClockwise.toString = $estr;
kha_graphics4_CullMode.CounterClockwise.__enum__ = kha_graphics4_CullMode;
kha_graphics4_CullMode.None = ["None",2];
kha_graphics4_CullMode.None.toString = $estr;
kha_graphics4_CullMode.None.__enum__ = kha_graphics4_CullMode;
var kha_graphics4_FragmentShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35632;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = true;
kha_graphics4_FragmentShader.fromSource = function(source) {
	var shader = new kha_graphics4_FragmentShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_FragmentShader.prototype = {
	__class__: kha_graphics4_FragmentShader
};
var kha_graphics4_GeometryShader = function() { };
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = true;
var kha_graphics4_Graphics = function() { };
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = true;
kha_graphics4_Graphics.prototype = {
	__class__: kha_graphics4_Graphics
};
var kha_graphics4_ImageShaderPainter = function(g4) {
	this.myPipeline = null;
	this.bilinearMipmaps = false;
	this.bilinear = false;
	this.g = g4;
	this.bufferIndex = 0;
	kha_graphics4_ImageShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = true;
kha_graphics4_ImageShaderPainter.initShaders = function() {
	if(kha_graphics4_ImageShaderPainter.shaderPipeline != null) {
		return;
	}
	kha_graphics4_ImageShaderPainter.shaderPipeline = new kha_graphics4_PipelineState();
	kha_graphics4_ImageShaderPainter.shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
	kha_graphics4_ImageShaderPainter.shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
	kha_graphics4_ImageShaderPainter.structure = new kha_graphics4_VertexStructure();
	kha_graphics4_ImageShaderPainter.structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
	kha_graphics4_ImageShaderPainter.structure.add("texPosition",kha_graphics4_VertexData.Float2);
	kha_graphics4_ImageShaderPainter.structure.add("vertexColor",kha_graphics4_VertexData.Float4);
	kha_graphics4_ImageShaderPainter.shaderPipeline.inputLayout = [kha_graphics4_ImageShaderPainter.structure];
	kha_graphics4_ImageShaderPainter.shaderPipeline.blendSource = kha_graphics4_BlendingFactor.BlendOne;
	kha_graphics4_ImageShaderPainter.shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ImageShaderPainter.shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_ImageShaderPainter.shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ImageShaderPainter.shaderPipeline.compile();
};
kha_graphics4_ImageShaderPainter.prototype = {
	get_pipeline: function() {
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		this.rectVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_ImageShaderPainter.bufferSize * 4,kha_graphics4_ImageShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.rectVertices = this.rectVertexBuffer.lock();
		this.indexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_ImageShaderPainter.bufferSize * 3 * 2,kha_graphics4_Usage.StaticUsage);
		var indices = this.indexBuffer.lock();
		var _g1 = 0;
		var _g = kha_graphics4_ImageShaderPainter.bufferSize;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i * 3 * 2] = i * 4;
			indices[i * 3 * 2 + 1] = i * 4 + 1;
			indices[i * 3 * 2 + 2] = i * 4 + 2;
			indices[i * 3 * 2 + 3] = i * 4;
			indices[i * 3 * 2 + 4] = i * 4 + 2;
			indices[i * 3 * 2 + 5] = i * 4 + 3;
		}
		this.indexBuffer.unlock();
	}
	,drawBuffer: function() {
		this.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(this.rectVertexBuffer);
		this.g.setIndexBuffer(this.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ImageShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setTexture(this.textureLocation,this.lastTexture);
		this.g.setTextureParameters(this.textureLocation,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinearMipmaps ? kha_graphics4_MipMapFilter.LinearMipFilter : kha_graphics4_MipMapFilter.NoMipFilter);
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,this.bufferIndex * 2 * 3);
		this.g.setTexture(this.textureLocation,null);
		this.bufferIndex = 0;
		this.rectVertices = this.rectVertexBuffer.lock();
	}
	,end: function() {
		if(this.bufferIndex > 0) {
			this.drawBuffer();
		}
		this.lastTexture = null;
	}
	,__class__: kha_graphics4_ImageShaderPainter
	,__properties__: {get_pipeline:"get_pipeline"}
};
var kha_graphics4_ColoredShaderPainter = function(g4) {
	this.myPipeline = null;
	this.g = g4;
	this.bufferIndex = 0;
	this.triangleBufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_ColoredShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
};
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = true;
kha_graphics4_ColoredShaderPainter.initShaders = function() {
	if(kha_graphics4_ColoredShaderPainter.shaderPipeline != null) {
		return;
	}
	kha_graphics4_ColoredShaderPainter.shaderPipeline = new kha_graphics4_PipelineState();
	kha_graphics4_ColoredShaderPainter.shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
	kha_graphics4_ColoredShaderPainter.structure = new kha_graphics4_VertexStructure();
	kha_graphics4_ColoredShaderPainter.structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
	kha_graphics4_ColoredShaderPainter.structure.add("vertexColor",kha_graphics4_VertexData.Float4);
	kha_graphics4_ColoredShaderPainter.shaderPipeline.inputLayout = [kha_graphics4_ColoredShaderPainter.structure];
	kha_graphics4_ColoredShaderPainter.shaderPipeline.blendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.compile();
};
kha_graphics4_ColoredShaderPainter.prototype = {
	get_pipeline: function() {
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		this.rectVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_ColoredShaderPainter.bufferSize * 4,kha_graphics4_ColoredShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.rectVertices = this.rectVertexBuffer.lock();
		this.indexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_ColoredShaderPainter.bufferSize * 3 * 2,kha_graphics4_Usage.StaticUsage);
		var indices = this.indexBuffer.lock();
		var _g1 = 0;
		var _g = kha_graphics4_ColoredShaderPainter.bufferSize;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i * 3 * 2] = i * 4;
			indices[i * 3 * 2 + 1] = i * 4 + 1;
			indices[i * 3 * 2 + 2] = i * 4 + 2;
			indices[i * 3 * 2 + 3] = i * 4;
			indices[i * 3 * 2 + 4] = i * 4 + 2;
			indices[i * 3 * 2 + 5] = i * 4 + 3;
		}
		this.indexBuffer.unlock();
		this.triangleVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_ColoredShaderPainter.triangleBufferSize * 3,kha_graphics4_ColoredShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.triangleVertices = this.triangleVertexBuffer.lock();
		this.triangleIndexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_ColoredShaderPainter.triangleBufferSize * 3,kha_graphics4_Usage.StaticUsage);
		var triIndices = this.triangleIndexBuffer.lock();
		var _g11 = 0;
		var _g2 = kha_graphics4_ColoredShaderPainter.bufferSize;
		while(_g11 < _g2) {
			var i1 = _g11++;
			triIndices[i1 * 3] = i1 * 3;
			triIndices[i1 * 3 + 1] = i1 * 3 + 1;
			triIndices[i1 * 3 + 2] = i1 * 3 + 2;
		}
		this.triangleIndexBuffer.unlock();
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = this.bufferIndex * 7 * 4;
		this.rectVertices[baseIndex] = bottomleftx;
		this.rectVertices[baseIndex + 1] = bottomlefty;
		this.rectVertices[baseIndex + 2] = -5.0;
		this.rectVertices[baseIndex + 7] = topleftx;
		this.rectVertices[baseIndex + 8] = toplefty;
		this.rectVertices[baseIndex + 9] = -5.0;
		this.rectVertices[baseIndex + 14] = toprightx;
		this.rectVertices[baseIndex + 15] = toprighty;
		this.rectVertices[baseIndex + 16] = -5.0;
		this.rectVertices[baseIndex + 21] = bottomrightx;
		this.rectVertices[baseIndex + 22] = bottomrighty;
		this.rectVertices[baseIndex + 23] = -5.0;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = this.bufferIndex * 7 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		this.rectVertices[baseIndex + 3] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 4] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 5] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 6] = a;
		this.rectVertices[baseIndex + 10] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 11] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 12] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 13] = a;
		this.rectVertices[baseIndex + 17] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 18] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 19] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 20] = a;
		this.rectVertices[baseIndex + 24] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 25] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 26] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 27] = a;
	}
	,drawBuffer: function(trisDone) {
		if(!trisDone) {
			if(this.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		this.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(this.rectVertexBuffer);
		this.g.setIndexBuffer(this.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ColoredShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,this.bufferIndex * 2 * 3);
		this.bufferIndex = 0;
		this.rectVertices = this.rectVertexBuffer.lock();
	}
	,drawTriBuffer: function(rectsDone) {
		if(!rectsDone) {
			if(this.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		this.triangleVertexBuffer.unlock();
		this.g.setVertexBuffer(this.triangleVertexBuffer);
		this.g.setIndexBuffer(this.triangleIndexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ColoredShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,this.triangleBufferIndex * 3);
		this.triangleBufferIndex = 0;
		this.triangleVertices = this.triangleVertexBuffer.lock();
	}
	,fillRect: function(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(this.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(this.bufferIndex + 1 >= kha_graphics4_ColoredShaderPainter.bufferSize) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++this.bufferIndex;
	}
	,__class__: kha_graphics4_ColoredShaderPainter
	,__properties__: {get_pipeline:"get_pipeline"}
};
var kha_graphics4_TextShaderPainter = function(g4) {
	this.bilinear = false;
	this.myPipeline = null;
	this.g = g4;
	this.bufferIndex = 0;
	kha_graphics4_TextShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = true;
kha_graphics4_TextShaderPainter.initShaders = function() {
	if(kha_graphics4_TextShaderPainter.shaderPipeline != null) {
		return;
	}
	kha_graphics4_TextShaderPainter.shaderPipeline = new kha_graphics4_PipelineState();
	kha_graphics4_TextShaderPainter.shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
	kha_graphics4_TextShaderPainter.shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
	kha_graphics4_TextShaderPainter.structure = new kha_graphics4_VertexStructure();
	kha_graphics4_TextShaderPainter.structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
	kha_graphics4_TextShaderPainter.structure.add("texPosition",kha_graphics4_VertexData.Float2);
	kha_graphics4_TextShaderPainter.structure.add("vertexColor",kha_graphics4_VertexData.Float4);
	kha_graphics4_TextShaderPainter.shaderPipeline.inputLayout = [kha_graphics4_TextShaderPainter.structure];
	kha_graphics4_TextShaderPainter.shaderPipeline.blendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.compile();
};
kha_graphics4_TextShaderPainter.prototype = {
	get_pipeline: function() {
		return this.myPipeline;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		this.rectVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_TextShaderPainter.bufferSize * 4,kha_graphics4_TextShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.rectVertices = this.rectVertexBuffer.lock();
		this.indexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_TextShaderPainter.bufferSize * 3 * 2,kha_graphics4_Usage.StaticUsage);
		var indices = this.indexBuffer.lock();
		var _g1 = 0;
		var _g = kha_graphics4_TextShaderPainter.bufferSize;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i * 3 * 2] = i * 4;
			indices[i * 3 * 2 + 1] = i * 4 + 1;
			indices[i * 3 * 2 + 2] = i * 4 + 2;
			indices[i * 3 * 2 + 3] = i * 4;
			indices[i * 3 * 2 + 4] = i * 4 + 2;
			indices[i * 3 * 2 + 5] = i * 4 + 3;
		}
		this.indexBuffer.unlock();
	}
	,drawBuffer: function() {
		this.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(this.rectVertexBuffer);
		this.g.setIndexBuffer(this.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_TextShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setTexture(this.textureLocation,this.lastTexture);
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.setTextureParameters(this.textureLocation,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,kha_graphics4_MipMapFilter.NoMipFilter);
		this.g.drawIndexedVertices(0,this.bufferIndex * 2 * 3);
		this.g.setTexture(this.textureLocation,null);
		this.bufferIndex = 0;
		this.rectVertices = this.rectVertexBuffer.lock();
	}
	,end: function() {
		if(this.bufferIndex > 0) {
			this.drawBuffer();
		}
		this.lastTexture = null;
	}
	,__class__: kha_graphics4_TextShaderPainter
	,__properties__: {get_pipeline:"get_pipeline"}
};
var kha_graphics4_Graphics2 = function(canvas) {
	kha_graphics2_Graphics.call(this);
	this.set_color(-1);
	this.canvas = canvas;
	this.g = canvas.get_g4();
	this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
	this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
	this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
	this.textPainter.fontSize = this.get_fontSize();
	this.setProjection();
	if(kha_graphics4_Graphics2.videoPipeline == null) {
		kha_graphics4_Graphics2.videoPipeline = new kha_graphics4_PipelineState();
		kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
		kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
		var structure = new kha_graphics4_VertexStructure();
		structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
		structure.add("texPosition",kha_graphics4_VertexData.Float2);
		structure.add("vertexColor",kha_graphics4_VertexData.Float4);
		kha_graphics4_Graphics2.videoPipeline.inputLayout = [structure];
		kha_graphics4_Graphics2.videoPipeline.compile();
	}
};
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = true;
kha_graphics4_Graphics2.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
kha_graphics4_Graphics2.prototype = $extend(kha_graphics2_Graphics.prototype,{
	setProjection: function() {
		var width = this.canvas.get_width();
		var height = this.canvas.get_height();
		if(js_Boot.__instanceof(this.canvas,kha_Framebuffer)) {
			this.projectionMatrix = kha_math_FastMatrix4.orthogonalProjection(0,width,height,0,0.1,1000);
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(this.g.renderTargetsInvertedY()) {
				this.projectionMatrix = kha_math_FastMatrix4.orthogonalProjection(0,width,0,height,0.1,1000);
			} else {
				this.projectionMatrix = kha_math_FastMatrix4.orthogonalProjection(0,width,height,0,0.1,1000);
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_color: function(color) {
		return this.myColor = color;
	}
	,fillRect: function(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		var p1_y;
		var p1_x;
		var _this = this.transformations[this.transformations.length - 1];
		var value_y;
		var value_x = x;
		value_y = y + height;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		p1_x = x1;
		p1_y = y1;
		var p2_y;
		var p2_x;
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_y1;
		var value_x1 = x;
		value_y1 = y;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x2 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y2 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		p2_x = x2;
		p2_y = y2;
		var p3_y;
		var p3_x;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_y2;
		var value_x2 = x + width;
		value_y2 = y;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x3 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y3 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		p3_x = x3;
		p3_y = y3;
		var p4_y;
		var p4_x;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_y3;
		var value_x3 = x + width;
		value_y3 = y + height;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x4 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y4 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		p4_x = x4;
		p4_y = y4;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	,clear: function(color) {
		this.flush();
		this.g.clear(color == null ? -16777216 : color);
	}
	,flush: function() {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.coloredPainter;
		if(_this.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(_this.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	,end: function() {
		this.flush();
		this.g.end();
	}
	,__class__: kha_graphics4_Graphics2
});
var kha_graphics4_IndexBuffer = function(indexCount,usage,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	this.usage = usage;
	this.mySize = indexCount;
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Uint32Array(indexCount);
	this._data = this1;
};
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = true;
kha_graphics4_IndexBuffer.prototype = {
	lock: function(start,count) {
		if(start == null) {
			start = 0;
		}
		if(count == null) {
			count = this.mySize;
		}
		return this._data.subarray(start,start + count);
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
		var glData = kha_SystemImpl.elementIndexUint == null ? new Uint16Array(this._data) : this._data;
		kha_SystemImpl.gl.bufferData(34963,glData,this.usage == kha_graphics4_Usage.DynamicUsage ? 35048 : 35044);
	}
	,set: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
	}
	,count: function() {
		return this.mySize;
	}
	,__class__: kha_graphics4_IndexBuffer
};
var kha_graphics4_MipMapFilter = $hxClasses["kha.graphics4.MipMapFilter"] = { __ename__ : true, __constructs__ : ["NoMipFilter","PointMipFilter","LinearMipFilter"] };
kha_graphics4_MipMapFilter.NoMipFilter = ["NoMipFilter",0];
kha_graphics4_MipMapFilter.NoMipFilter.toString = $estr;
kha_graphics4_MipMapFilter.NoMipFilter.__enum__ = kha_graphics4_MipMapFilter;
kha_graphics4_MipMapFilter.PointMipFilter = ["PointMipFilter",1];
kha_graphics4_MipMapFilter.PointMipFilter.toString = $estr;
kha_graphics4_MipMapFilter.PointMipFilter.__enum__ = kha_graphics4_MipMapFilter;
kha_graphics4_MipMapFilter.LinearMipFilter = ["LinearMipFilter",2];
kha_graphics4_MipMapFilter.LinearMipFilter.toString = $estr;
kha_graphics4_MipMapFilter.LinearMipFilter.__enum__ = kha_graphics4_MipMapFilter;
var kha_graphics4_PipelineStateBase = function() {
	this.inputLayout = null;
	this.vertexShader = null;
	this.fragmentShader = null;
	this.geometryShader = null;
	this.tessellationControlShader = null;
	this.tessellationEvaluationShader = null;
	this.cullMode = kha_graphics4_CullMode.None;
	this.depthWrite = false;
	this.depthMode = kha_graphics4_CompareMode.Always;
	this.stencilMode = kha_graphics4_CompareMode.Always;
	this.stencilBothPass = kha_graphics4_StencilAction.Keep;
	this.stencilDepthFail = kha_graphics4_StencilAction.Keep;
	this.stencilFail = kha_graphics4_StencilAction.Keep;
	this.stencilReferenceValue = 0;
	this.stencilReadMask = 255;
	this.stencilWriteMask = 255;
	this.blendSource = kha_graphics4_BlendingFactor.BlendOne;
	this.blendDestination = kha_graphics4_BlendingFactor.BlendZero;
	this.blendOperation = kha_graphics4_BlendingOperation.Add;
	this.alphaBlendSource = kha_graphics4_BlendingFactor.BlendOne;
	this.alphaBlendDestination = kha_graphics4_BlendingFactor.BlendZero;
	this.alphaBlendOperation = kha_graphics4_BlendingOperation.Add;
	this.colorWriteMaskRed = this.colorWriteMaskBlue = this.colorWriteMaskGreen = this.colorWriteMaskAlpha = true;
	this.conservativeRasterization = false;
};
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = true;
kha_graphics4_PipelineStateBase.prototype = {
	__class__: kha_graphics4_PipelineStateBase
};
var kha_graphics4_PipelineState = function() {
	this.program = null;
	kha_graphics4_PipelineStateBase.call(this);
	this.textures = [];
	this.textureValues = [];
};
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = true;
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineState.prototype = $extend(kha_graphics4_PipelineStateBase.prototype,{
	'delete': function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
	}
	,compile: function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
		this.program = kha_SystemImpl.gl.createProgram();
		this.compileShader(this.vertexShader);
		this.compileShader(this.fragmentShader);
		kha_SystemImpl.gl.attachShader(this.program,this.vertexShader.shader);
		kha_SystemImpl.gl.attachShader(this.program,this.fragmentShader.shader);
		var index = 0;
		var _g = 0;
		var _g1 = this.inputLayout;
		while(_g < _g1.length) {
			var structure = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = structure.elements;
			while(_g2 < _g3.length) {
				var element = _g3[_g2];
				++_g2;
				kha_SystemImpl.gl.bindAttribLocation(this.program,index,element.name);
				if(element.data == kha_graphics4_VertexData.Float4x4) {
					index += 4;
				} else {
					++index;
				}
			}
		}
		kha_SystemImpl.gl.linkProgram(this.program);
		if(!kha_SystemImpl.gl.getProgramParameter(this.program,35714)) {
			throw new js__$Boot_HaxeError("Could not link the shader program:\n" + kha_SystemImpl.gl.getProgramInfoLog(this.program));
		}
	}
	,set: function() {
		kha_SystemImpl.gl.useProgram(this.program);
		var _g1 = 0;
		var _g = this.textureValues.length;
		while(_g1 < _g) {
			var index = _g1++;
			kha_SystemImpl.gl.uniform1i(this.textureValues[index],index);
		}
		kha_SystemImpl.gl.colorMask(this.colorWriteMaskRed,this.colorWriteMaskGreen,this.colorWriteMaskBlue,this.colorWriteMaskAlpha);
	}
	,compileShader: function(shader) {
		if(shader.shader != null) {
			return;
		}
		var s = kha_SystemImpl.gl.createShader(shader.type);
		var highp = kha_SystemImpl.gl.getShaderPrecisionFormat(35632,36338);
		var highpSupported = highp.precision != 0;
		var files = shader.files;
		var _g1 = 0;
		var _g = files.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(kha_SystemImpl.gl2) {
				if(files[i].indexOf("-webgl2") >= 0 || files[i].indexOf("runtime-string") >= 0) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			} else {
				if(!highpSupported && (files[i].indexOf("-relaxed") >= 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
				if(highpSupported && (files[i].indexOf("-relaxed") < 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			}
		}
		kha_SystemImpl.gl.compileShader(s);
		if(!kha_SystemImpl.gl.getShaderParameter(s,35713)) {
			throw new js__$Boot_HaxeError("Could not compile shader:\n" + kha_SystemImpl.gl.getShaderInfoLog(s));
		}
		shader.shader = s;
	}
	,getConstantLocation: function(name) {
		var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
		var type = 5126;
		var count = kha_SystemImpl.gl.getProgramParameter(this.program,35718);
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			var info = kha_SystemImpl.gl.getActiveUniform(this.program,i);
			if(info.name == name || info.name == name + "[0]") {
				type = info.type;
				break;
			}
		}
		return new kha_js_graphics4_ConstantLocation(location,type);
	}
	,getTextureUnit: function(name) {
		var index = this.findTexture(name);
		if(index < 0) {
			var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
			index = this.textures.length;
			this.textureValues.push(location);
			this.textures.push(name);
		}
		return new kha_js_graphics4_TextureUnit(index);
	}
	,findTexture: function(name) {
		var _g1 = 0;
		var _g = this.textures.length;
		while(_g1 < _g) {
			var index = _g1++;
			if(this.textures[index] == name) {
				return index;
			}
		}
		return -1;
	}
	,__class__: kha_graphics4_PipelineState
});
var kha_graphics4_StencilAction = $hxClasses["kha.graphics4.StencilAction"] = { __ename__ : true, __constructs__ : ["Keep","Zero","Replace","Increment","IncrementWrap","Decrement","DecrementWrap","Invert"] };
kha_graphics4_StencilAction.Keep = ["Keep",0];
kha_graphics4_StencilAction.Keep.toString = $estr;
kha_graphics4_StencilAction.Keep.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Zero = ["Zero",1];
kha_graphics4_StencilAction.Zero.toString = $estr;
kha_graphics4_StencilAction.Zero.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Replace = ["Replace",2];
kha_graphics4_StencilAction.Replace.toString = $estr;
kha_graphics4_StencilAction.Replace.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Increment = ["Increment",3];
kha_graphics4_StencilAction.Increment.toString = $estr;
kha_graphics4_StencilAction.Increment.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.IncrementWrap = ["IncrementWrap",4];
kha_graphics4_StencilAction.IncrementWrap.toString = $estr;
kha_graphics4_StencilAction.IncrementWrap.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Decrement = ["Decrement",5];
kha_graphics4_StencilAction.Decrement.toString = $estr;
kha_graphics4_StencilAction.Decrement.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.DecrementWrap = ["DecrementWrap",6];
kha_graphics4_StencilAction.DecrementWrap.toString = $estr;
kha_graphics4_StencilAction.DecrementWrap.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Invert = ["Invert",7];
kha_graphics4_StencilAction.Invert.toString = $estr;
kha_graphics4_StencilAction.Invert.__enum__ = kha_graphics4_StencilAction;
var kha_graphics4_TessellationControlShader = function() { };
$hxClasses["kha.graphics4.TessellationControlShader"] = kha_graphics4_TessellationControlShader;
kha_graphics4_TessellationControlShader.__name__ = true;
var kha_graphics4_TessellationEvaluationShader = function() { };
$hxClasses["kha.graphics4.TessellationEvaluationShader"] = kha_graphics4_TessellationEvaluationShader;
kha_graphics4_TessellationEvaluationShader.__name__ = true;
var kha_graphics4_TextureAddressing = $hxClasses["kha.graphics4.TextureAddressing"] = { __ename__ : true, __constructs__ : ["Repeat","Mirror","Clamp"] };
kha_graphics4_TextureAddressing.Repeat = ["Repeat",0];
kha_graphics4_TextureAddressing.Repeat.toString = $estr;
kha_graphics4_TextureAddressing.Repeat.__enum__ = kha_graphics4_TextureAddressing;
kha_graphics4_TextureAddressing.Mirror = ["Mirror",1];
kha_graphics4_TextureAddressing.Mirror.toString = $estr;
kha_graphics4_TextureAddressing.Mirror.__enum__ = kha_graphics4_TextureAddressing;
kha_graphics4_TextureAddressing.Clamp = ["Clamp",2];
kha_graphics4_TextureAddressing.Clamp.toString = $estr;
kha_graphics4_TextureAddressing.Clamp.__enum__ = kha_graphics4_TextureAddressing;
var kha_graphics4_TextureFilter = $hxClasses["kha.graphics4.TextureFilter"] = { __ename__ : true, __constructs__ : ["PointFilter","LinearFilter","AnisotropicFilter"] };
kha_graphics4_TextureFilter.PointFilter = ["PointFilter",0];
kha_graphics4_TextureFilter.PointFilter.toString = $estr;
kha_graphics4_TextureFilter.PointFilter.__enum__ = kha_graphics4_TextureFilter;
kha_graphics4_TextureFilter.LinearFilter = ["LinearFilter",1];
kha_graphics4_TextureFilter.LinearFilter.toString = $estr;
kha_graphics4_TextureFilter.LinearFilter.__enum__ = kha_graphics4_TextureFilter;
kha_graphics4_TextureFilter.AnisotropicFilter = ["AnisotropicFilter",2];
kha_graphics4_TextureFilter.AnisotropicFilter.toString = $estr;
kha_graphics4_TextureFilter.AnisotropicFilter.__enum__ = kha_graphics4_TextureFilter;
var kha_graphics4_TextureFormat = $hxClasses["kha.graphics4.TextureFormat"] = { __ename__ : true, __constructs__ : ["RGBA32","L8","RGBA128","DEPTH16","RGBA64","A32","A16"] };
kha_graphics4_TextureFormat.RGBA32 = ["RGBA32",0];
kha_graphics4_TextureFormat.RGBA32.toString = $estr;
kha_graphics4_TextureFormat.RGBA32.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.L8 = ["L8",1];
kha_graphics4_TextureFormat.L8.toString = $estr;
kha_graphics4_TextureFormat.L8.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.RGBA128 = ["RGBA128",2];
kha_graphics4_TextureFormat.RGBA128.toString = $estr;
kha_graphics4_TextureFormat.RGBA128.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.DEPTH16 = ["DEPTH16",3];
kha_graphics4_TextureFormat.DEPTH16.toString = $estr;
kha_graphics4_TextureFormat.DEPTH16.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.RGBA64 = ["RGBA64",4];
kha_graphics4_TextureFormat.RGBA64.toString = $estr;
kha_graphics4_TextureFormat.RGBA64.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.A32 = ["A32",5];
kha_graphics4_TextureFormat.A32.toString = $estr;
kha_graphics4_TextureFormat.A32.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.A16 = ["A16",6];
kha_graphics4_TextureFormat.A16.toString = $estr;
kha_graphics4_TextureFormat.A16.__enum__ = kha_graphics4_TextureFormat;
var kha_graphics4_TextureUnit = function() { };
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = true;
var kha_graphics4_Usage = $hxClasses["kha.graphics4.Usage"] = { __ename__ : true, __constructs__ : ["StaticUsage","DynamicUsage","ReadableUsage"] };
kha_graphics4_Usage.StaticUsage = ["StaticUsage",0];
kha_graphics4_Usage.StaticUsage.toString = $estr;
kha_graphics4_Usage.StaticUsage.__enum__ = kha_graphics4_Usage;
kha_graphics4_Usage.DynamicUsage = ["DynamicUsage",1];
kha_graphics4_Usage.DynamicUsage.toString = $estr;
kha_graphics4_Usage.DynamicUsage.__enum__ = kha_graphics4_Usage;
kha_graphics4_Usage.ReadableUsage = ["ReadableUsage",2];
kha_graphics4_Usage.ReadableUsage.toString = $estr;
kha_graphics4_Usage.ReadableUsage.__enum__ = kha_graphics4_Usage;
var kha_graphics4_VertexBuffer = function(vertexCount,structure,usage,instanceDataStepRate,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	if(instanceDataStepRate == null) {
		instanceDataStepRate = 0;
	}
	this.usage = usage;
	this.instanceDataStepRate = instanceDataStepRate;
	this.mySize = vertexCount;
	this.myStride = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) {
		var element = _g1[_g];
		++_g;
		var _g2 = element.data;
		switch(_g2[1]) {
		case 0:
			this.myStride += 4;
			break;
		case 1:
			this.myStride += 8;
			break;
		case 2:
			this.myStride += 12;
			break;
		case 3:
			this.myStride += 16;
			break;
		case 4:
			this.myStride += 64;
			break;
		}
	}
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Float32Array(vertexCount * this.myStride / 4 | 0);
	this._data = this1;
	this.sizes = [];
	this.offsets = [];
	this.sizes[structure.elements.length - 1] = 0;
	this.offsets[structure.elements.length - 1] = 0;
	var offset = 0;
	var index = 0;
	var _g3 = 0;
	var _g11 = structure.elements;
	while(_g3 < _g11.length) {
		var element1 = _g11[_g3];
		++_g3;
		var size;
		var _g21 = element1.data;
		switch(_g21[1]) {
		case 0:
			size = 1;
			break;
		case 1:
			size = 2;
			break;
		case 2:
			size = 3;
			break;
		case 3:
			size = 4;
			break;
		case 4:
			size = 16;
			break;
		}
		this.sizes[index] = size;
		this.offsets[index] = offset;
		var _g31 = element1.data;
		switch(_g31[1]) {
		case 0:
			offset += 4;
			break;
		case 1:
			offset += 8;
			break;
		case 2:
			offset += 12;
			break;
		case 3:
			offset += 16;
			break;
		case 4:
			offset += 64;
			break;
		}
		++index;
	}
};
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = true;
kha_graphics4_VertexBuffer.prototype = {
	lock: function(start,count) {
		if(start == null) {
			start = 0;
		}
		if(count == null) {
			count = this.mySize;
		}
		return this._data.subarray(start * this.stride(),(start + count) * this.stride());
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		kha_SystemImpl.gl.bufferData(34962,this._data,this.usage == kha_graphics4_Usage.DynamicUsage ? 35048 : 35044);
	}
	,stride: function() {
		return this.myStride;
	}
	,set: function(offset) {
		var ext = kha_SystemImpl.gl2 ? true : kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		var attributesOffset = 0;
		var _g1 = 0;
		var _g = this.sizes.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.sizes[i] > 4) {
				var size = this.sizes[i];
				var addonOffset = 0;
				while(size > 0) {
					kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
					kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,4,5126,false,this.myStride,this.offsets[i] + addonOffset);
					if(ext) {
						if(kha_SystemImpl.gl2) {
							kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
						} else {
							ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
						}
					}
					size -= 4;
					addonOffset += 16;
					++attributesOffset;
				}
			} else {
				kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
				kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,this.sizes[i],5126,false,this.myStride,this.offsets[i]);
				if(ext) {
					if(kha_SystemImpl.gl2) {
						kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
					} else {
						ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
					}
				}
				++attributesOffset;
			}
		}
		return attributesOffset;
	}
	,__class__: kha_graphics4_VertexBuffer
};
var kha_graphics4_VertexData = $hxClasses["kha.graphics4.VertexData"] = { __ename__ : true, __constructs__ : ["Float1","Float2","Float3","Float4","Float4x4"] };
kha_graphics4_VertexData.Float1 = ["Float1",0];
kha_graphics4_VertexData.Float1.toString = $estr;
kha_graphics4_VertexData.Float1.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float2 = ["Float2",1];
kha_graphics4_VertexData.Float2.toString = $estr;
kha_graphics4_VertexData.Float2.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float3 = ["Float3",2];
kha_graphics4_VertexData.Float3.toString = $estr;
kha_graphics4_VertexData.Float3.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float4 = ["Float4",3];
kha_graphics4_VertexData.Float4.toString = $estr;
kha_graphics4_VertexData.Float4.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float4x4 = ["Float4x4",4];
kha_graphics4_VertexData.Float4x4.toString = $estr;
kha_graphics4_VertexData.Float4x4.__enum__ = kha_graphics4_VertexData;
var kha_graphics4_VertexElement = function(name,data) {
	this.name = name;
	this.data = data;
};
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = true;
kha_graphics4_VertexElement.prototype = {
	__class__: kha_graphics4_VertexElement
};
var kha_graphics4_VertexShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35633;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = true;
kha_graphics4_VertexShader.fromSource = function(source) {
	var shader = new kha_graphics4_VertexShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_VertexShader.prototype = {
	__class__: kha_graphics4_VertexShader
};
var kha_graphics4_VertexStructure = function() {
	this.elements = [];
	this.instanced = false;
};
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = true;
kha_graphics4_VertexStructure.prototype = {
	add: function(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	,size: function() {
		return this.elements.length;
	}
	,byteSize: function() {
		var byteSize = 0;
		var _g1 = 0;
		var _g = this.elements.length;
		while(_g1 < _g) {
			var i = _g1++;
			byteSize += this.dataByteSize(this.elements[i].data);
		}
		return byteSize;
	}
	,dataByteSize: function(data) {
		switch(data[1]) {
		case 0:
			return 4;
		case 1:
			return 8;
		case 2:
			return 12;
		case 3:
			return 16;
		case 4:
			return 64;
		}
	}
	,get: function(index) {
		return this.elements[index];
	}
	,__class__: kha_graphics4_VertexStructure
};
var kha_input_Gamepad = $hx_exports["kha"]["input"]["Gamepad"] = function(index,id) {
	if(id == null) {
		id = "unknown";
	}
	if(index == null) {
		index = 0;
	}
	this.index = index;
	this.axisListeners = [];
	this.buttonListeners = [];
	kha_input_Gamepad.instances[index] = this;
};
$hxClasses["kha.input.Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = true;
kha_input_Gamepad.prototype = {
	sendAxisEvent: function(axis,value) {
		var _g = 0;
		var _g1 = this.axisListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(axis,value);
		}
	}
	,sendButtonEvent: function(button,value) {
		var _g = 0;
		var _g1 = this.buttonListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(button,value);
		}
	}
	,__class__: kha_input_Gamepad
};
var kha_network_Controller = function() {
	this.__id = kha_network_ControllerBuilder.nextId++;
	this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
};
$hxClasses["kha.network.Controller"] = kha_network_Controller;
kha_network_Controller.__name__ = true;
kha_network_Controller.prototype = {
	_id: function() {
		return this.__id;
	}
	,__class__: kha_network_Controller
};
var kha_input_Keyboard = $hx_exports["kha"]["input"]["Keyboard"] = function() {
	kha_network_Controller.call(this);
	this.downListeners = [];
	this.upListeners = [];
	this.pressListeners = [];
	kha_input_Keyboard.instance = this;
};
$hxClasses["kha.input.Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = true;
kha_input_Keyboard.__super__ = kha_network_Controller;
kha_input_Keyboard.prototype = $extend(kha_network_Controller.prototype,{
	sendDownEvent: function(code) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(4));
			bytes.setInt32(0,0);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.downListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendUpEvent: function(code) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(4));
			bytes.setInt32(0,1);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.upListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendPressEvent: function($char) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,2);
			var v = HxOverrides.cca($char,0);
			bytes.b[4] = v & 255;
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.pressListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener($char);
		}
	}
	,__class__: kha_input_Keyboard
});
var kha_input_Mouse = $hx_exports["kha"]["input"]["Mouse"] = function() {
	kha_network_Controller.call(this);
	kha_input_Mouse.instance = this;
};
$hxClasses["kha.input.Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = true;
kha_input_Mouse.__super__ = kha_network_Controller;
kha_input_Mouse.prototype = $extend(kha_network_Controller.prototype,{
	sendLeaveEvent: function(windowId) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(8));
			bytes.setInt32(0,0);
			bytes.setInt32(4,windowId);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowLeaveListeners != null) {
			var _g = 0;
			var _g1 = this.windowLeaveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener();
			}
		}
	}
	,sendDownEvent: function(windowId,button,x,y) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,1);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendUpEvent: function(windowId,button,x,y) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,2);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendMoveEvent: function(windowId,x,y,movementX,movementY) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(24));
			bytes.setInt32(0,3);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,x);
			bytes.setInt32(12,y);
			bytes.setInt32(16,movementX);
			bytes.setInt32(20,movementY);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,movementX,movementY);
			}
		}
	}
	,sendWheelEvent: function(windowId,delta) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(12));
			bytes.setInt32(0,4);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,delta);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowWheelListeners != null) {
			var _g = 0;
			var _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(delta);
			}
		}
	}
	,__class__: kha_input_Mouse
});
var kha_input_MouseImpl = function() {
	kha_input_Mouse.call(this);
};
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = true;
kha_input_MouseImpl.__super__ = kha_input_Mouse;
kha_input_MouseImpl.prototype = $extend(kha_input_Mouse.prototype,{
	__class__: kha_input_MouseImpl
});
var kha_input_Surface = $hx_exports["kha"]["input"]["Surface"] = function() {
	this.touchStartListeners = [];
	this.touchEndListeners = [];
	this.moveListeners = [];
	kha_input_Surface.instance = this;
};
$hxClasses["kha.input.Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = true;
kha_input_Surface.prototype = {
	sendTouchStartEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchStartListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendTouchEndEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchEndListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendMoveEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.moveListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,__class__: kha_input_Surface
};
var kha_internal_BytesBlob = function(bytes) {
	this.myFirstLine = true;
	this.bytes = bytes;
	this.buffer = [];
};
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = true;
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
kha_internal_BytesBlob.fromBytes = function(bytes) {
	return new kha_internal_BytesBlob(bytes);
};
kha_internal_BytesBlob.alloc = function(size) {
	return new kha_internal_BytesBlob(new haxe_io_Bytes(new ArrayBuffer(size)));
};
kha_internal_BytesBlob.readF32 = function(i) {
	var sign = (i & -2147483648) == 0 ? 1 : -1;
	var exp = i >> 23 & 255;
	var man = i & 8388607;
	switch(exp) {
	case 0:
		return 0.0;
	case 255:
		if(man != 0) {
			return NaN;
		} else if(sign > 0) {
			return Infinity;
		} else {
			return -Infinity;
		}
		break;
	default:
		return sign * ((man + 8388608) / 8388608.0) * Math.pow(2,exp - 127);
	}
};
kha_internal_BytesBlob.bit = function(value,position) {
	var b = (value >>> position & 1) == 1;
	if(b) {
		var a = 3;
		++a;
		return true;
	} else {
		var c = 4;
		--c;
		return false;
	}
};
kha_internal_BytesBlob.prototype = {
	sub: function(start,length) {
		return new kha_internal_BytesBlob(this.bytes.sub(start,length));
	}
	,get_length: function() {
		return this.bytes.length;
	}
	,writeU8: function(position,value) {
		this.bytes.b[position] = value & 255;
	}
	,readU8: function(position) {
		var $byte = this.bytes.b[position];
		++position;
		return $byte;
	}
	,readS8: function(position) {
		var $byte = this.bytes.b[position];
		++position;
		var sign = ($byte & 128) == 0 ? 1 : -1;
		$byte &= 127;
		return sign * $byte;
	}
	,readU16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return first * 256 + second;
	}
	,readU16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return second * 256 + first;
	}
	,readU32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
	}
	,readU32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readS16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		var sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		if(sign == -1) {
			return -32767 + first * 256 + second;
		} else {
			return first * 256 + second;
		}
	}
	,readS16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		var sign = (second & 128) == 0 ? 1 : -1;
		second &= 127;
		position += 2;
		if(sign == -1) {
			return -32767 + second * 256 + first;
		} else {
			return second * 256 + first;
		}
	}
	,readS32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		} else {
			return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		}
	}
	,readS32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (fourth & 128) == 0 ? 1 : -1;
		fourth &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
		}
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readF32LE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32LE(position));
	}
	,readF32BE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32BE(position));
	}
	,toString: function() {
		return this.bytes.toString();
	}
	,readUtf8Char: function(position) {
		if(position.value >= this.get_length()) {
			return -1;
		}
		var c = this.readU8(position.value);
		++position.value;
		var value = 0;
		if(!kha_internal_BytesBlob.bit(c,7)) {
			value = c;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && !kha_internal_BytesBlob.bit(c,5)) {
			var a = c & 31;
			var c2 = this.readU8(position.value);
			++position.value;
			var b = c2 & 63;
			value = a << 6 | b;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && kha_internal_BytesBlob.bit(c,5) && !kha_internal_BytesBlob.bit(c,4)) {
			position.value += 2;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && kha_internal_BytesBlob.bit(c,5) && kha_internal_BytesBlob.bit(c,4) && !kha_internal_BytesBlob.bit(c,3)) {
			position.value += 3;
		}
		return value;
	}
	,readUtf8Block: function(position) {
		var bufferindex = 0;
		if(position.value >= this.get_length()) {
			return "";
		}
		while(bufferindex < 2000) {
			var c = this.readUtf8Char(position);
			if(c < 0) {
				break;
			}
			this.buffer[bufferindex] = c;
			++bufferindex;
		}
		if(this.myFirstLine) {
			this.myFirstLine = false;
			if(bufferindex > 2 && this.buffer[0] == 239 && this.buffer[1] == 187 && this.buffer[2] == 191) {
				var chars = [];
				var _g1 = 3;
				var _g = bufferindex - 3;
				while(_g1 < _g) {
					var i = _g1++;
					chars[i - 3] = this.buffer[i];
				}
				return this.toText(chars,bufferindex - 3);
			}
		}
		var chars1 = [];
		var _g11 = 0;
		var _g2 = bufferindex;
		while(_g11 < _g2) {
			var i1 = _g11++;
			chars1[i1] = this.buffer[i1];
		}
		return this.toText(chars1,bufferindex);
	}
	,toText: function(chars,length) {
		var value = "";
		var _g1 = 0;
		var _g = length;
		while(_g1 < _g) {
			var i = _g1++;
			value += String.fromCharCode(chars[i]);
		}
		return value;
	}
	,readUtf8String: function() {
		var text = "";
		var position = { value : 0};
		while(position.value < this.get_length()) text += this.readUtf8Block(position);
		return text;
	}
	,toBytes: function() {
		return this.bytes;
	}
	,unload: function() {
		this.bytes = null;
	}
	,__class__: kha_internal_BytesBlob
	,__properties__: {get_length:"get_length"}
};
var kha_internal_HdrFormat = function() { };
$hxClasses["kha.internal.HdrFormat"] = kha_internal_HdrFormat;
kha_internal_HdrFormat.__name__ = true;
kha_internal_HdrFormat.readBuf = function(buf) {
	var bytesRead = 0;
	while(true) {
		buf[bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < buf.length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readBufOffset = function(buf,offset,length) {
	var bytesRead = 0;
	while(true) {
		buf[offset + bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readPixelsRaw = function(buffer,data,offset,numpixels) {
	var numExpected = 4 * numpixels;
	var numRead = kha_internal_HdrFormat.readBufOffset(data,offset,numExpected);
	if(numRead < numExpected) {
		haxe_Log.trace("Error reading raw pixels: got " + numRead + " bytes, expected " + numExpected,{ fileName : "HdrFormat.hx", lineNumber : 43, className : "kha.internal.HdrFormat", methodName : "readPixelsRaw"});
		return;
	}
};
kha_internal_HdrFormat.readPixelsRawRLE = function(buffer,data,offset,scanline_width,num_scanlines) {
	var this1 = new Uint8Array(4);
	var rgbe = this1;
	var scanline_buffer = null;
	var ptr;
	var ptr_end;
	var count;
	var this2 = new Uint8Array(2);
	var buf = this2;
	var bufferLength = buffer.length;
	while(num_scanlines > 0) {
		if(kha_internal_HdrFormat.readBuf(rgbe) < rgbe.length) {
			haxe_Log.trace("Error reading bytes: expected " + rgbe.length,{ fileName : "HdrFormat.hx", lineNumber : 59, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(rgbe[0] != 2 || rgbe[1] != 2 || (rgbe[2] & 128) != 0) {
			data[offset++] = rgbe[0] & 255;
			data[offset++] = rgbe[1] & 255;
			data[offset++] = rgbe[2] & 255;
			data[offset++] = rgbe[3] & 255;
			kha_internal_HdrFormat.readPixelsRaw(buffer,data,offset,scanline_width * num_scanlines - 1);
			return;
		}
		if(((rgbe[2] & 255) << 8 | rgbe[3] & 255) != scanline_width) {
			haxe_Log.trace("Wrong scanline width " + ((rgbe[2] & 255) << 8 | rgbe[3] & 255) + ", expected " + scanline_width,{ fileName : "HdrFormat.hx", lineNumber : 74, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(scanline_buffer == null) {
			var this3 = new Uint8Array(4 * scanline_width);
			scanline_buffer = this3;
		}
		ptr = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			ptr_end = (i + 1) * scanline_width;
			while(ptr < ptr_end) {
				if(kha_internal_HdrFormat.readBuf(buf) < buf.length) {
					haxe_Log.trace("Error reading 2-byte buffer",{ fileName : "HdrFormat.hx", lineNumber : 88, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
					return;
				}
				if((buf[0] & 255) > 128) {
					count = (buf[0] & 255) - 128;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "HdrFormat.hx", lineNumber : 95, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					while(count-- > 0) scanline_buffer[ptr++] = buf[1] & 255;
				} else {
					count = buf[0] & 255;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "HdrFormat.hx", lineNumber : 106, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					scanline_buffer[ptr++] = buf[1] & 255;
					if(--count > 0) {
						if(kha_internal_HdrFormat.readBufOffset(scanline_buffer,ptr,count) < count) {
							haxe_Log.trace("Error reading non-run data",{ fileName : "HdrFormat.hx", lineNumber : 112, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
							return;
						}
						ptr += count;
					}
				}
			}
		}
		var _g1 = 0;
		var _g2 = scanline_width;
		while(_g1 < _g2) {
			var i1 = _g1++;
			data[offset] = scanline_buffer[i1] & 255;
			data[offset + 1] = scanline_buffer[i1 + scanline_width] & 255;
			data[offset + 2] = scanline_buffer[i1 + 2 * scanline_width] & 255;
			data[offset + 3] = scanline_buffer[i1 + 3 * scanline_width] & 255;
			offset += 4;
		}
		--num_scanlines;
	}
};
kha_internal_HdrFormat.readLine = function() {
	var buf = "";
	while(true) {
		var b = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(b == 10) {
			++kha_internal_HdrFormat.fileOffset;
			break;
		}
		buf += String.fromCharCode(b);
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength)) {
			break;
		}
	}
	return buf;
};
kha_internal_HdrFormat.parse = function(bytes) {
	kha_internal_HdrFormat.buffer = haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes(bytes);
	kha_internal_HdrFormat.bufferLength = kha_internal_HdrFormat.buffer.length;
	kha_internal_HdrFormat.fileOffset = 0;
	var width = 0;
	var height = 0;
	var exposure = 1.0;
	var gamma = 1.0;
	var rle = false;
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		var line = kha_internal_HdrFormat.readLine();
		if(kha_internal_HdrFormat.formatPattern.match(line)) {
			rle = true;
		} else if(kha_internal_HdrFormat.exposurePattern.match(line)) {
			exposure = parseFloat(kha_internal_HdrFormat.exposurePattern.matched(1));
		} else if(kha_internal_HdrFormat.widthHeightPattern.match(line)) {
			height = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(1));
			width = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(2));
			break;
		}
	}
	if(!rle) {
		haxe_Log.trace("File is not run length encoded!",{ fileName : "HdrFormat.hx", lineNumber : 175, className : "kha.internal.HdrFormat", methodName : "parse"});
		return null;
	}
	var this1 = new Uint8Array(width * height * 4);
	var data = this1;
	var scanline_width = width;
	var num_scanlines = height;
	kha_internal_HdrFormat.readPixelsRawRLE(kha_internal_HdrFormat.buffer,data,0,scanline_width,num_scanlines);
	var this2 = new Float32Array(width * height * 4);
	var floatData = this2;
	var offset = 0;
	while(offset < data.length) {
		var r = data[offset] / 255;
		var g = data[offset + 1] / 255;
		var b = data[offset + 2] / 255;
		var e = data[offset + 3];
		var f = Math.pow(2.0,e - 128.0);
		r *= f;
		g *= f;
		b *= f;
		floatData[offset] = r;
		floatData[offset + 1] = g;
		floatData[offset + 2] = b;
		floatData[offset + 3] = 1.0;
		offset += 4;
	}
	return { width : width, height : height, data : floatData};
};
var kha_js_AEAudioChannel = function(element) {
	this.stopped = false;
	this.element = element;
};
$hxClasses["kha.js.AEAudioChannel"] = kha_js_AEAudioChannel;
kha_js_AEAudioChannel.__name__ = true;
kha_js_AEAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_AEAudioChannel.prototype = {
	play: function() {
		this.stopped = false;
		if(kha_SystemImpl.mobile) {
			if(kha_SystemImpl.insideInputEvent) {
				this.element.play();
				kha_SystemImpl.mobileAudioPlaying = true;
			} else if(kha_SystemImpl.mobileAudioPlaying) {
				this.element.play();
			} else {
				kha_js_AEAudioChannel.todo.push(this);
			}
		} else {
			this.element.play();
		}
	}
	,__class__: kha_js_AEAudioChannel
};
var kha_js_AudioElementAudio = function() { };
$hxClasses["kha.js.AudioElementAudio"] = kha_js_AudioElementAudio;
kha_js_AudioElementAudio.__name__ = true;
kha_js_AudioElementAudio._compile = function() {
};
kha_js_AudioElementAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_AudioElementAudio.stream(sound,loop);
};
kha_js_AudioElementAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	sound.element.loop = loop;
	var channel = new kha_js_AEAudioChannel(sound.element);
	channel.play();
	return channel;
};
var kha_js_CanvasGraphics = function(canvas) {
	kha_graphics2_Graphics.call(this);
	this.canvas = canvas;
	kha_js_CanvasGraphics.instance = this;
	this.myColor = kha__$Color_Color_$Impl_$.fromBytes(0,0,0);
	canvas.save();
};
$hxClasses["kha.js.CanvasGraphics"] = kha_js_CanvasGraphics;
kha_js_CanvasGraphics.__name__ = true;
kha_js_CanvasGraphics.__super__ = kha_graphics2_Graphics;
kha_js_CanvasGraphics.prototype = $extend(kha_graphics2_Graphics.prototype,{
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(clear) {
			this.clear(clearColor);
		}
	}
	,clear: function(color) {
		if(color == null) {
			color = 0;
		}
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		if((color >>> 24) * 0.00392156862745098 == 0) {
			this.canvas.clearRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		} else {
			this.canvas.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		}
		this.set_color(this.myColor);
	}
	,end: function() {
	}
	,set_color: function(color) {
		this.myColor = color;
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		return color;
	}
	,fillRect: function(x,y,width,height) {
		var tmp = this.get_opacity();
		this.canvas.globalAlpha = tmp * ((this.myColor >>> 24) * 0.00392156862745098);
		this.canvas.fillRect(x,y,width,height);
		this.canvas.globalAlpha = this.get_opacity();
	}
	,__class__: kha_js_CanvasGraphics
});
var kha_js_EnvironmentVariables = function() {
	kha_EnvironmentVariables.call(this);
};
$hxClasses["kha.js.EnvironmentVariables"] = kha_js_EnvironmentVariables;
kha_js_EnvironmentVariables.__name__ = true;
kha_js_EnvironmentVariables.__super__ = kha_EnvironmentVariables;
kha_js_EnvironmentVariables.prototype = $extend(kha_EnvironmentVariables.prototype,{
	__class__: kha_js_EnvironmentVariables
});
var kha_js_Font = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.kravur = new kha_Kravur(blob);
};
$hxClasses["kha.js.Font"] = kha_js_Font;
kha_js_Font.__name__ = true;
kha_js_Font.__interfaces__ = [kha_Resource];
kha_js_Font.fromBytes = function(bytes) {
	return new kha_js_Font(kha_internal_BytesBlob.fromBytes(bytes));
};
kha_js_Font.prototype = {
	height: function(fontSize) {
		return this.kravur._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this.kravur._get(fontSize).stringWidth(str);
	}
	,widthOfCharacters: function(fontSize,characters,start,length) {
		return this.kravur._get(fontSize).charactersWidth(characters,start,length);
	}
	,baseline: function(fontSize) {
		return this.kravur._get(fontSize).getBaselinePosition();
	}
	,getImage: function(fontSize,color,glyphs) {
		var imageIndex = glyphs == null ? fontSize : fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var this1 = this.images;
			var v = new haxe_ds_IntMap();
			this1.h[imageIndex] = v;
		}
		if(!this.images.h[imageIndex].h.hasOwnProperty(color)) {
			var kravur = this.kravur._get(fontSize,glyphs);
			var canvas = window.document.createElement("canvas");
			canvas.width = kravur.width;
			canvas.height = kravur.height;
			var ctx = canvas.getContext("2d");
			ctx.fillStyle = "black";
			ctx.fillRect(0,0,kravur.width,kravur.height);
			var imageData = ctx.getImageData(0,0,kravur.width,kravur.height);
			var bytes = (js_Boot.__cast(kravur.getTexture() , kha_CanvasImage)).bytes;
			var _g1 = 0;
			var _g = bytes.length;
			while(_g1 < _g) {
				var i = _g1++;
				imageData.data[i * 4] = (color & 16711680) >>> 16;
				imageData.data[i * 4 + 1] = (color & 65280) >>> 8;
				imageData.data[i * 4 + 2] = color & 255;
				imageData.data[i * 4 + 3] = bytes.b[i];
			}
			ctx.putImageData(imageData,0,0);
			var img = window.document.createElement("img");
			img.src = canvas.toDataURL("image/png");
			this.images.h[imageIndex].h[color] = img;
			return img;
		}
		return this.images.h[imageIndex].h[color];
	}
	,unload: function() {
		this.kravur = null;
		this.images = null;
	}
	,__class__: kha_js_Font
};
var kha_js_MobileWebAudio = function() { };
$hxClasses["kha.js.MobileWebAudio"] = kha_js_MobileWebAudio;
kha_js_MobileWebAudio.__name__ = true;
kha_js_MobileWebAudio._init = function() {
	try {
		kha_js_MobileWebAudio._context = new AudioContext();
		return;
	} catch( e ) {
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e1 ) {
	}
};
kha_js_MobileWebAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = new kha_js_MobileWebAudioChannel(sound,loop);
	channel.play();
	return channel;
};
kha_js_MobileWebAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_MobileWebAudio.play(sound,loop);
};
var kha_js_MobileWebAudioChannel = function(sound,loop) {
	this.stopped = false;
	this.paused = false;
	this.buffer = sound._buffer;
	this.loop = loop;
	this.createSource();
};
$hxClasses["kha.js.MobileWebAudioChannel"] = kha_js_MobileWebAudioChannel;
kha_js_MobileWebAudioChannel.__name__ = true;
kha_js_MobileWebAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_MobileWebAudioChannel.prototype = {
	createSource: function() {
		var _gthis = this;
		this.source = kha_js_MobileWebAudio._context.createBufferSource();
		this.source.loop = this.loop;
		this.source.buffer = this.buffer;
		this.source.onended = function() {
			_gthis.stopped = true;
		};
		this.gain = kha_js_MobileWebAudio._context.createGain();
		this.source.connect(this.gain);
		this.gain.connect(kha_js_MobileWebAudio._context.destination);
	}
	,play: function() {
		if(this.paused || this.stopped) {
			this.createSource();
		}
		this.stopped = false;
		if(this.paused) {
			this.paused = false;
			this.startTime = kha_js_MobileWebAudio._context.currentTime - this.pauseTime;
			this.source.start(0,this.pauseTime);
		} else {
			this.startTime = kha_js_MobileWebAudio._context.currentTime;
			this.source.start();
		}
	}
	,__class__: kha_js_MobileWebAudioChannel
};
var kha_js_MobileWebAudioSound = function(filename,done) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		haxe_Log.trace("Error loading " + filename,{ fileName : "MobileWebAudioSound.hx", lineNumber : 25, className : "kha.js.MobileWebAudioSound", methodName : "new"});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		kha_js_MobileWebAudio._context.decodeAudioData(_gthis.compressedData.b.bufferValue,function(buffer) {
			_gthis._buffer = buffer;
			done(_gthis);
		},function() {
			throw new js__$Boot_HaxeError("Audio format not supported");
		});
	};
	request.send(null);
};
$hxClasses["kha.js.MobileWebAudioSound"] = kha_js_MobileWebAudioSound;
kha_js_MobileWebAudioSound.__name__ = true;
kha_js_MobileWebAudioSound.__super__ = kha_Sound;
kha_js_MobileWebAudioSound.prototype = $extend(kha_Sound.prototype,{
	uncompress: function(done) {
		done();
	}
	,__class__: kha_js_MobileWebAudioSound
});
var kha_js_Sound = function(filenames,done) {
	kha_Sound.call(this);
	this.done = done;
	kha_js_Sound.loading.push(this);
	this.element = window.document.createElement("audio");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("audio/ogg") != "" && StringTools.endsWith(filename,".ogg")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplay",$bind(this,this.canPlayThroughListener),false);
	this.element.src = this.filenames[0];
	this.element.preload = "auto";
	this.element.load();
};
$hxClasses["kha.js.Sound"] = kha_js_Sound;
kha_js_Sound.__name__ = true;
kha_js_Sound.__super__ = kha_Sound;
kha_js_Sound.prototype = $extend(kha_Sound.prototype,{
	errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g1 = 0;
			var _g = this.filenames.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		haxe_Log.trace("Error loading " + this.element.src,{ fileName : "Sound.hx", lineNumber : 108, className : "kha.js.Sound", methodName : "errorListener"});
		window.console.log("loadSound failed");
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.done(this);
		HxOverrides.remove(kha_js_Sound.loading,this);
	}
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_Sound
});
var kha_js_WebAudioSound = function(filename,done) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		haxe_Log.trace("Error loading " + filename,{ fileName : "WebAudioSound.hx", lineNumber : 76, className : "kha.js.WebAudioSound", methodName : "new"});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		done(_gthis);
	};
	request.send(null);
};
$hxClasses["kha.js.WebAudioSound"] = kha_js_WebAudioSound;
kha_js_WebAudioSound.__name__ = true;
kha_js_WebAudioSound.__super__ = kha_Sound;
kha_js_WebAudioSound.prototype = $extend(kha_Sound.prototype,{
	superUncompress: function(done) {
		kha_Sound.prototype.uncompress.call(this,done);
	}
	,uncompress: function(done) {
		var _gthis = this;
		kha_audio2_Audio._context.decodeAudioData(this.compressedData.b.bufferValue,function(buffer) {
			var length = buffer.getChannelData(0).length * 2;
			var this1 = new Array(length);
			_gthis.uncompressedData = this1;
			if(buffer.numberOfChannels == 1) {
				var _g1 = 0;
				var _g = buffer.getChannelData(0).length;
				while(_g1 < _g) {
					var i = _g1++;
					_gthis.uncompressedData[i * 2] = buffer.getChannelData(0)[i];
					_gthis.uncompressedData[i * 2 + 1] = buffer.getChannelData(0)[i];
				}
			} else {
				var _g11 = 0;
				var _g2 = buffer.getChannelData(0).length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					_gthis.uncompressedData[i1 * 2] = buffer.getChannelData(0)[i1];
					_gthis.uncompressedData[i1 * 2 + 1] = buffer.getChannelData(1)[i1];
				}
			}
			_gthis.compressedData = null;
			done();
		},function() {
			_gthis.superUncompress(done);
		});
	}
	,__class__: kha_js_WebAudioSound
});
var kha_js_graphics4_ConstantLocation = function(value,type) {
	this.value = value;
	this.type = type;
};
$hxClasses["kha.js.graphics4.ConstantLocation"] = kha_js_graphics4_ConstantLocation;
kha_js_graphics4_ConstantLocation.__name__ = true;
kha_js_graphics4_ConstantLocation.__interfaces__ = [kha_graphics4_ConstantLocation];
kha_js_graphics4_ConstantLocation.prototype = {
	__class__: kha_js_graphics4_ConstantLocation
};
var kha_js_graphics4_Graphics = function(renderTarget) {
	var this1 = new Array(16);
	this.matrixCache = this1;
	this.isDepthAttachment = false;
	this.isCubeMap = false;
	this.colorMaskAlpha = true;
	this.colorMaskBlue = true;
	this.colorMaskGreen = true;
	this.colorMaskRed = true;
	this.depthMask = false;
	this.depthTest = false;
	this.renderTarget = renderTarget;
	this.init();
	if(kha_SystemImpl.gl2) {
		this.instancedExtension = true;
	} else {
		this.instancedExtension = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		this.blendMinMaxExtension = kha_SystemImpl.gl.getExtension("EXT_blend_minmax");
	}
};
$hxClasses["kha.js.graphics4.Graphics"] = kha_js_graphics4_Graphics;
kha_js_graphics4_Graphics.__name__ = true;
kha_js_graphics4_Graphics.__interfaces__ = [kha_graphics4_Graphics];
kha_js_graphics4_Graphics.getBlendFunc = function(factor) {
	switch(factor[1]) {
	case 0:case 2:
		return 0;
	case 1:
		return 1;
	case 3:
		return 770;
	case 4:
		return 772;
	case 5:
		return 771;
	case 6:
		return 773;
	case 7:
		return 768;
	case 8:
		return 774;
	case 9:
		return 769;
	case 10:
		return 775;
	}
};
kha_js_graphics4_Graphics.getBlendOp = function(op) {
	switch(op[1]) {
	case 0:
		return 32774;
	case 1:
		return 32778;
	case 2:
		return 32779;
	case 3:
		return 32775;
	case 4:
		return 32776;
	}
};
kha_js_graphics4_Graphics.prototype = {
	init: function() {
		if(this.renderTarget == null) {
			return;
		}
		this.isCubeMap = js_Boot.__instanceof(this.renderTarget,kha_graphics4_CubeMap);
		if(this.isCubeMap) {
			var cubeMap = js_Boot.__cast(this.renderTarget , kha_graphics4_CubeMap);
			this.renderTargetFrameBuffer = cubeMap.frameBuffer;
			this.renderTargetTexture = cubeMap.texture;
			this.isDepthAttachment = cubeMap.isDepthAttachment;
		} else {
			var image = js_Boot.__cast(this.renderTarget , kha_WebGLImage);
			this.renderTargetFrameBuffer = image.frameBuffer;
			this.renderTargetTexture = image.texture;
		}
	}
	,begin: function(additionalRenderTargets) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth(),kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
			if(additionalRenderTargets != null) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL,3553,this.renderTargetTexture,0);
				var _g1 = 0;
				var _g = additionalRenderTargets.length;
				while(_g1 < _g) {
					var i = _g1++;
					kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1,3553,(js_Boot.__cast(additionalRenderTargets[i] , kha_WebGLImage)).texture,0);
				}
				var attachments = [kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];
				var _g11 = 0;
				var _g2 = additionalRenderTargets.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					attachments.push(kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i1 + 1);
				}
				if(kha_SystemImpl.gl2) {
					kha_SystemImpl.gl.drawBuffers(attachments);
				} else {
					kha_SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);
				}
			}
		}
	}
	,end: function() {
		var error = kha_SystemImpl.gl.getError();
		switch(error) {
		case 0:
			break;
		case 1280:
			haxe_Log.trace("WebGL error: Invalid enum",{ fileName : "Graphics.hx", lineNumber : 130, className : "kha.js.graphics4.Graphics", methodName : "end"});
			break;
		case 1281:
			haxe_Log.trace("WebGL error: Invalid value",{ fileName : "Graphics.hx", lineNumber : 132, className : "kha.js.graphics4.Graphics", methodName : "end"});
			break;
		case 1282:
			haxe_Log.trace("WebGL error: Invalid operation",{ fileName : "Graphics.hx", lineNumber : 134, className : "kha.js.graphics4.Graphics", methodName : "end"});
			break;
		case 1285:
			haxe_Log.trace("WebGL error: Out of memory",{ fileName : "Graphics.hx", lineNumber : 138, className : "kha.js.graphics4.Graphics", methodName : "end"});
			break;
		case 1286:
			haxe_Log.trace("WebGL error: Invalid framebuffer operation",{ fileName : "Graphics.hx", lineNumber : 136, className : "kha.js.graphics4.Graphics", methodName : "end"});
			break;
		case 37442:
			haxe_Log.trace("WebGL error: Context lost",{ fileName : "Graphics.hx", lineNumber : 140, className : "kha.js.graphics4.Graphics", methodName : "end"});
			break;
		default:
			haxe_Log.trace("Unknown WebGL error",{ fileName : "Graphics.hx", lineNumber : 142, className : "kha.js.graphics4.Graphics", methodName : "end"});
		}
	}
	,clear: function(color,depth,stencil) {
		var clearMask = 0;
		if(color != null) {
			clearMask |= 16384;
			kha_SystemImpl.gl.colorMask(true,true,true,true);
			kha_SystemImpl.gl.clearColor(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		}
		if(depth != null) {
			clearMask |= 256;
			kha_SystemImpl.gl.enable(2929);
			kha_SystemImpl.gl.depthMask(true);
			kha_SystemImpl.gl.clearDepth(depth);
		}
		if(stencil != null) {
			clearMask |= 1024;
			kha_SystemImpl.gl.enable(2960);
			kha_SystemImpl.gl.stencilMask(255);
			kha_SystemImpl.gl.clearStencil(stencil);
		}
		kha_SystemImpl.gl.clear(clearMask);
		kha_SystemImpl.gl.colorMask(this.colorMaskRed,this.colorMaskGreen,this.colorMaskBlue,this.colorMaskAlpha);
		if(this.depthTest) {
			kha_SystemImpl.gl.enable(2929);
		} else {
			kha_SystemImpl.gl.disable(2929);
		}
		kha_SystemImpl.gl.depthMask(this.depthMask);
	}
	,setDepthMode: function(write,mode) {
		switch(mode[1]) {
		case 0:
			if(write) {
				kha_SystemImpl.gl.enable(2929);
			} else {
				kha_SystemImpl.gl.disable(2929);
			}
			this.depthTest = write;
			kha_SystemImpl.gl.depthFunc(519);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(512);
			break;
		case 2:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(514);
			break;
		case 3:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(517);
			break;
		case 4:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(513);
			break;
		case 5:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(515);
			break;
		case 6:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(516);
			break;
		case 7:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(518);
			break;
		}
		kha_SystemImpl.gl.depthMask(write);
		this.depthMask = write;
	}
	,setBlendingMode: function(source,destination,operation,alphaSource,alphaDestination,alphaOperation) {
		if(source == kha_graphics4_BlendingFactor.BlendOne && destination == kha_graphics4_BlendingFactor.BlendZero) {
			kha_SystemImpl.gl.disable(3042);
		} else {
			kha_SystemImpl.gl.enable(3042);
			kha_SystemImpl.gl.blendFuncSeparate(kha_js_graphics4_Graphics.getBlendFunc(source),kha_js_graphics4_Graphics.getBlendFunc(destination),kha_js_graphics4_Graphics.getBlendFunc(alphaSource),kha_js_graphics4_Graphics.getBlendFunc(alphaDestination));
			kha_SystemImpl.gl.blendEquationSeparate(kha_js_graphics4_Graphics.getBlendOp(operation),kha_js_graphics4_Graphics.getBlendOp(alphaOperation));
		}
	}
	,setVertexBuffer: function(vertexBuffer) {
		(js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(0);
	}
	,setIndexBuffer: function(indexBuffer) {
		this.indicesCount = indexBuffer.count();
		(js_Boot.__cast(indexBuffer , kha_graphics4_IndexBuffer)).set();
	}
	,setTexture: function(stage,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast(texture , kha_WebGLImage)).set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setTextureParameters: function(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(texunit , kha_js_graphics4_TextureUnit)).value);
		switch(uAddressing[1]) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10242,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10242,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			break;
		}
		switch(vAddressing[1]) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10243,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			break;
		}
		switch(minificationFilter[1]) {
		case 0:
			switch(mipmapFilter[1]) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9984);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9986);
				break;
			}
			break;
		case 1:case 2:
			switch(mipmapFilter[1]) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9729);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9985);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9987);
				break;
			}
			if(minificationFilter == kha_graphics4_TextureFilter.AnisotropicFilter) {
				kha_SystemImpl.gl.texParameteri(3553,kha_SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT,4);
			}
			break;
		}
		switch(magnificationFilter[1]) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10240,9728);
			break;
		case 1:case 2:
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			break;
		}
	}
	,setCullMode: function(mode) {
		switch(mode[1]) {
		case 0:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1029);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1028);
			break;
		case 2:
			kha_SystemImpl.gl.disable(2884);
			break;
		}
	}
	,setPipeline: function(pipe) {
		this.setCullMode(pipe.cullMode);
		this.setDepthMode(pipe.depthWrite,pipe.depthMode);
		this.setStencilParameters(pipe.stencilMode,pipe.stencilBothPass,pipe.stencilDepthFail,pipe.stencilFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
		this.setBlendingMode(pipe.blendSource,pipe.blendDestination,pipe.blendOperation,pipe.alphaBlendSource,pipe.alphaBlendDestination,pipe.alphaBlendOperation);
		pipe.set();
		this.colorMaskRed = pipe.colorWriteMaskRed;
		this.colorMaskGreen = pipe.colorWriteMaskGreen;
		this.colorMaskBlue = pipe.colorWriteMaskBlue;
		this.colorMaskAlpha = pipe.colorWriteMaskAlpha;
	}
	,setMatrix: function(location,matrix) {
		this.matrixCache[0] = matrix._00;
		this.matrixCache[1] = matrix._01;
		this.matrixCache[2] = matrix._02;
		this.matrixCache[3] = matrix._03;
		this.matrixCache[4] = matrix._10;
		this.matrixCache[5] = matrix._11;
		this.matrixCache[6] = matrix._12;
		this.matrixCache[7] = matrix._13;
		this.matrixCache[8] = matrix._20;
		this.matrixCache[9] = matrix._21;
		this.matrixCache[10] = matrix._22;
		this.matrixCache[11] = matrix._23;
		this.matrixCache[12] = matrix._30;
		this.matrixCache[13] = matrix._31;
		this.matrixCache[14] = matrix._32;
		this.matrixCache[15] = matrix._33;
		kha_SystemImpl.gl.uniformMatrix4fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrixCache);
	}
	,drawIndexedVertices: function(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
		var size = type == 5123 ? 2 : 4;
		kha_SystemImpl.gl.drawElements(4,count == -1 ? this.indicesCount : count,type,start * size);
	}
	,convertStencilAction: function(action) {
		switch(action[1]) {
		case 0:
			return 7680;
		case 1:
			return 0;
		case 2:
			return 7681;
		case 3:
			return 7682;
		case 4:
			return 34055;
		case 5:
			return 7683;
		case 6:
			return 34056;
		case 7:
			return 5386;
		}
	}
	,setStencilParameters: function(compareMode,bothPass,depthFail,stencilFail,referenceValue,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(compareMode == kha_graphics4_CompareMode.Always && bothPass == kha_graphics4_StencilAction.Keep && depthFail == kha_graphics4_StencilAction.Keep && stencilFail == kha_graphics4_StencilAction.Keep) {
			kha_SystemImpl.gl.disable(2960);
		} else {
			kha_SystemImpl.gl.enable(2960);
			var stencilFunc = 0;
			switch(compareMode[1]) {
			case 0:
				stencilFunc = 519;
				break;
			case 1:
				stencilFunc = 512;
				break;
			case 2:
				stencilFunc = 514;
				break;
			case 3:
				stencilFunc = 517;
				break;
			case 4:
				stencilFunc = 513;
				break;
			case 5:
				stencilFunc = 515;
				break;
			case 6:
				stencilFunc = 516;
				break;
			case 7:
				stencilFunc = 518;
				break;
			}
			kha_SystemImpl.gl.stencilMask(writeMask);
			kha_SystemImpl.gl.stencilOp(this.convertStencilAction(stencilFail),this.convertStencilAction(depthFail),this.convertStencilAction(bothPass));
			kha_SystemImpl.gl.stencilFunc(stencilFunc,referenceValue,readMask);
		}
	}
	,renderTargetsInvertedY: function() {
		return true;
	}
	,__class__: kha_js_graphics4_Graphics
};
var kha_js_graphics4_Graphics2 = function(canvas) {
	kha_graphics4_Graphics2.call(this,canvas);
};
$hxClasses["kha.js.graphics4.Graphics2"] = kha_js_graphics4_Graphics2;
kha_js_graphics4_Graphics2.__name__ = true;
kha_js_graphics4_Graphics2.__super__ = kha_graphics4_Graphics2;
kha_js_graphics4_Graphics2.prototype = $extend(kha_graphics4_Graphics2.prototype,{
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		kha_SystemImpl.gl.disable(2929);
		kha_SystemImpl.gl.depthFunc(519);
		kha_graphics4_Graphics2.prototype.begin.call(this,clear,clearColor);
	}
	,__class__: kha_js_graphics4_Graphics2
});
var kha_js_graphics4_TextureUnit = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.TextureUnit"] = kha_js_graphics4_TextureUnit;
kha_js_graphics4_TextureUnit.__name__ = true;
kha_js_graphics4_TextureUnit.__interfaces__ = [kha_graphics4_TextureUnit];
kha_js_graphics4_TextureUnit.prototype = {
	__class__: kha_js_graphics4_TextureUnit
};
var kha_vr_VrInterface = function() {
};
$hxClasses["kha.vr.VrInterface"] = kha_vr_VrInterface;
kha_vr_VrInterface.__name__ = true;
kha_vr_VrInterface.prototype = {
	IsVrEnabled: function() {
		return false;
	}
	,__class__: kha_vr_VrInterface
};
var kha_js_vr_VrInterface = function() {
	this.vrHeight = 0;
	this.vrWidth = 0;
	this.height = 0;
	this.width = 0;
	this.vrEnabled = false;
	kha_vr_VrInterface.call(this);
	var displayEnabled = navigator.getVRDisplays;
	if(displayEnabled) {
		this.vrEnabled = true;
		this.getVRDisplays();
		haxe_Log.trace("Display enabled.",{ fileName : "VrInterface.hx", lineNumber : 36, className : "kha.js.vr.VrInterface", methodName : "new"});
	}
};
$hxClasses["kha.js.vr.VrInterface"] = kha_js_vr_VrInterface;
kha_js_vr_VrInterface.__name__ = true;
kha_js_vr_VrInterface.__super__ = kha_vr_VrInterface;
kha_js_vr_VrInterface.prototype = $extend(kha_vr_VrInterface.prototype,{
	getVRDisplays: function() {
		var _gthis = this;
		var vrDisplayInstance = navigator.getVRDisplays();
		vrDisplayInstance.then(function(displays) {
			if(displays.length > 0) {
				_gthis.frameData = new VRFrameData();
				_gthis.vrDisplay = displays[0];
				_gthis.vrDisplay.depthNear = 0.1;
				_gthis.vrDisplay.depthFar = 1024.0;
				var leftEye = _gthis.vrDisplay.getEyeParameters("left");
				var rightEye = _gthis.vrDisplay.getEyeParameters("right");
				_gthis.width = kha_SystemImpl.khanvas.width;
				_gthis.height = kha_SystemImpl.khanvas.height;
				_gthis.vrWidth = Math.max(leftEye.renderWidth,rightEye.renderWidth) * 2 | 0;
				_gthis.vrHeight = Math.max(leftEye.renderHeight,rightEye.renderHeight) | 0;
			} else {
				haxe_Log.trace("There are no VR displays connected.",{ fileName : "VrInterface.hx", lineNumber : 56, className : "kha.js.vr.VrInterface", methodName : "getVRDisplays"});
			}
		});
	}
	,IsVrEnabled: function() {
		return this.vrEnabled;
	}
	,__class__: kha_js_vr_VrInterface
});
var kha_network_ControllerBuilder = function() { };
$hxClasses["kha.network.ControllerBuilder"] = kha_network_ControllerBuilder;
kha_network_ControllerBuilder.__name__ = true;
var kha_network_Session = function() {
	this.controllers = new haxe_ds_IntMap();
};
$hxClasses["kha.network.Session"] = kha_network_Session;
kha_network_Session.__name__ = true;
kha_network_Session.the = function() {
	return kha_network_Session.instance;
};
kha_network_Session.prototype = {
	sendControllerUpdate: function(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				var newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	,__class__: kha_network_Session
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = true;
$hxClasses["Array"] = Array;
Array.__name__ = true;
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
Main.projectWindowMode = kha_WindowMode.Window;
Main.projectWidth = 960;
Main.projectHeight = 540;
armory_renderpath_DynamicResolutionScale.dynamicScale = 1.0;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL = [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,-1,-1];
haxe_zip_InflateImpl.LEN_BASE_VAL_TBL = [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];
haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL = [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,-1,-1];
haxe_zip_InflateImpl.DIST_BASE_VAL_TBL = [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];
haxe_zip_InflateImpl.CODE_LENGTHS_POS = [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
iron_App.traitInits = [];
iron_App.traitUpdates = [];
iron_App.traitLateUpdates = [];
iron_App.traitRenders = [];
iron_App.traitRenders2D = [];
iron_App.pauseUpdates = false;
iron_math_Mat4.helpVec = new iron_math_Vec4();
iron_math_Mat4.helpMat = iron_math_Mat4.identity();
iron_Scene.framePassed = true;
iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
iron_data_Data.cachedLamps = new haxe_ds_StringMap();
iron_data_Data.cachedCameras = new haxe_ds_StringMap();
iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
iron_data_Data.cachedParticles = new haxe_ds_StringMap();
iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
iron_data_Data.cachedShaders = new haxe_ds_StringMap();
iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
iron_data_Data.cachedImages = new haxe_ds_StringMap();
iron_data_Data.cachedSounds = new haxe_ds_StringMap();
iron_data_Data.loadingMeshes = new haxe_ds_StringMap();
iron_data_Data.loadingLamps = new haxe_ds_StringMap();
iron_data_Data.loadingCameras = new haxe_ds_StringMap();
iron_data_Data.loadingMaterials = new haxe_ds_StringMap();
iron_data_Data.loadingParticles = new haxe_ds_StringMap();
iron_data_Data.loadingWorlds = new haxe_ds_StringMap();
iron_data_Data.loadingShaders = new haxe_ds_StringMap();
iron_data_Data.loadingSceneRaws = new haxe_ds_StringMap();
iron_data_Data.assetsLoaded = 0;
iron_data_Data.loadingBlobs = new haxe_ds_StringMap();
iron_data_Data.loadingImages = new haxe_ds_StringMap();
iron_data_Data.loadingSounds = new haxe_ds_StringMap();
iron_data_MaterialData.uidCounter = 0;
iron_data_MaterialContext.num = 0;
iron_math_Quat.helpVec0 = new iron_math_Vec4();
iron_math_Quat.helpVec1 = new iron_math_Vec4();
iron_math_Quat.helpVec2 = new iron_math_Vec4();
iron_object_Animation.m1 = iron_math_Mat4.identity();
iron_object_Animation.m2 = iron_math_Mat4.identity();
iron_object_Animation.vpos = new iron_math_Vec4();
iron_object_Animation.vpos2 = new iron_math_Vec4();
iron_object_Animation.vscl = new iron_math_Vec4();
iron_object_Animation.vscl2 = new iron_math_Vec4();
iron_object_Animation.q1 = new iron_math_Quat();
iron_object_Animation.q2 = new iron_math_Quat();
iron_object_BoneAnimation.skinMaxBones = 50;
iron_object_BoneAnimation.vpos = new iron_math_Vec4();
iron_object_BoneAnimation.vscl = new iron_math_Vec4();
iron_object_BoneAnimation.q1 = new iron_math_Quat();
iron_object_BoneAnimation.q2 = new iron_math_Quat();
iron_object_BoneAnimation.vpos2 = new iron_math_Vec4();
iron_object_BoneAnimation.vscl2 = new iron_math_Vec4();
iron_object_Object.uidCounter = 0;
iron_object_Object.seed = 1;
iron_object_CameraObject.temp = new iron_math_Vec4();
iron_object_LampObject.cascadeCount = 1;
iron_object_LampObject.cascadeSplitFactor = 0.8;
iron_object_Transform.temp = iron_math_Mat4.identity();
iron_system_Input.gamepads = [];
iron_system_Time.scale = 1.0;
iron_system_Time.last = 0.0;
iron_system_Time.realDelta = 0.0;
iron_system_Tween.eases = [iron_system_Tween.easeLinear,iron_system_Tween.easeExpoOut];
iron_system_Tween.anims = [];
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
kha_CompilerDefines.canvas_id = "khanvas";
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.Material_mesh_fragData0 = "s1368:I3ZlcnNpb24gMTAwCiNleHRlbnNpb24gR0xfRVhUX2RyYXdfYnVmZmVycyA6IHJlcXVpcmUKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBoaWdocCBpbnQ7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzMgd25vcm1hbDsKCmhpZ2hwIHZlYzIgb2N0YWhlZHJvbldyYXAoaGlnaHAgdmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:IDEuMCA6IC0xLjApOwp9CgpoaWdocCBmbG9hdCBwYWNrRmxvYXQoaGlnaHAgZmxvYXQgZjEsIGhpZ2hwIGZsb2F0IGYyKQp7CiAgICBoaWdocCBmbG9hdCBpbmRleCA9IGZsb29yKGYxICogMTAwLjApOwogICAgaGlnaHAgZmxvYXQgYWxwaGEgPSBjbGFtcChmMiwgMC4wLCAwLjk5OTAwMDAxMjg3NDYwMzI3MTQ4NDM3NSk7CiAgICByZXR1cm4gaW5kZXggKyBhbHBoYTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgaGlnaHAgdmVjMyBiYXNlY29sID0gdmVjMygwLjgwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSk7CiAgICBoaWdocCBmbG9hdCByb3VnaG5lc3MgPSAwLjA7CiAgICBoaWdocCBmbG9hdCBtZXRhbGxpYyA9IDAuMDsKICAgIGhpZ2hwIGZsb2F0IG9jY2x1c2lvbiA9IDEuMDsKICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICBoaWdocCB2ZWMyIF84MDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF84MCA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzgwID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfODAueCwgXzgwLnksIG4ueik7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQobi54eSwgcGFja0Zsb2F0KG1ldGFsbGljLCByb3VnaG5lc3MpLCAxLjAgLSBnbF9GcmFnQ29vcmQueik7CiAgICBnbF9GcmFnRGF0YVsxXSA9IHZlYzQoYmFzZWNvbCwgb2NjbHVzaW9uKTsKfQoK";
kha_Shaders.Material_mesh_fragData1 = "s1259:I3ZlcnNpb24gMTAwCiNleHRlbnNpb24gR0xfRVhUX2RyYXdfYnVmZmVycyA6IHJlcXVpcmUKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIGludDsKCnZhcnlpbmcgdmVjMyB3bm9ybWFsOwoKdmVjMiBvY3RhaGVkcm9uV3JhcCh2ZWMyIHYpCnsKICAgIHJldHVybiAodmVjMigxLjApIC0gYWJzKHYueXgpKSAqIHZlYzIoKHYueCA%PSAwLjApID8gMS4wIDogLTEuMCwgKHYueSA%PSAwLjApID8gMS4wIDogLTEuMCk7Cn0KCmZsb2F0IHBhY2tGbG9hdChmbG9hdCBmMSwgZmxvYXQgZjIpCnsKICAgIGZsb2F0IGluZGV4ID0gZmxvb3IoZjEgKiAxMDAuMCk7CiAgICBmbG9hdCBhbHBoYSA9IGNsYW1wKGYyLCAwLjAsIDAuOTk5MDAwMDEyODc0NjAzMjcxNDg0Mzc1KTsKICAgIHJldHVybiBpbmRleCArIGFscGhhOwp9Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWMzIG4gPSBub3JtYWxpemUod25vcm1hbCk7CiAgICB2ZWMzIGJhc2Vjb2wgPSB2ZWMzKDAuODAwMDAwMDExOTIwOTI4OTU1MDc4MTI1KTsKICAgIGZsb2F0IHJvdWdobmVzcyA9IDAuMDsKICAgIGZsb2F0IG1ldGFsbGljID0gMC4wOwogICAgZmxvYXQgb2NjbHVzaW9uID0gMS4wOwogICAgbiAvPSB2ZWMzKChhYnMobi54KSArIGFicyhuLnkpKSArIGFicyhuLnopKTsKICAgIHZlYzIgXzgwOwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzgwID0gbi54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfODAgPSBvY3RhaGVkcm9uV3JhcChuLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF84MC54LCBfODAueSwgbi56KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChuLnh5LCBwYWNrRmxvYXQobWV0YWxsaWMsIHJvdWdobmVzcyksIDEuMCAtIGdsX0ZyYWdDb29yZC56KTsKICAgIGdsX0ZyYWdEYXRhWzFdID0gdmVjNChiYXNlY29sLCBvY2NsdXNpb24pOwp9Cgo";
kha_Shaders.Material_mesh_fragData2 = "s1227:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CgppbiB2ZWMzIHdub3JtYWw7Cm91dCB2ZWM0IGZyYWdDb2xvclsyXTsKCnZlYzIgb2N0YWhlZHJvbldyYXAodmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:IDEuMCA6IC0xLjApOwp9CgpmbG9hdCBwYWNrRmxvYXQoZmxvYXQgZjEsIGZsb2F0IGYyKQp7CiAgICBmbG9hdCBpbmRleCA9IGZsb29yKGYxICogMTAwLjApOwogICAgZmxvYXQgYWxwaGEgPSBjbGFtcChmMiwgMC4wLCAwLjk5OTAwMDAxMjg3NDYwMzI3MTQ4NDM3NSk7CiAgICByZXR1cm4gaW5kZXggKyBhbHBoYTsKfQoKdm9pZCBtYWluKCkKewogICAgdmVjMyBuID0gbm9ybWFsaXplKHdub3JtYWwpOwogICAgdmVjMyBiYXNlY29sID0gdmVjMygwLjgwMDAwMDAxMTkyMDkyODk1NTA3ODEyNSk7CiAgICBmbG9hdCByb3VnaG5lc3MgPSAwLjA7CiAgICBmbG9hdCBtZXRhbGxpYyA9IDAuMDsKICAgIGZsb2F0IG9jY2x1c2lvbiA9IDEuMDsKICAgIG4gLz0gdmVjMygoYWJzKG4ueCkgKyBhYnMobi55KSkgKyBhYnMobi56KSk7CiAgICB2ZWMyIF84MDsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF84MCA9IG4ueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzgwID0gb2N0YWhlZHJvbldyYXAobi54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfODAueCwgXzgwLnksIG4ueik7CiAgICBmcmFnQ29sb3JbMF0gPSB2ZWM0KG4ueHksIHBhY2tGbG9hdChtZXRhbGxpYywgcm91Z2huZXNzKSwgMS4wIC0gZ2xfRnJhZ0Nvb3JkLnopOwogICAgZnJhZ0NvbG9yWzFdID0gdmVjNChiYXNlY29sLCBvY2NsdXNpb24pOwp9Cgo";
kha_Shaders.Material_mesh_vertData0 = "s300:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKCmF0dHJpYnV0ZSB2ZWMzIHBvczsKdmFyeWluZyB2ZWMzIHdub3JtYWw7CmF0dHJpYnV0ZSB2ZWMzIG5vcjsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgc3BvcyA9IHZlYzQocG9zLCAxLjApOwogICAgd25vcm1hbCA9IG5vcm1hbGl6ZShOICogbm9yKTsKICAgIGdsX1Bvc2l0aW9uID0gV1ZQICogc3BvczsKfQoK";
kha_Shaders.Material_mesh_vertData1 = "s364:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0MyBOOwp1bmlmb3JtIG1lZGl1bXAgbWF0NCBXVlA7CgphdHRyaWJ1dGUgbWVkaXVtcCB2ZWMzIHBvczsKdmFyeWluZyBtZWRpdW1wIHZlYzMgd25vcm1hbDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyBub3I7Cgp2b2lkIG1haW4oKQp7CiAgICBtZWRpdW1wIHZlYzQgc3BvcyA9IHZlYzQocG9zLCAxLjApOwogICAgd25vcm1hbCA9IG5vcm1hbGl6ZShOICogbm9yKTsKICAgIGdsX1Bvc2l0aW9uID0gV1ZQICogc3BvczsKfQoK";
kha_Shaders.Material_mesh_vertData2 = "s344:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgbWF0MyBOOwp1bmlmb3JtIG1lZGl1bXAgbWF0NCBXVlA7CgppbiBtZWRpdW1wIHZlYzMgcG9zOwpvdXQgbWVkaXVtcCB2ZWMzIHdub3JtYWw7CmluIG1lZGl1bXAgdmVjMyBub3I7Cgp2b2lkIG1haW4oKQp7CiAgICBtZWRpdW1wIHZlYzQgc3BvcyA9IHZlYzQocG9zLCAxLjApOwogICAgd25vcm1hbCA9IG5vcm1hbGl6ZShOICogbm9yKTsKICAgIGdsX1Bvc2l0aW9uID0gV1ZQICogc3BvczsKfQoK";
kha_Shaders.Material_shadowmap_fragData0 = "s103:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewp9Cgo";
kha_Shaders.Material_shadowmap_fragData1 = "s106:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp2b2lkIG1haW4oKQp7Cn0KCg";
kha_Shaders.Material_shadowmap_fragData2 = "s110:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp2b2lkIG1haW4oKQp7Cn0KCg";
kha_Shaders.Material_shadowmap_vertData0 = "s207:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgTFdWUDsKCmF0dHJpYnV0ZSB2ZWMzIHBvczsKYXR0cmlidXRlIHZlYzMgbm9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Material_shadowmap_vertData1 = "s250:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBMV1ZQOwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyBwb3M7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzMgbm9yOwoKdm9pZCBtYWluKCkKewogICAgbWVkaXVtcCB2ZWM0IHNwb3MgPSB2ZWM0KHBvcywgMS4wKTsKICAgIGdsX1Bvc2l0aW9uID0gTFdWUCAqIHNwb3M7Cn0KCg";
kha_Shaders.Material_shadowmap_vertData2 = "s235:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBMV1ZQOwoKaW4gbWVkaXVtcCB2ZWMzIHBvczsKaW4gbWVkaXVtcCB2ZWMzIG5vcjsKCnZvaWQgbWFpbigpCnsKICAgIG1lZGl1bXAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.blur_edge_pass_fragData0 = "s2850:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlcjA7CnVuaWZvcm0gaGlnaHAgdmVjMiBkaXJJbnY7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCmhpZ2hwIHZlYzIgb2N0YWhlZHJvbldyYXAoaGlnaHAgdmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:IDEuMCA6IC0xLjApOwp9CgpoaWdocCB2ZWMzIGdldE5vcihoaWdocCB2ZWMyIGVuYykKewogICAgaGlnaHAgdmVjMyBuOwogICAgbi56ID0gKDEuMCAtIGFicyhlbmMueCkpIC0gYWJzKGVuYy55KTsKICAgIGhpZ2hwIHZlYzIgXzU4OwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzU4ID0gZW5jOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF81OCA9IG9jdGFoZWRyb25XcmFwKGVuYyk7CiAgICB9CiAgICBuID0gdmVjMyhfNTgueCwgXzU4LnksIG4ueik7CiAgICBuID0gbm9ybWFsaXplKG4pOwogICAgcmV0dXJuIG47Cn0KCmhpZ2hwIGZsb2F0IGRvQmx1cihoaWdocCBmbG9hdCBibHVyV2VpZ2h0LCBpbnQgcG9zLCBoaWdocCB2ZWMzIG5vciwgaGlnaHAgdmVjMiB0ZXhDb29yZF8xKQp7CiAgICBoaWdocCBmbG9hdCBwb3NhZGQgPSBmbG9hdChwb3MpICsgMC41OwogICAgaGlnaHAgdmVjMyBub3IyID0gZ2V0Tm9yKHRleHR1cmUyRChnYnVmZmVyMCwgdGV4Q29vcmRfMSArIChkaXJJbnYgKiBmbG9hdChwb3MpKSkueHkpOwogICAgaGlnaHAgZmxvYXQgaW5mbHVlbmNlRmFjdG9yID0gc3RlcCgwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSwgZG90KG5vcjIsIG5vcikpOwogICAgaGlnaHAgZmxvYXQgY29sID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmRfMSArIChkaXJJbnYgKiBwb3NhZGQpKS54OwogICAgZ2xfRnJhZ0RhdGFbMF0ueCArPSAoKGNvbCAqIGJsdXJXZWlnaHQpICogaW5mbHVlbmNlRmFjdG9yKTsKICAgIGhpZ2hwIGZsb2F0IHdlaWdodCA9IGJsdXJXZWlnaHQgKiBpbmZsdWVuY2VGYWN0b3I7CiAgICBub3IyID0gZ2V0Tm9yKHRleHR1cmUyRChnYnVmZmVyMCwgdGV4Q29vcmRfMSAtIChkaXJJbnYgKiBmbG9hdChwb3MpKSkueHkpOwogICAgaW5mbHVlbmNlRmFjdG9yID0gc3RlcCgwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSwgZG90KG5vcjIsIG5vcikpOwogICAgY29sID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmRfMSAtIChkaXJJbnYgKiBwb3NhZGQpKS54OwogICAgZ2xfRnJhZ0RhdGFbMF0ueCArPSAoKGNvbCAqIGJsdXJXZWlnaHQpICogaW5mbHVlbmNlRmFjdG9yKTsKICAgIHdlaWdodCArPSAoYmx1cldlaWdodCAqIGluZmx1ZW5jZUZhY3Rvcik7CiAgICByZXR1cm4gd2VpZ2h0Owp9Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMyIHRjID0gdGV4Q29vcmQgKiAxLjA7CiAgICBoaWdocCB2ZWMzIG5vciA9IGdldE5vcih0ZXh0dXJlMkQoZ2J1ZmZlcjAsIHRleENvb3JkKS54eSk7CiAgICBnbF9GcmFnRGF0YVswXS54ID0gdGV4dHVyZTJEKHRleCwgdGMpLnggKiAwLjIyNzAyNjk5ODk5NjczNDYxOTE0MDYyNTsKICAgIGhpZ2hwIGZsb2F0IHdlaWdodCA9IDAuMjI3MDI2OTk4OTk2NzM0NjE5MTQwNjI1OwogICAgaGlnaHAgZmxvYXQgXzE3OCA9IGRvQmx1cigwLjE5NDU5NDYwNjc1NzE2NDAwMTQ2NDg0Mzc1LCAxLCBub3IsIHRjKTsKICAgIHdlaWdodCArPSBfMTc4OwogICAgaGlnaHAgZmxvYXQgXzE4NSA9IGRvQmx1cigwLjEyMTYyMTYwMTI4MzU1MDI2MjQ1MTE3MTg3NSwgMiwgbm9yLCB0Yyk7CiAgICB3ZWlnaHQgKz0gXzE4NTsKICAgIGhpZ2hwIGZsb2F0IF8xOTIgPSBkb0JsdXIoMC4wNTQwNTM5OTk0ODM1ODUzNTc2NjYwMTU2MjUsIDMsIG5vciwgdGMpOwogICAgd2VpZ2h0ICs9IF8xOTI7CiAgICBoaWdocCBmbG9hdCBfMTk5ID0gZG9CbHVyKDAuMDE2MjE2MDAwNTQyMDQ0NjM5NTg3NDAyMzQzNzUsIDQsIG5vciwgdGMpOwogICAgd2VpZ2h0ICs9IF8xOTk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoZ2xfRnJhZ0RhdGFbMF0ueCAvIHdlaWdodCk7Cn0KCg";
kha_Shaders.blur_edge_pass_fragData1 = "s2666:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIHZlYzIgZGlySW52Owp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKCnZlYzIgb2N0YWhlZHJvbldyYXAodmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:IDEuMCA6IC0xLjApOwp9Cgp2ZWMzIGdldE5vcih2ZWMyIGVuYykKewogICAgdmVjMyBuOwogICAgbi56ID0gKDEuMCAtIGFicyhlbmMueCkpIC0gYWJzKGVuYy55KTsKICAgIHZlYzIgXzU4OwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzU4ID0gZW5jOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF81OCA9IG9jdGFoZWRyb25XcmFwKGVuYyk7CiAgICB9CiAgICBuID0gdmVjMyhfNTgueCwgXzU4LnksIG4ueik7CiAgICBuID0gbm9ybWFsaXplKG4pOwogICAgcmV0dXJuIG47Cn0KCmZsb2F0IGRvQmx1cihmbG9hdCBibHVyV2VpZ2h0LCBpbnQgcG9zLCB2ZWMzIG5vciwgdmVjMiB0ZXhDb29yZF8xKQp7CiAgICBmbG9hdCBwb3NhZGQgPSBmbG9hdChwb3MpICsgMC41OwogICAgdmVjMyBub3IyID0gZ2V0Tm9yKHRleHR1cmUyRChnYnVmZmVyMCwgdGV4Q29vcmRfMSArIChkaXJJbnYgKiBmbG9hdChwb3MpKSkueHkpOwogICAgZmxvYXQgaW5mbHVlbmNlRmFjdG9yID0gc3RlcCgwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSwgZG90KG5vcjIsIG5vcikpOwogICAgZmxvYXQgY29sID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmRfMSArIChkaXJJbnYgKiBwb3NhZGQpKS54OwogICAgZ2xfRnJhZ0RhdGFbMF0ueCArPSAoKGNvbCAqIGJsdXJXZWlnaHQpICogaW5mbHVlbmNlRmFjdG9yKTsKICAgIGZsb2F0IHdlaWdodCA9IGJsdXJXZWlnaHQgKiBpbmZsdWVuY2VGYWN0b3I7CiAgICBub3IyID0gZ2V0Tm9yKHRleHR1cmUyRChnYnVmZmVyMCwgdGV4Q29vcmRfMSAtIChkaXJJbnYgKiBmbG9hdChwb3MpKSkueHkpOwogICAgaW5mbHVlbmNlRmFjdG9yID0gc3RlcCgwLjk0OTk5OTk4ODA3OTA3MTA0NDkyMTg3NSwgZG90KG5vcjIsIG5vcikpOwogICAgY29sID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmRfMSAtIChkaXJJbnYgKiBwb3NhZGQpKS54OwogICAgZ2xfRnJhZ0RhdGFbMF0ueCArPSAoKGNvbCAqIGJsdXJXZWlnaHQpICogaW5mbHVlbmNlRmFjdG9yKTsKICAgIHdlaWdodCArPSAoYmx1cldlaWdodCAqIGluZmx1ZW5jZUZhY3Rvcik7CiAgICByZXR1cm4gd2VpZ2h0Owp9Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWMyIHRjID0gdGV4Q29vcmQgKiAxLjA7CiAgICB2ZWMzIG5vciA9IGdldE5vcih0ZXh0dXJlMkQoZ2J1ZmZlcjAsIHRleENvb3JkKS54eSk7CiAgICBnbF9GcmFnRGF0YVswXS54ID0gdGV4dHVyZTJEKHRleCwgdGMpLnggKiAwLjIyNzAyNjk5ODk5NjczNDYxOTE0MDYyNTsKICAgIGZsb2F0IHdlaWdodCA9IDAuMjI3MDI2OTk4OTk2NzM0NjE5MTQwNjI1OwogICAgZmxvYXQgXzE3OCA9IGRvQmx1cigwLjE5NDU5NDYwNjc1NzE2NDAwMTQ2NDg0Mzc1LCAxLCBub3IsIHRjKTsKICAgIHdlaWdodCArPSBfMTc4OwogICAgZmxvYXQgXzE4NSA9IGRvQmx1cigwLjEyMTYyMTYwMTI4MzU1MDI2MjQ1MTE3MTg3NSwgMiwgbm9yLCB0Yyk7CiAgICB3ZWlnaHQgKz0gXzE4NTsKICAgIGZsb2F0IF8xOTIgPSBkb0JsdXIoMC4wNTQwNTM5OTk0ODM1ODUzNTc2NjYwMTU2MjUsIDMsIG5vciwgdGMpOwogICAgd2VpZ2h0ICs9IF8xOTI7CiAgICBmbG9hdCBfMTk5ID0gZG9CbHVyKDAuMDE2MjE2MDAwNTQyMDQ0NjM5NTg3NDAyMzQzNzUsIDQsIG5vciwgdGMpOwogICAgd2VpZ2h0ICs9IF8xOTk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoZ2xfRnJhZ0RhdGFbMF0ueCAvIHdlaWdodCk7Cn0KCg";
kha_Shaders.blur_edge_pass_fragData2 = "s2640:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIHZlYzIgZGlySW52Owp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCm91dCB2ZWM0IGZyYWdDb2xvcjsKaW4gdmVjMiB0ZXhDb29yZDsKCnZlYzIgb2N0YWhlZHJvbldyYXAodmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:IDEuMCA6IC0xLjApOwp9Cgp2ZWMzIGdldE5vcih2ZWMyIGVuYykKewogICAgdmVjMyBuOwogICAgbi56ID0gKDEuMCAtIGFicyhlbmMueCkpIC0gYWJzKGVuYy55KTsKICAgIHZlYzIgXzU4OwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzU4ID0gZW5jOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF81OCA9IG9jdGFoZWRyb25XcmFwKGVuYyk7CiAgICB9CiAgICBuID0gdmVjMyhfNTgueCwgXzU4LnksIG4ueik7CiAgICBuID0gbm9ybWFsaXplKG4pOwogICAgcmV0dXJuIG47Cn0KCmZsb2F0IGRvQmx1cihmbG9hdCBibHVyV2VpZ2h0LCBpbnQgcG9zLCB2ZWMzIG5vciwgdmVjMiB0ZXhDb29yZF8xKQp7CiAgICBmbG9hdCBwb3NhZGQgPSBmbG9hdChwb3MpICsgMC41OwogICAgdmVjMyBub3IyID0gZ2V0Tm9yKHRleHR1cmUoZ2J1ZmZlcjAsIHRleENvb3JkXzEgKyAoZGlySW52ICogZmxvYXQocG9zKSkpLnh5KTsKICAgIGZsb2F0IGluZmx1ZW5jZUZhY3RvciA9IHN0ZXAoMC45NDk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUsIGRvdChub3IyLCBub3IpKTsKICAgIGZsb2F0IGNvbCA9IHRleHR1cmUodGV4LCB0ZXhDb29yZF8xICsgKGRpckludiAqIHBvc2FkZCkpLng7CiAgICBmcmFnQ29sb3IueCArPSAoKGNvbCAqIGJsdXJXZWlnaHQpICogaW5mbHVlbmNlRmFjdG9yKTsKICAgIGZsb2F0IHdlaWdodCA9IGJsdXJXZWlnaHQgKiBpbmZsdWVuY2VGYWN0b3I7CiAgICBub3IyID0gZ2V0Tm9yKHRleHR1cmUoZ2J1ZmZlcjAsIHRleENvb3JkXzEgLSAoZGlySW52ICogZmxvYXQocG9zKSkpLnh5KTsKICAgIGluZmx1ZW5jZUZhY3RvciA9IHN0ZXAoMC45NDk5OTk5ODgwNzkwNzEwNDQ5MjE4NzUsIGRvdChub3IyLCBub3IpKTsKICAgIGNvbCA9IHRleHR1cmUodGV4LCB0ZXhDb29yZF8xIC0gKGRpckludiAqIHBvc2FkZCkpLng7CiAgICBmcmFnQ29sb3IueCArPSAoKGNvbCAqIGJsdXJXZWlnaHQpICogaW5mbHVlbmNlRmFjdG9yKTsKICAgIHdlaWdodCArPSAoYmx1cldlaWdodCAqIGluZmx1ZW5jZUZhY3Rvcik7CiAgICByZXR1cm4gd2VpZ2h0Owp9Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWMyIHRjID0gdGV4Q29vcmQgKiAxLjA7CiAgICB2ZWMzIG5vciA9IGdldE5vcih0ZXh0dXJlKGdidWZmZXIwLCB0ZXhDb29yZCkueHkpOwogICAgZnJhZ0NvbG9yLnggPSB0ZXh0dXJlKHRleCwgdGMpLnggKiAwLjIyNzAyNjk5ODk5NjczNDYxOTE0MDYyNTsKICAgIGZsb2F0IHdlaWdodCA9IDAuMjI3MDI2OTk4OTk2NzM0NjE5MTQwNjI1OwogICAgZmxvYXQgXzE3OCA9IGRvQmx1cigwLjE5NDU5NDYwNjc1NzE2NDAwMTQ2NDg0Mzc1LCAxLCBub3IsIHRjKTsKICAgIHdlaWdodCArPSBfMTc4OwogICAgZmxvYXQgXzE4NSA9IGRvQmx1cigwLjEyMTYyMTYwMTI4MzU1MDI2MjQ1MTE3MTg3NSwgMiwgbm9yLCB0Yyk7CiAgICB3ZWlnaHQgKz0gXzE4NTsKICAgIGZsb2F0IF8xOTIgPSBkb0JsdXIoMC4wNTQwNTM5OTk0ODM1ODUzNTc2NjYwMTU2MjUsIDMsIG5vciwgdGMpOwogICAgd2VpZ2h0ICs9IF8xOTI7CiAgICBmbG9hdCBfMTk5ID0gZG9CbHVyKDAuMDE2MjE2MDAwNTQyMDQ0NjM5NTg3NDAyMzQzNzUsIDQsIG5vciwgdGMpOwogICAgd2VpZ2h0ICs9IF8xOTk7CiAgICBmcmFnQ29sb3IgPSB2ZWM0KGZyYWdDb2xvci54IC8gd2VpZ2h0KTsKfQoK";
kha_Shaders.blur_edge_pass_vertData0 = "s214:I3ZlcnNpb24gMTAwCgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHBvczsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQocG9zLCAwLjAsIDEuMCk7Cn0KCg";
kha_Shaders.blur_edge_pass_vertData1 = "s235:I3ZlcnNpb24gMTAwCgp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.blur_edge_pass_vertData2 = "s224:I3ZlcnNpb24gMzAwIGVzCgpvdXQgbWVkaXVtcCB2ZWMyIHRleENvb3JkOwppbiBtZWRpdW1wIHZlYzIgcG9zOwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKfQoK";
kha_Shaders.compositor_pass_fragData0 = "s3591:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIHRleFN0ZXA7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIHRleDsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyMTsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCmhpZ2hwIHZlYzMgdG9uZW1hcEZpbG1pYyhoaWdocCB2ZWMzIGNvbG9yKQp7CiAgICBoaWdocCB2ZWMzIHggPSBtYXgodmVjMygwLjApLCBjb2xvciAtIHZlYzMoMC4wMDQwMDAwMDAxODk5ODk4MDUyMjE1NTc2MTcxODc1KSk7CiAgICByZXR1cm4gKHggKiAoKHggKiA2LjE5OTk5OTgwOTI2NTEzNjcxODc1KSArIHZlYzMoMC41KSkpIC8gKCh4ICogKCh4ICogNi4xOTk5OTk4MDkyNjUxMzY3MTg3NSkgKyB2ZWMzKDEuNzAwMDAwMDQ3NjgzNzE1ODIwMzEyNSkpKSArIHZlYzMoMC4wNTk5OTk5OTg2NTg4OTU0OTI1NTM3MTA5Mzc1KSk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgdGV4Q28gPSB0ZXhDb29yZDsKICAgIGhpZ2hwIHZlYzIgdGNyZ2JOVyA9IHRleENvICsgKHZlYzIoLTEuMCkgKiB0ZXhTdGVwKTsKICAgIGhpZ2hwIHZlYzIgdGNyZ2JORSA9IHRleENvICsgKHZlYzIoMS4wLCAtMS4wKSAqIHRleFN0ZXApOwogICAgaGlnaHAgdmVjMiB0Y3JnYlNXID0gdGV4Q28gKyAodmVjMigtMS4wLCAxLjApICogdGV4U3RlcCk7CiAgICBoaWdocCB2ZWMyIHRjcmdiU0UgPSB0ZXhDbyArICh2ZWMyKDEuMCkgKiB0ZXhTdGVwKTsKICAgIGhpZ2hwIHZlYzIgdGNyZ2JNID0gdmVjMih0ZXhDbyk7CiAgICBoaWdocCB2ZWMzIHJnYk5XID0gdGV4dHVyZTJEKHRleCwgdGNyZ2JOVykueHl6OwogICAgaGlnaHAgdmVjMyByZ2JORSA9IHRleHR1cmUyRCh0ZXgsIHRjcmdiTkUpLnh5ejsKICAgIGhpZ2hwIHZlYzMgcmdiU1cgPSB0ZXh0dXJlMkQodGV4LCB0Y3JnYlNXKS54eXo7CiAgICBoaWdocCB2ZWMzIHJnYlNFID0gdGV4dHVyZTJEKHRleCwgdGNyZ2JTRSkueHl6OwogICAgaGlnaHAgdmVjMyByZ2JNID0gdGV4dHVyZTJEKHRleCwgdGNyZ2JNKS54eXo7CiAgICBoaWdocCB2ZWMzIGx1bWEgPSB2ZWMzKDAuMjk4OTk5OTk0OTkzMjA5ODM4ODY3MTg3NSwgMC41ODcwMDAwMTIzOTc3NjYxMTMyODEyNSwgMC4xMTQwMDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpOwogICAgaGlnaHAgZmxvYXQgbHVtYU5XID0gZG90KHJnYk5XLCBsdW1hKTsKICAgIGhpZ2hwIGZsb2F0IGx1bWFORSA9IGRvdChyZ2JORSwgbHVtYSk7CiAgICBoaWdocCBmbG9hdCBsdW1hU1cgPSBkb3QocmdiU1csIGx1bWEpOwogICAgaGlnaHAgZmxvYXQgbHVtYVNFID0gZG90KHJnYlNFLCBsdW1hKTsKICAgIGhpZ2hwIGZsb2F0IGx1bWFNID0gZG90KHJnYk0sIGx1bWEpOwogICAgaGlnaHAgZmxvYXQgbHVtYU1pbiA9IG1pbihsdW1hTSwgbWluKG1pbihsdW1hTlcsIGx1bWFORSksIG1pbihsdW1hU1csIGx1bWFTRSkpKTsKICAgIGhpZ2hwIGZsb2F0IGx1bWFNYXggPSBtYXgobHVtYU0sIG1heChtYXgobHVtYU5XLCBsdW1hTkUpLCBtYXgobHVtYVNXLCBsdW1hU0UpKSk7CiAgICBoaWdocCB2ZWMyIGRpcjsKICAgIGRpci54ID0gLSgobHVtYU5XICsgbHVtYU5FKSAtIChsdW1hU1cgKyBsdW1hU0UpKTsKICAgIGRpci55ID0gKGx1bWFOVyArIGx1bWFTVykgLSAobHVtYU5FICsgbHVtYVNFKTsKICAgIGhpZ2hwIGZsb2F0IGRpclJlZHVjZSA9IG1heCgoKChsdW1hTlcgKyBsdW1hTkUpICsgbHVtYVNXKSArIGx1bWFTRSkgKiAwLjAzMTI1LCAwLjAwNzgxMjUpOwogICAgaGlnaHAgZmxvYXQgcmNwRGlyTWluID0gMS4wIC8gKG1pbihhYnMoZGlyLngpLCBhYnMoZGlyLnkpKSArIGRpclJlZHVjZSk7CiAgICBkaXIgPSBtaW4odmVjMig4LjApLCBtYXgodmVjMigtOC4wKSwgZGlyICogcmNwRGlyTWluKSkgKiB0ZXhTdGVwOwogICAgaGlnaHAgdmVjMyByZ2JBID0gKHRleHR1cmUyRCh0ZXgsIHRleENvICsgKGRpciAqIC0wLjE2NjY2NjY3MTYzMzcyMDM5Nzk0OTIxODc1KSkueHl6ICsgdGV4dHVyZTJEKHRleCwgdGV4Q28gKyAoZGlyICogMC4xNjY2NjY2NzE2MzM3MjAzOTc5NDkyMTg3NSkpLnh5eikgKiAwLjU7CiAgICBoaWdocCB2ZWMzIHJnYkIgPSAocmdiQSAqIDAuNSkgKyAoKHRleHR1cmUyRCh0ZXgsIHRleENvICsgKGRpciAqIC0wLjUpKS54eXogKyB0ZXh0dXJlMkQodGV4LCB0ZXhDbyArIChkaXIgKiAwLjUpKS54eXopICogMC4yNSk7CiAgICBoaWdocCBmbG9hdCBsdW1hQiA9IGRvdChyZ2JCLCBsdW1hKTsKICAgIGlmICgobHVtYUIgPCBsdW1hTWluKSB8fCAobHVtYUIgPiBsdW1hTWF4KSkKICAgIHsKICAgICAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQocmdiQS54LCByZ2JBLnksIHJnYkEueiwgZ2xfRnJhZ0RhdGFbMF0udyk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KHJnYkIueCwgcmdiQi55LCByZ2JCLnosIGdsX0ZyYWdEYXRhWzBdLncpOwogICAgfQogICAgaGlnaHAgdmVjMyBfMjc3ID0gdG9uZW1hcEZpbG1pYyhnbF9GcmFnRGF0YVswXS54eXopOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KF8yNzcueCwgXzI3Ny55LCBfMjc3LnosIGdsX0ZyYWdEYXRhWzBdLncpOwp9Cgo";
kha_Shaders.compositor_pass_fragData1 = "s3356:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgdGV4U3RlcDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCB0ZXg7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjA7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjE7Cgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2ZWMzIHRvbmVtYXBGaWxtaWModmVjMyBjb2xvcikKewogICAgdmVjMyB4ID0gbWF4KHZlYzMoMC4wKSwgY29sb3IgLSB2ZWMzKDAuMDA0MDAwMDAwMTg5OTg5ODA1MjIxNTU3NjE3MTg3NSkpOwogICAgcmV0dXJuICh4ICogKCh4ICogNi4xOTk5OTk4MDkyNjUxMzY3MTg3NSkgKyB2ZWMzKDAuNSkpKSAvICgoeCAqICgoeCAqIDYuMTk5OTk5ODA5MjY1MTM2NzE4NzUpICsgdmVjMygxLjcwMDAwMDA0NzY4MzcxNTgyMDMxMjUpKSkgKyB2ZWMzKDAuMDU5OTk5OTk4NjU4ODk1NDkyNTUzNzEwOTM3NSkpOwp9Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWMyIHRleENvID0gdGV4Q29vcmQ7CiAgICB2ZWMyIHRjcmdiTlcgPSB0ZXhDbyArICh2ZWMyKC0xLjApICogdGV4U3RlcCk7CiAgICB2ZWMyIHRjcmdiTkUgPSB0ZXhDbyArICh2ZWMyKDEuMCwgLTEuMCkgKiB0ZXhTdGVwKTsKICAgIHZlYzIgdGNyZ2JTVyA9IHRleENvICsgKHZlYzIoLTEuMCwgMS4wKSAqIHRleFN0ZXApOwogICAgdmVjMiB0Y3JnYlNFID0gdGV4Q28gKyAodmVjMigxLjApICogdGV4U3RlcCk7CiAgICB2ZWMyIHRjcmdiTSA9IHZlYzIodGV4Q28pOwogICAgdmVjMyByZ2JOVyA9IHRleHR1cmUyRCh0ZXgsIHRjcmdiTlcpLnh5ejsKICAgIHZlYzMgcmdiTkUgPSB0ZXh0dXJlMkQodGV4LCB0Y3JnYk5FKS54eXo7CiAgICB2ZWMzIHJnYlNXID0gdGV4dHVyZTJEKHRleCwgdGNyZ2JTVykueHl6OwogICAgdmVjMyByZ2JTRSA9IHRleHR1cmUyRCh0ZXgsIHRjcmdiU0UpLnh5ejsKICAgIHZlYzMgcmdiTSA9IHRleHR1cmUyRCh0ZXgsIHRjcmdiTSkueHl6OwogICAgdmVjMyBsdW1hID0gdmVjMygwLjI5ODk5OTk5NDk5MzIwOTgzODg2NzE4NzUsIDAuNTg3MDAwMDEyMzk3NzY2MTEzMjgxMjUsIDAuMTE0MDAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1KTsKICAgIGZsb2F0IGx1bWFOVyA9IGRvdChyZ2JOVywgbHVtYSk7CiAgICBmbG9hdCBsdW1hTkUgPSBkb3QocmdiTkUsIGx1bWEpOwogICAgZmxvYXQgbHVtYVNXID0gZG90KHJnYlNXLCBsdW1hKTsKICAgIGZsb2F0IGx1bWFTRSA9IGRvdChyZ2JTRSwgbHVtYSk7CiAgICBmbG9hdCBsdW1hTSA9IGRvdChyZ2JNLCBsdW1hKTsKICAgIGZsb2F0IGx1bWFNaW4gPSBtaW4obHVtYU0sIG1pbihtaW4obHVtYU5XLCBsdW1hTkUpLCBtaW4obHVtYVNXLCBsdW1hU0UpKSk7CiAgICBmbG9hdCBsdW1hTWF4ID0gbWF4KGx1bWFNLCBtYXgobWF4KGx1bWFOVywgbHVtYU5FKSwgbWF4KGx1bWFTVywgbHVtYVNFKSkpOwogICAgdmVjMiBkaXI7CiAgICBkaXIueCA9IC0oKGx1bWFOVyArIGx1bWFORSkgLSAobHVtYVNXICsgbHVtYVNFKSk7CiAgICBkaXIueSA9IChsdW1hTlcgKyBsdW1hU1cpIC0gKGx1bWFORSArIGx1bWFTRSk7CiAgICBmbG9hdCBkaXJSZWR1Y2UgPSBtYXgoKCgobHVtYU5XICsgbHVtYU5FKSArIGx1bWFTVykgKyBsdW1hU0UpICogMC4wMzEyNSwgMC4wMDc4MTI1KTsKICAgIGZsb2F0IHJjcERpck1pbiA9IDEuMCAvIChtaW4oYWJzKGRpci54KSwgYWJzKGRpci55KSkgKyBkaXJSZWR1Y2UpOwogICAgZGlyID0gbWluKHZlYzIoOC4wKSwgbWF4KHZlYzIoLTguMCksIGRpciAqIHJjcERpck1pbikpICogdGV4U3RlcDsKICAgIHZlYzMgcmdiQSA9ICh0ZXh0dXJlMkQodGV4LCB0ZXhDbyArIChkaXIgKiAtMC4xNjY2NjY2NzE2MzM3MjAzOTc5NDkyMTg3NSkpLnh5eiArIHRleHR1cmUyRCh0ZXgsIHRleENvICsgKGRpciAqIDAuMTY2NjY2NjcxNjMzNzIwMzk3OTQ5MjE4NzUpKS54eXopICogMC41OwogICAgdmVjMyByZ2JCID0gKHJnYkEgKiAwLjUpICsgKCh0ZXh0dXJlMkQodGV4LCB0ZXhDbyArIChkaXIgKiAtMC41KSkueHl6ICsgdGV4dHVyZTJEKHRleCwgdGV4Q28gKyAoZGlyICogMC41KSkueHl6KSAqIDAuMjUpOwogICAgZmxvYXQgbHVtYUIgPSBkb3QocmdiQiwgbHVtYSk7CiAgICBpZiAoKGx1bWFCIDwgbHVtYU1pbikgfHwgKGx1bWFCID4gbHVtYU1heCkpCiAgICB7CiAgICAgICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KHJnYkEueCwgcmdiQS55LCByZ2JBLnosIGdsX0ZyYWdEYXRhWzBdLncpOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChyZ2JCLngsIHJnYkIueSwgcmdiQi56LCBnbF9GcmFnRGF0YVswXS53KTsKICAgIH0KICAgIHZlYzMgXzI3NyA9IHRvbmVtYXBGaWxtaWMoZ2xfRnJhZ0RhdGFbMF0ueHl6KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChfMjc3LngsIF8yNzcueSwgXzI3Ny56LCBnbF9GcmFnRGF0YVswXS53KTsKfQoK";
kha_Shaders.compositor_pass_fragData2 = "s3310:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgdGV4U3RlcDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCB0ZXg7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjA7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjE7CgppbiB2ZWMyIHRleENvb3JkOwpvdXQgdmVjNCBmcmFnQ29sb3I7Cgp2ZWMzIHRvbmVtYXBGaWxtaWModmVjMyBjb2xvcikKewogICAgdmVjMyB4ID0gbWF4KHZlYzMoMC4wKSwgY29sb3IgLSB2ZWMzKDAuMDA0MDAwMDAwMTg5OTg5ODA1MjIxNTU3NjE3MTg3NSkpOwogICAgcmV0dXJuICh4ICogKCh4ICogNi4xOTk5OTk4MDkyNjUxMzY3MTg3NSkgKyB2ZWMzKDAuNSkpKSAvICgoeCAqICgoeCAqIDYuMTk5OTk5ODA5MjY1MTM2NzE4NzUpICsgdmVjMygxLjcwMDAwMDA0NzY4MzcxNTgyMDMxMjUpKSkgKyB2ZWMzKDAuMDU5OTk5OTk4NjU4ODk1NDkyNTUzNzEwOTM3NSkpOwp9Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWMyIHRleENvID0gdGV4Q29vcmQ7CiAgICB2ZWMyIHRjcmdiTlcgPSB0ZXhDbyArICh2ZWMyKC0xLjApICogdGV4U3RlcCk7CiAgICB2ZWMyIHRjcmdiTkUgPSB0ZXhDbyArICh2ZWMyKDEuMCwgLTEuMCkgKiB0ZXhTdGVwKTsKICAgIHZlYzIgdGNyZ2JTVyA9IHRleENvICsgKHZlYzIoLTEuMCwgMS4wKSAqIHRleFN0ZXApOwogICAgdmVjMiB0Y3JnYlNFID0gdGV4Q28gKyAodmVjMigxLjApICogdGV4U3RlcCk7CiAgICB2ZWMyIHRjcmdiTSA9IHZlYzIodGV4Q28pOwogICAgdmVjMyByZ2JOVyA9IHRleHR1cmUodGV4LCB0Y3JnYk5XKS54eXo7CiAgICB2ZWMzIHJnYk5FID0gdGV4dHVyZSh0ZXgsIHRjcmdiTkUpLnh5ejsKICAgIHZlYzMgcmdiU1cgPSB0ZXh0dXJlKHRleCwgdGNyZ2JTVykueHl6OwogICAgdmVjMyByZ2JTRSA9IHRleHR1cmUodGV4LCB0Y3JnYlNFKS54eXo7CiAgICB2ZWMzIHJnYk0gPSB0ZXh0dXJlKHRleCwgdGNyZ2JNKS54eXo7CiAgICB2ZWMzIGx1bWEgPSB2ZWMzKDAuMjk4OTk5OTk0OTkzMjA5ODM4ODY3MTg3NSwgMC41ODcwMDAwMTIzOTc3NjYxMTMyODEyNSwgMC4xMTQwMDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpOwogICAgZmxvYXQgbHVtYU5XID0gZG90KHJnYk5XLCBsdW1hKTsKICAgIGZsb2F0IGx1bWFORSA9IGRvdChyZ2JORSwgbHVtYSk7CiAgICBmbG9hdCBsdW1hU1cgPSBkb3QocmdiU1csIGx1bWEpOwogICAgZmxvYXQgbHVtYVNFID0gZG90KHJnYlNFLCBsdW1hKTsKICAgIGZsb2F0IGx1bWFNID0gZG90KHJnYk0sIGx1bWEpOwogICAgZmxvYXQgbHVtYU1pbiA9IG1pbihsdW1hTSwgbWluKG1pbihsdW1hTlcsIGx1bWFORSksIG1pbihsdW1hU1csIGx1bWFTRSkpKTsKICAgIGZsb2F0IGx1bWFNYXggPSBtYXgobHVtYU0sIG1heChtYXgobHVtYU5XLCBsdW1hTkUpLCBtYXgobHVtYVNXLCBsdW1hU0UpKSk7CiAgICB2ZWMyIGRpcjsKICAgIGRpci54ID0gLSgobHVtYU5XICsgbHVtYU5FKSAtIChsdW1hU1cgKyBsdW1hU0UpKTsKICAgIGRpci55ID0gKGx1bWFOVyArIGx1bWFTVykgLSAobHVtYU5FICsgbHVtYVNFKTsKICAgIGZsb2F0IGRpclJlZHVjZSA9IG1heCgoKChsdW1hTlcgKyBsdW1hTkUpICsgbHVtYVNXKSArIGx1bWFTRSkgKiAwLjAzMTI1LCAwLjAwNzgxMjUpOwogICAgZmxvYXQgcmNwRGlyTWluID0gMS4wIC8gKG1pbihhYnMoZGlyLngpLCBhYnMoZGlyLnkpKSArIGRpclJlZHVjZSk7CiAgICBkaXIgPSBtaW4odmVjMig4LjApLCBtYXgodmVjMigtOC4wKSwgZGlyICogcmNwRGlyTWluKSkgKiB0ZXhTdGVwOwogICAgdmVjMyByZ2JBID0gKHRleHR1cmUodGV4LCB0ZXhDbyArIChkaXIgKiAtMC4xNjY2NjY2NzE2MzM3MjAzOTc5NDkyMTg3NSkpLnh5eiArIHRleHR1cmUodGV4LCB0ZXhDbyArIChkaXIgKiAwLjE2NjY2NjY3MTYzMzcyMDM5Nzk0OTIxODc1KSkueHl6KSAqIDAuNTsKICAgIHZlYzMgcmdiQiA9IChyZ2JBICogMC41KSArICgodGV4dHVyZSh0ZXgsIHRleENvICsgKGRpciAqIC0wLjUpKS54eXogKyB0ZXh0dXJlKHRleCwgdGV4Q28gKyAoZGlyICogMC41KSkueHl6KSAqIDAuMjUpOwogICAgZmxvYXQgbHVtYUIgPSBkb3QocmdiQiwgbHVtYSk7CiAgICBpZiAoKGx1bWFCIDwgbHVtYU1pbikgfHwgKGx1bWFCID4gbHVtYU1heCkpCiAgICB7CiAgICAgICAgZnJhZ0NvbG9yID0gdmVjNChyZ2JBLngsIHJnYkEueSwgcmdiQS56LCBmcmFnQ29sb3Iudyk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgZnJhZ0NvbG9yID0gdmVjNChyZ2JCLngsIHJnYkIueSwgcmdiQi56LCBmcmFnQ29sb3Iudyk7CiAgICB9CiAgICB2ZWMzIF8yNzcgPSB0b25lbWFwRmlsbWljKGZyYWdDb2xvci54eXopOwogICAgZnJhZ0NvbG9yID0gdmVjNChfMjc3LngsIF8yNzcueSwgXzI3Ny56LCBmcmFnQ29sb3Iudyk7Cn0KCg";
kha_Shaders.compositor_pass_vertData0 = "s214:I3ZlcnNpb24gMTAwCgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHBvczsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQocG9zLCAwLjAsIDEuMCk7Cn0KCg";
kha_Shaders.compositor_pass_vertData1 = "s235:I3ZlcnNpb24gMTAwCgp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.compositor_pass_vertData2 = "s224:I3ZlcnNpb24gMzAwIGVzCgpvdXQgbWVkaXVtcCB2ZWMyIHRleENvb3JkOwppbiBtZWRpdW1wIHZlYzIgcG9zOwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKfQoK";
kha_Shaders.deferred_indirect_fragData0 = "s3848:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWM0IHNoaXJyWzddOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyMDsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlcjE7CnVuaWZvcm0gaGlnaHAgdmVjMyBiYWNrZ3JvdW5kQ29sOwp1bmlmb3JtIGhpZ2hwIGZsb2F0IGVudm1hcFN0cmVuZ3RoOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzc2FvdGV4Owp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyRDsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCmhpZ2hwIHZlYzIgb2N0YWhlZHJvbldyYXAoaGlnaHAgdmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:IDEuMCA6IC0xLjApOwp9CgpoaWdocCB2ZWMyIHVucGFja0Zsb2F0KGhpZ2hwIGZsb2F0IGYpCnsKICAgIHJldHVybiB2ZWMyKGZsb29yKGYpIC8gMTAwLjAsIGZyYWN0KGYpKTsKfQoKaGlnaHAgdmVjMyBzdXJmYWNlQWxiZWRvKGhpZ2hwIHZlYzMgYmFzZUNvbG9yLCBoaWdocCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBtaXgoYmFzZUNvbG9yLCB2ZWMzKDAuMCksIHZlYzMobWV0YWxuZXNzKSk7Cn0KCmhpZ2hwIHZlYzMgc2hJcnJhZGlhbmNlKGhpZ2hwIHZlYzMgbm9yKQp7CiAgICBoaWdocCB2ZWMzIGNsMDAgPSB2ZWMzKHNoaXJyWzBdLngsIHNoaXJyWzBdLnksIHNoaXJyWzBdLnopOwogICAgaGlnaHAgdmVjMyBjbDFtMSA9IHZlYzMoc2hpcnJbMF0udywgc2hpcnJbMV0ueCwgc2hpcnJbMV0ueSk7CiAgICBoaWdocCB2ZWMzIGNsMTAgPSB2ZWMzKHNoaXJyWzFdLnosIHNoaXJyWzFdLncsIHNoaXJyWzJdLngpOwogICAgaGlnaHAgdmVjMyBjbDExID0gdmVjMyhzaGlyclsyXS55LCBzaGlyclsyXS56LCBzaGlyclsyXS53KTsKICAgIGhpZ2hwIHZlYzMgY2wybTIgPSB2ZWMzKHNoaXJyWzNdLngsIHNoaXJyWzNdLnksIHNoaXJyWzNdLnopOwogICAgaGlnaHAgdmVjMyBjbDJtMSA9IHZlYzMoc2hpcnJbM10udywgc2hpcnJbNF0ueCwgc2hpcnJbNF0ueSk7CiAgICBoaWdocCB2ZWMzIGNsMjAgPSB2ZWMzKHNoaXJyWzRdLnosIHNoaXJyWzRdLncsIHNoaXJyWzVdLngpOwogICAgaGlnaHAgdmVjMyBjbDIxID0gdmVjMyhzaGlycls1XS55LCBzaGlycls1XS56LCBzaGlycls1XS53KTsKICAgIGhpZ2hwIHZlYzMgY2wyMiA9IHZlYzMoc2hpcnJbNl0ueCwgc2hpcnJbNl0ueSwgc2hpcnJbNl0ueik7CiAgICByZXR1cm4gKCgoKCgoKCgoKGNsMjIgKiAwLjQyOTA0Mjk5NDk3NjA0MzcwMTE3MTg3NSkgKiAoKG5vci55ICogbm9yLnkpIC0gKC1ub3IueiAqIC1ub3IueikpKSArICgoKGNsMjAgKiAwLjc0MzEyNTAyMTQ1NzY3MjExOTE0MDYyNSkgKiBub3IueCkgKiBub3IueCkpICsgKGNsMDAgKiAwLjg4NjIyNzAxMTY4MDYwMzAyNzM0Mzc1KSkgLSAoY2wyMCAqIDAuMjQ3NzA3OTkyNzkyMTI5NTE2NjAxNTYyNSkpICsgKCgoY2wybTIgKiAwLjg1ODA4NTk4OTk1MjA4NzQwMjM0Mzc1KSAqIG5vci55KSAqIC1ub3IueikpICsgKCgoY2wyMSAqIDAuODU4MDg1OTg5OTUyMDg3NDAyMzQzNzUpICogbm9yLnkpICogbm9yLngpKSArICgoKGNsMm0xICogMC44NTgwODU5ODk5NTIwODc0MDIzNDM3NSkgKiAtbm9yLnopICogbm9yLngpKSArICgoY2wxMSAqIDEuMDIzMzI3OTQ2NjYyOTAyODMyMDMxMjUpICogbm9yLnkpKSArICgoY2wxbTEgKiAxLjAyMzMyNzk0NjY2MjkwMjgzMjAzMTI1KSAqIC1ub3IueikpICsgKChjbDEwICogMS4wMjMzMjc5NDY2NjI5MDI4MzIwMzEyNSkgKiBub3IueCk7Cn0KCmhpZ2hwIHZlYzMgc3VyZmFjZUYwKGhpZ2hwIHZlYzMgYmFzZUNvbG9yLCBoaWdocCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBtaXgodmVjMygwLjAzOTk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSksIGJhc2VDb2xvciwgdmVjMyhtZXRhbG5lc3MpKTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCBnMCA9IHRleHR1cmUyRChnYnVmZmVyMCwgdGV4Q29vcmQpOwogICAgaGlnaHAgdmVjMyBuOwogICAgbi56ID0gKDEuMCAtIGFicyhnMC54KSkgLSBhYnMoZzAueSk7CiAgICBoaWdocCB2ZWMyIF8yNTM7CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfMjUzID0gZzAueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzI1MyA9IG9jdGFoZWRyb25XcmFwKGcwLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF8yNTMueCwgXzI1My55LCBuLnopOwogICAgbiA9IG5vcm1hbGl6ZShuKTsKICAgIGhpZ2hwIHZlYzIgbWV0cm91Z2ggPSB1bnBhY2tGbG9hdChnMC56KTsKICAgIGhpZ2hwIHZlYzQgZzEgPSB0ZXh0dXJlMkQoZ2J1ZmZlcjEsIHRleENvb3JkKTsKICAgIGhpZ2hwIHZlYzMgYWxiZWRvID0gc3VyZmFjZUFsYmVkbyhnMS54eXosIG1ldHJvdWdoLngpOwogICAgaGlnaHAgdmVjMyBlbnZsID0gc2hJcnJhZGlhbmNlKG4pOwogICAgZW52bCAqPSBhbGJlZG87CiAgICBoaWdocCB2ZWMzIGYwID0gc3VyZmFjZUYwKGcxLnh5eiwgbWV0cm91Z2gueCk7CiAgICBlbnZsICs9IChiYWNrZ3JvdW5kQ29sICogZjApOwogICAgZW52bCAqPSAoZW52bWFwU3RyZW5ndGggKiBnMS53KTsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChlbnZsLngsIGVudmwueSwgZW52bC56LCBnbF9GcmFnRGF0YVswXS53KTsKICAgIGhpZ2hwIHZlYzMgXzMyMyA9IGdsX0ZyYWdEYXRhWzBdLnh5eiAqIHRleHR1cmUyRChzc2FvdGV4LCB0ZXhDb29yZCkueDsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChfMzIzLngsIF8zMjMueSwgXzMyMy56LCBnbF9GcmFnRGF0YVswXS53KTsKfQoK";
kha_Shaders.deferred_indirect_fragData1 = "s3590:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzQgc2hpcnJbN107CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjA7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjE7CnVuaWZvcm0gdmVjMyBiYWNrZ3JvdW5kQ29sOwp1bmlmb3JtIGZsb2F0IGVudm1hcFN0cmVuZ3RoOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHNzYW90ZXg7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlckQ7Cgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2ZWMyIG9jdGFoZWRyb25XcmFwKHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAtMS4wLCAodi55ID49IDAuMCkgPyAxLjAgOiAtMS4wKTsKfQoKdmVjMiB1bnBhY2tGbG9hdChmbG9hdCBmKQp7CiAgICByZXR1cm4gdmVjMihmbG9vcihmKSAvIDEwMC4wLCBmcmFjdChmKSk7Cn0KCnZlYzMgc3VyZmFjZUFsYmVkbyh2ZWMzIGJhc2VDb2xvciwgZmxvYXQgbWV0YWxuZXNzKQp7CiAgICByZXR1cm4gbWl4KGJhc2VDb2xvciwgdmVjMygwLjApLCB2ZWMzKG1ldGFsbmVzcykpOwp9Cgp2ZWMzIHNoSXJyYWRpYW5jZSh2ZWMzIG5vcikKewogICAgdmVjMyBjbDAwID0gdmVjMyhzaGlyclswXS54LCBzaGlyclswXS55LCBzaGlyclswXS56KTsKICAgIHZlYzMgY2wxbTEgPSB2ZWMzKHNoaXJyWzBdLncsIHNoaXJyWzFdLngsIHNoaXJyWzFdLnkpOwogICAgdmVjMyBjbDEwID0gdmVjMyhzaGlyclsxXS56LCBzaGlyclsxXS53LCBzaGlyclsyXS54KTsKICAgIHZlYzMgY2wxMSA9IHZlYzMoc2hpcnJbMl0ueSwgc2hpcnJbMl0ueiwgc2hpcnJbMl0udyk7CiAgICB2ZWMzIGNsMm0yID0gdmVjMyhzaGlyclszXS54LCBzaGlyclszXS55LCBzaGlyclszXS56KTsKICAgIHZlYzMgY2wybTEgPSB2ZWMzKHNoaXJyWzNdLncsIHNoaXJyWzRdLngsIHNoaXJyWzRdLnkpOwogICAgdmVjMyBjbDIwID0gdmVjMyhzaGlycls0XS56LCBzaGlycls0XS53LCBzaGlycls1XS54KTsKICAgIHZlYzMgY2wyMSA9IHZlYzMoc2hpcnJbNV0ueSwgc2hpcnJbNV0ueiwgc2hpcnJbNV0udyk7CiAgICB2ZWMzIGNsMjIgPSB2ZWMzKHNoaXJyWzZdLngsIHNoaXJyWzZdLnksIHNoaXJyWzZdLnopOwogICAgcmV0dXJuICgoKCgoKCgoKChjbDIyICogMC40MjkwNDI5OTQ5NzYwNDM3MDExNzE4NzUpICogKChub3IueSAqIG5vci55KSAtICgtbm9yLnogKiAtbm9yLnopKSkgKyAoKChjbDIwICogMC43NDMxMjUwMjE0NTc2NzIxMTkxNDA2MjUpICogbm9yLngpICogbm9yLngpKSArIChjbDAwICogMC44ODYyMjcwMTE2ODA2MDMwMjczNDM3NSkpIC0gKGNsMjAgKiAwLjI0NzcwNzk5Mjc5MjEyOTUxNjYwMTU2MjUpKSArICgoKGNsMm0yICogMC44NTgwODU5ODk5NTIwODc0MDIzNDM3NSkgKiBub3IueSkgKiAtbm9yLnopKSArICgoKGNsMjEgKiAwLjg1ODA4NTk4OTk1MjA4NzQwMjM0Mzc1KSAqIG5vci55KSAqIG5vci54KSkgKyAoKChjbDJtMSAqIDAuODU4MDg1OTg5OTUyMDg3NDAyMzQzNzUpICogLW5vci56KSAqIG5vci54KSkgKyAoKGNsMTEgKiAxLjAyMzMyNzk0NjY2MjkwMjgzMjAzMTI1KSAqIG5vci55KSkgKyAoKGNsMW0xICogMS4wMjMzMjc5NDY2NjI5MDI4MzIwMzEyNSkgKiAtbm9yLnopKSArICgoY2wxMCAqIDEuMDIzMzI3OTQ2NjYyOTAyODMyMDMxMjUpICogbm9yLngpOwp9Cgp2ZWMzIHN1cmZhY2VGMCh2ZWMzIGJhc2VDb2xvciwgZmxvYXQgbWV0YWxuZXNzKQp7CiAgICByZXR1cm4gbWl4KHZlYzMoMC4wMzk5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjUpLCBiYXNlQ29sb3IsIHZlYzMobWV0YWxuZXNzKSk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgZzAgPSB0ZXh0dXJlMkQoZ2J1ZmZlcjAsIHRleENvb3JkKTsKICAgIHZlYzMgbjsKICAgIG4ueiA9ICgxLjAgLSBhYnMoZzAueCkpIC0gYWJzKGcwLnkpOwogICAgdmVjMiBfMjUzOwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzI1MyA9IGcwLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8yNTMgPSBvY3RhaGVkcm9uV3JhcChnMC54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfMjUzLngsIF8yNTMueSwgbi56KTsKICAgIG4gPSBub3JtYWxpemUobik7CiAgICB2ZWMyIG1ldHJvdWdoID0gdW5wYWNrRmxvYXQoZzAueik7CiAgICB2ZWM0IGcxID0gdGV4dHVyZTJEKGdidWZmZXIxLCB0ZXhDb29yZCk7CiAgICB2ZWMzIGFsYmVkbyA9IHN1cmZhY2VBbGJlZG8oZzEueHl6LCBtZXRyb3VnaC54KTsKICAgIHZlYzMgZW52bCA9IHNoSXJyYWRpYW5jZShuKTsKICAgIGVudmwgKj0gYWxiZWRvOwogICAgdmVjMyBmMCA9IHN1cmZhY2VGMChnMS54eXosIG1ldHJvdWdoLngpOwogICAgZW52bCArPSAoYmFja2dyb3VuZENvbCAqIGYwKTsKICAgIGVudmwgKj0gKGVudm1hcFN0cmVuZ3RoICogZzEudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoZW52bC54LCBlbnZsLnksIGVudmwueiwgZ2xfRnJhZ0RhdGFbMF0udyk7CiAgICB2ZWMzIF8zMjMgPSBnbF9GcmFnRGF0YVswXS54eXogKiB0ZXh0dXJlMkQoc3Nhb3RleCwgdGV4Q29vcmQpLng7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoXzMyMy54LCBfMzIzLnksIF8zMjMueiwgZ2xfRnJhZ0RhdGFbMF0udyk7Cn0KCg";
kha_Shaders.deferred_indirect_fragData2 = "s3572:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzQgc2hpcnJbN107CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjA7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjE7CnVuaWZvcm0gdmVjMyBiYWNrZ3JvdW5kQ29sOwp1bmlmb3JtIGZsb2F0IGVudm1hcFN0cmVuZ3RoOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHNzYW90ZXg7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CgppbiB2ZWMyIHRleENvb3JkOwpvdXQgdmVjNCBmcmFnQ29sb3I7Cgp2ZWMyIG9jdGFoZWRyb25XcmFwKHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAtMS4wLCAodi55ID49IDAuMCkgPyAxLjAgOiAtMS4wKTsKfQoKdmVjMiB1bnBhY2tGbG9hdChmbG9hdCBmKQp7CiAgICByZXR1cm4gdmVjMihmbG9vcihmKSAvIDEwMC4wLCBmcmFjdChmKSk7Cn0KCnZlYzMgc3VyZmFjZUFsYmVkbyh2ZWMzIGJhc2VDb2xvciwgZmxvYXQgbWV0YWxuZXNzKQp7CiAgICByZXR1cm4gbWl4KGJhc2VDb2xvciwgdmVjMygwLjApLCB2ZWMzKG1ldGFsbmVzcykpOwp9Cgp2ZWMzIHNoSXJyYWRpYW5jZSh2ZWMzIG5vcikKewogICAgdmVjMyBjbDAwID0gdmVjMyhzaGlyclswXS54LCBzaGlyclswXS55LCBzaGlyclswXS56KTsKICAgIHZlYzMgY2wxbTEgPSB2ZWMzKHNoaXJyWzBdLncsIHNoaXJyWzFdLngsIHNoaXJyWzFdLnkpOwogICAgdmVjMyBjbDEwID0gdmVjMyhzaGlyclsxXS56LCBzaGlyclsxXS53LCBzaGlyclsyXS54KTsKICAgIHZlYzMgY2wxMSA9IHZlYzMoc2hpcnJbMl0ueSwgc2hpcnJbMl0ueiwgc2hpcnJbMl0udyk7CiAgICB2ZWMzIGNsMm0yID0gdmVjMyhzaGlyclszXS54LCBzaGlyclszXS55LCBzaGlyclszXS56KTsKICAgIHZlYzMgY2wybTEgPSB2ZWMzKHNoaXJyWzNdLncsIHNoaXJyWzRdLngsIHNoaXJyWzRdLnkpOwogICAgdmVjMyBjbDIwID0gdmVjMyhzaGlycls0XS56LCBzaGlycls0XS53LCBzaGlycls1XS54KTsKICAgIHZlYzMgY2wyMSA9IHZlYzMoc2hpcnJbNV0ueSwgc2hpcnJbNV0ueiwgc2hpcnJbNV0udyk7CiAgICB2ZWMzIGNsMjIgPSB2ZWMzKHNoaXJyWzZdLngsIHNoaXJyWzZdLnksIHNoaXJyWzZdLnopOwogICAgcmV0dXJuICgoKCgoKCgoKChjbDIyICogMC40MjkwNDI5OTQ5NzYwNDM3MDExNzE4NzUpICogKChub3IueSAqIG5vci55KSAtICgtbm9yLnogKiAtbm9yLnopKSkgKyAoKChjbDIwICogMC43NDMxMjUwMjE0NTc2NzIxMTkxNDA2MjUpICogbm9yLngpICogbm9yLngpKSArIChjbDAwICogMC44ODYyMjcwMTE2ODA2MDMwMjczNDM3NSkpIC0gKGNsMjAgKiAwLjI0NzcwNzk5Mjc5MjEyOTUxNjYwMTU2MjUpKSArICgoKGNsMm0yICogMC44NTgwODU5ODk5NTIwODc0MDIzNDM3NSkgKiBub3IueSkgKiAtbm9yLnopKSArICgoKGNsMjEgKiAwLjg1ODA4NTk4OTk1MjA4NzQwMjM0Mzc1KSAqIG5vci55KSAqIG5vci54KSkgKyAoKChjbDJtMSAqIDAuODU4MDg1OTg5OTUyMDg3NDAyMzQzNzUpICogLW5vci56KSAqIG5vci54KSkgKyAoKGNsMTEgKiAxLjAyMzMyNzk0NjY2MjkwMjgzMjAzMTI1KSAqIG5vci55KSkgKyAoKGNsMW0xICogMS4wMjMzMjc5NDY2NjI5MDI4MzIwMzEyNSkgKiAtbm9yLnopKSArICgoY2wxMCAqIDEuMDIzMzI3OTQ2NjYyOTAyODMyMDMxMjUpICogbm9yLngpOwp9Cgp2ZWMzIHN1cmZhY2VGMCh2ZWMzIGJhc2VDb2xvciwgZmxvYXQgbWV0YWxuZXNzKQp7CiAgICByZXR1cm4gbWl4KHZlYzMoMC4wMzk5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjUpLCBiYXNlQ29sb3IsIHZlYzMobWV0YWxuZXNzKSk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgZzAgPSB0ZXh0dXJlKGdidWZmZXIwLCB0ZXhDb29yZCk7CiAgICB2ZWMzIG47CiAgICBuLnogPSAoMS4wIC0gYWJzKGcwLngpKSAtIGFicyhnMC55KTsKICAgIHZlYzIgXzI1MzsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8yNTMgPSBnMC54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMjUzID0gb2N0YWhlZHJvbldyYXAoZzAueHkpOwogICAgfQogICAgbiA9IHZlYzMoXzI1My54LCBfMjUzLnksIG4ueik7CiAgICBuID0gbm9ybWFsaXplKG4pOwogICAgdmVjMiBtZXRyb3VnaCA9IHVucGFja0Zsb2F0KGcwLnopOwogICAgdmVjNCBnMSA9IHRleHR1cmUoZ2J1ZmZlcjEsIHRleENvb3JkKTsKICAgIHZlYzMgYWxiZWRvID0gc3VyZmFjZUFsYmVkbyhnMS54eXosIG1ldHJvdWdoLngpOwogICAgdmVjMyBlbnZsID0gc2hJcnJhZGlhbmNlKG4pOwogICAgZW52bCAqPSBhbGJlZG87CiAgICB2ZWMzIGYwID0gc3VyZmFjZUYwKGcxLnh5eiwgbWV0cm91Z2gueCk7CiAgICBlbnZsICs9IChiYWNrZ3JvdW5kQ29sICogZjApOwogICAgZW52bCAqPSAoZW52bWFwU3RyZW5ndGggKiBnMS53KTsKICAgIGZyYWdDb2xvciA9IHZlYzQoZW52bC54LCBlbnZsLnksIGVudmwueiwgZnJhZ0NvbG9yLncpOwogICAgdmVjMyBfMzIzID0gZnJhZ0NvbG9yLnh5eiAqIHRleHR1cmUoc3Nhb3RleCwgdGV4Q29vcmQpLng7CiAgICBmcmFnQ29sb3IgPSB2ZWM0KF8zMjMueCwgXzMyMy55LCBfMzIzLnosIGZyYWdDb2xvci53KTsKfQoK";
kha_Shaders.deferred_indirect_vertData0 = "s214:I3ZlcnNpb24gMTAwCgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHBvczsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQocG9zLCAwLjAsIDEuMCk7Cn0KCg";
kha_Shaders.deferred_indirect_vertData1 = "s235:I3ZlcnNpb24gMTAwCgp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.deferred_indirect_vertData2 = "s224:I3ZlcnNpb24gMzAwIGVzCgpvdXQgbWVkaXVtcCB2ZWMyIHRleENvb3JkOwppbiBtZWRpdW1wIHZlYzIgcG9zOwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKfQoK";
kha_Shaders.deferred_light_fragData0 = "s11672:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgc2hhZG93TWFwOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXJDdWJlIHNoYWRvd01hcEN1YmU7CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyMTsKdW5pZm9ybSBoaWdocCBtYXQ0IGludlZQOwp1bmlmb3JtIGhpZ2hwIHZlYzMgZXllOwp1bmlmb3JtIGhpZ2hwIHZlYzMgbGlnaHRQb3M7CnVuaWZvcm0gaW50IGxpZ2h0U2hhZG93Owp1bmlmb3JtIGhpZ2hwIG1hdDQgTFdWUDsKdW5pZm9ybSBoaWdocCBmbG9hdCBzaGFkb3dzQmlhczsKdW5pZm9ybSBoaWdocCB2ZWMyIGxpZ2h0UHJvajsKdW5pZm9ybSBpbnQgbGlnaHRUeXBlOwp1bmlmb3JtIGhpZ2hwIHZlYzMgbGlnaHREaXI7CnVuaWZvcm0gaGlnaHAgdmVjMiBzcG90bGlnaHREYXRhOwp1bmlmb3JtIGhpZ2hwIHZlYzMgbGlnaHRDb2xvcjsKdW5pZm9ybSBoaWdocCB2ZWM0IGNhc0RhdGFbMjBdOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyRDsKCnZhcnlpbmcgaGlnaHAgdmVjNCB3dnBwb3NpdGlvbjsKCmhpZ2hwIHZlYzIgb2N0YWhlZHJvbldyYXAoaGlnaHAgdmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:";
kha_Shaders.deferred_light_fragData1 = "s10736:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHNoYWRvd01hcDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXJDdWJlIHNoYWRvd01hcEN1YmU7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjA7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjE7CnVuaWZvcm0gbWF0NCBpbnZWUDsKdW5pZm9ybSB2ZWMzIGV5ZTsKdW5pZm9ybSB2ZWMzIGxpZ2h0UG9zOwp1bmlmb3JtIGludCBsaWdodFNoYWRvdzsKdW5pZm9ybSBtYXQ0IExXVlA7CnVuaWZvcm0gZmxvYXQgc2hhZG93c0JpYXM7CnVuaWZvcm0gdmVjMiBsaWdodFByb2o7CnVuaWZvcm0gaW50IGxpZ2h0VHlwZTsKdW5pZm9ybSB2ZWMzIGxpZ2h0RGlyOwp1bmlmb3JtIHZlYzIgc3BvdGxpZ2h0RGF0YTsKdW5pZm9ybSB2ZWMzIGxpZ2h0Q29sb3I7CnVuaWZvcm0gdmVjNCBjYXNEYXRhWzIwXTsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBnYnVmZmVyRDsKCnZhcnlpbmcgdmVjNCB3dnBwb3NpdGlvbjsKCnZlYzIgb2N0YWhlZHJvbldyYXAodmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:";
kha_Shaders.deferred_light_fragData2 = "s10651:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHNoYWRvd01hcDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXJDdWJlIHNoYWRvd01hcEN1YmU7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjA7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlcjE7CnVuaWZvcm0gbWF0NCBpbnZWUDsKdW5pZm9ybSB2ZWMzIGV5ZTsKdW5pZm9ybSB2ZWMzIGxpZ2h0UG9zOwp1bmlmb3JtIGludCBsaWdodFNoYWRvdzsKdW5pZm9ybSBtYXQ0IExXVlA7CnVuaWZvcm0gZmxvYXQgc2hhZG93c0JpYXM7CnVuaWZvcm0gdmVjMiBsaWdodFByb2o7CnVuaWZvcm0gaW50IGxpZ2h0VHlwZTsKdW5pZm9ybSB2ZWMzIGxpZ2h0RGlyOwp1bmlmb3JtIHZlYzIgc3BvdGxpZ2h0RGF0YTsKdW5pZm9ybSB2ZWMzIGxpZ2h0Q29sb3I7CnVuaWZvcm0gdmVjNCBjYXNEYXRhWzIwXTsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBnYnVmZmVyRDsKCmluIHZlYzQgd3ZwcG9zaXRpb247Cm91dCB2ZWM0IGZyYWdDb2xvcjsKCnZlYzIgb2N0YWhlZHJvbldyYXAodmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:IDEuMCA6IC0xLjApOwp9Cgp2ZWMzIGdldFBvczIobWF0NCBpbnZWUF8xLCBmbG9hdCBkZXB0aCwgdmVjMiBjb29yZCkKewogICAgdmVjNCBwb3MgPSB2ZWM0KChjb29yZCAqIDIuMCkgLSB2ZWMyKDEuMCksIGRlcHRoLCAxLjApOwogICAgcG9zID0gaW52VlBfMSAqIHBvczsKICAgIHZlYzMgXzQ5NyA9IHBvcy54eXogLyB2ZWMzKHBvcy53KTsKICAgIHBvcyA9IHZlYzQoXzQ5Ny54LCBfNDk3LnksIF80OTcueiwgcG9zLncpOwogICAgcmV0dXJuIHBvcy54eXo7Cn0KCnZlYzIgdW5wYWNrRmxvYXQoZmxvYXQgZikKewogICAgcmV0dXJuIHZlYzIoZmxvb3IoZikgLyAxMDAuMCwgZnJhY3QoZikpOwp9Cgp2ZWMzIHN1cmZhY2VBbGJlZG8odmVjMyBiYXNlQ29sb3IsIGZsb2F0IG1ldGFsbmVzcykKewogICAgcmV0dXJuIG1peChiYXNlQ29sb3IsIHZlYzMoMC4wKSwgdmVjMyhtZXRhbG5lc3MpKTsKfQoKdmVjMyBzdXJmYWNlRjAodmVjMyBiYXNlQ29sb3IsIGZsb2F0IG1ldGFsbmVzcykKewogICAgcmV0dXJuIG1peCh2ZWMzKDAuMDM5OTk5OTk5MTA1OTMwMzI4MzY5MTQwNjI1KSwgYmFzZUNvbG9yLCB2ZWMzKG1ldGFsbmVzcykpOwp9CgpmbG9hdCBzaGFkb3dDb21wYXJlKHZlYzIgdXYsIGZsb2F0IGNvbXBhcmUpCnsKICAgIGZsb2F0IGRlcHRoID0gdGV4dHVyZShzaGFkb3dNYXAsIHV2KS54OwogICAgcmV0dXJuIHN0ZXAoY29tcGFyZSwgZGVwdGgpOwp9CgpmbG9hdCBzaGFkb3dMZXJwKHZlYzIgdXYsIGZsb2F0IGNvbXBhcmUsIHZlYzIgc21TaXplKQp7CiAgICB2ZWMyIHRleGVsU2l6ZSA9IHZlYzIoMS4wKSAvIHNtU2l6ZTsKICAgIHZlYzIgZiA9IGZyYWN0KCh1diAqIHNtU2l6ZSkgKyB2ZWMyKDAuNSkpOwogICAgdmVjMiBjZW50cm9pZFVWID0gZmxvb3IoKHV2ICogc21TaXplKSArIHZlYzIoMC41KSkgLyBzbVNpemU7CiAgICBmbG9hdCBsYiA9IHNoYWRvd0NvbXBhcmUoY2VudHJvaWRVViwgY29tcGFyZSk7CiAgICBmbG9hdCBsdCA9IHNoYWRvd0NvbXBhcmUoY2VudHJvaWRVViArICh0ZXhlbFNpemUgKiB2ZWMyKDAuMCwgMS4wKSksIGNvbXBhcmUpOwogICAgZmxvYXQgcmIgPSBzaGFkb3dDb21wYXJlKGNlbnRyb2lkVVYgKyAodGV4ZWxTaXplICogdmVjMigxLjAsIDAuMCkpLCBjb21wYXJlKTsKICAgIGZsb2F0IHJ0ID0gc2hhZG93Q29tcGFyZShjZW50cm9pZFVWICsgdGV4ZWxTaXplLCBjb21wYXJlKTsKICAgIGZsb2F0IGEgPSBtaXgobGIsIGx0LCBmLnkpOwogICAgZmxvYXQgYiA9IG1peChyYiwgcnQsIGYueSk7CiAgICBmbG9hdCBjID0gbWl4KGEsIGIsIGYueCk7CiAgICByZXR1cm4gYzsKfQoKZmxvYXQgUENGKHZlYzIgdXYsIGZsb2F0IGNvbXBhcmUsIHZlYzIgc21TaXplKQp7CiAgICBmbG9hdCByZXN1bHQgPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoLTEuMCkgLyBzbVNpemUpLCBjb21wYXJlLCBzbVNpemUpOwogICAgcmVzdWx0ICs9IHNoYWRvd0xlcnAodXYgKyAodmVjMigtMS4wLCAwLjApIC8gc21TaXplKSwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoLTEuMCwgMS4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diArICh2ZWMyKDAuMCwgLTEuMCkgLyBzbVNpemUpLCBjb21wYXJlLCBzbVNpemUpOwogICAgcmVzdWx0ICs9IHNoYWRvd0xlcnAodXYsIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diArICh2ZWMyKDAuMCwgMS4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diArICh2ZWMyKDEuMCwgLTEuMCkgLyBzbVNpemUpLCBjb21wYXJlLCBzbVNpemUpOwogICAgcmVzdWx0ICs9IHNoYWRvd0xlcnAodXYgKyAodmVjMigxLjAsIDAuMCkgLyBzbVNpemUpLCBjb21wYXJlLCBzbVNpemUpOwogICAgcmVzdWx0ICs9IHNoYWRvd0xlcnAodXYgKyAodmVjMigxLjApIC8gc21TaXplKSwgY29tcGFyZSwgc21TaXplKTsKICAgIHJldHVybiByZXN1bHQgLyA5LjA7Cn0KCmZsb2F0IHNoYWRvd1Rlc3QodmVjMyBsUG9zLCBmbG9hdCBzaGFkb3dzQmlhc18xLCB2ZWMyIHNtU2l6ZSkKewogICAgYm9vbCBfNDM5ID0gbFBvcy54IDwgMC4wOwogICAgYm9vbCBfNDQ1OwogICAgaWYgKCFfNDM5KQogICAgewogICAgICAgIF80NDUgPSBsUG9zLnkgPCAwLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzQ0NSA9IF80Mzk7CiAgICB9CiAgICBib29sIF80NTE7CiAgICBpZiAoIV80NDUpCiAgICB7CiAgICAgICAgXzQ1MSA9IGxQb3MueCA%IDEuMDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfNDUxID0gXzQ0NTsKICAgIH0KICAgIGJvb2wgXzQ1NzsKICAgIGlmICghXzQ1MSkKICAgIHsKICAgICAgICBfNDU3ID0gbFBvcy55ID4gMS4wOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF80NTcgPSBfNDUxOwogICAgfQogICAgaWYgKF80NTcpCiAgICB7CiAgICAgICAgcmV0dXJuIDEuMDsKICAgIH0KICAgIHJldHVybiBQQ0YobFBvcy54eSwgbFBvcy56IC0gc2hhZG93c0JpYXNfMSwgc21TaXplKTsKfQoKZmxvYXQgbHBUb0RlcHRoKGlub3V0IHZlYzMgbHAsIHZlYzIgbGlnaHRQcm9qXzEpCnsKICAgIGxwID0gYWJzKGxwKTsKICAgIGZsb2F0IHpjb21wID0gbWF4KGxwLngsIG1heChscC55LCBscC56KSk7CiAgICB6Y29tcCA9IGxpZ2h0UHJval8xLnggLSAobGlnaHRQcm9qXzEueSAvIHpjb21wKTsKICAgIHJldHVybiAoemNvbXAgKiAwLjUpICsgMC41Owp9CgpmbG9hdCBQQ0ZDdWJlKHZlYzMgbHAsIGlub3V0IHZlYzMgbWwsIGZsb2F0IGJpYXMsIHZlYzIgbGlnaHRQcm9qXzEsIHZlYzMgbikKewogICAgdmVjMyBwYXJhbSA9IGxwIC0gKG4gKiAwLjAwMzAwMDAwMDAyNjA3NzAzMjA4OTIzMzM5ODQzNzUpOwogICAgZmxvYXQgXzMzMiA9IGxwVG9EZXB0aChwYXJhbSwgbGlnaHRQcm9qXzEpOwogICAgZmxvYXQgY29tcGFyZSA9IF8zMzIgLSAoYmlhcyAqIDAuNDAwMDAwMDA1OTYwNDY0NDc3NTM5MDYyNSk7CiAgICBtbCArPSAobiAqIDAuMDAzMDAwMDAwMDI2MDc3MDMyMDg5MjMzMzk4NDM3NSk7CiAgICBmbG9hdCByZXN1bHQgPSBzdGVwKGNvbXBhcmUsIHRleHR1cmUoc2hhZG93TWFwQ3ViZSwgbWwpLngpOwogICAgcmVzdWx0ICs9IHN0ZXAoY29tcGFyZSwgdGV4dHVyZShzaGFkb3dNYXBDdWJlLCBtbCArIHZlYzMoMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUpKS54KTsKICAgIHJlc3VsdCArPSBzdGVwKGNvbXBhcmUsIHRleHR1cmUoc2hhZG93TWFwQ3ViZSwgbWwgKyB2ZWMzKC0wLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSwgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUsIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1KSkueCk7CiAgICByZXN1bHQgKz0gc3RlcChjb21wYXJlLCB0ZXh0dXJlKHNoYWRvd01hcEN1YmUsIG1sICsgdmVjMygwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSwgLTAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1LCAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSkpLngpOwogICAgcmVzdWx0ICs9IHN0ZXAoY29tcGFyZSwgdGV4dHVyZShzaGFkb3dNYXBDdWJlLCBtbCArIHZlYzMoMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUsIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1LCAtMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUpKS54KTsKICAgIHJlc3VsdCArPSBzdGVwKGNvbXBhcmUsIHRleHR1cmUoc2hhZG93TWFwQ3ViZSwgbWwgKyB2ZWMzKC0wLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSwgLTAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1LCAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSkpLngpOwogICAgcmVzdWx0ICs9IHN0ZXAoY29tcGFyZSwgdGV4dHVyZShzaGFkb3dNYXBDdWJlLCBtbCArIHZlYzMoMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUsIC0wLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSwgLTAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1KSkueCk7CiAgICByZXN1bHQgKz0gc3RlcChjb21wYXJlLCB0ZXh0dXJlKHNoYWRvd01hcEN1YmUsIG1sICsgdmVjMygtMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUsIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1LCAtMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUpKS54KTsKICAgIHJlc3VsdCArPSBzdGVwKGNvbXBhcmUsIHRleHR1cmUoc2hhZG93TWFwQ3ViZSwgbWwgKyB2ZWMzKC0wLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSkpLngpOwogICAgcmVzdWx0IC89IDkuMDsKICAgIHJldHVybiByZXN1bHQ7Cn0KCmZsb2F0IGF0dGVudWF0ZShmbG9hdCBkaXN0KQp7CiAgICByZXR1cm4gMS4wIC8gKGRpc3QgKiBkaXN0KTsKfQoKdmVjMyBsYW1iZXJ0RGlmZnVzZUJSREYodmVjMyBhbGJlZG8sIGZsb2F0IG5sKQp7CiAgICByZXR1cm4gYWxiZWRvICogbWF4KDAuMCwgbmwpOwp9CgpmbG9hdCBkX2dneChmbG9hdCBuaCwgZmxvYXQgYSkKewogICAgZmxvYXQgYTIgPSBhICogYTsKICAgIGZsb2F0IGRlbm9tID0gcG93KCgobmggKiBuaCkgKiAoYTIgLSAxLjApKSArIDEuMCwgMi4wKTsKICAgIHJldHVybiAoYTIgKiAwLjMxODMwOTg3MzM0MjUxNDAzODA4NTkzNzUpIC8gZGVub207Cn0KCmZsb2F0IHZfc21pdGhzY2hsaWNrKGZsb2F0IG5sLCBmbG9hdCBudiwgZmxvYXQgYSkKewogICAgcmV0dXJuIDEuMCAvICgoKG5sICogKDEuMCAtIGEpKSArIGEpICogKChudiAqICgxLjAgLSBhKSkgKyBhKSk7Cn0KCnZlYzMgZl9zY2hsaWNrKHZlYzMgZjAsIGZsb2F0IHZoKQp7CiAgICByZXR1cm4gZjAgKyAoKHZlYzMoMS4wKSAtIGYwKSAqIGV4cDIoKCgtNS41NTQ3Mjk5Mzg1MDcwODAwNzgxMjUgKiB2aCkgLSA2Ljk4MzE2MDAxODkyMDg5ODQzNzUpICogdmgpKTsKfQoKdmVjMyBzcGVjdWxhckJSREYodmVjMyBmMCwgZmxvYXQgcm91Z2huZXNzLCBmbG9hdCBubCwgZmxvYXQgbmgsIGZsb2F0IG52LCBmbG9hdCB2aCkKewogICAgZmxvYXQgYSA9IHJvdWdobmVzcyAqIHJvdWdobmVzczsKICAgIHJldHVybiAoZl9zY2hsaWNrKGYwLCB2aCkgKiAoZF9nZ3gobmgsIGEpICogY2xhbXAodl9zbWl0aHNjaGxpY2sobmwsIG52LCBhKSwgMC4wLCAxLjApKSkgLyB2ZWMzKDQuMCk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIHZlYzIgdGV4Q29vcmQgPSB3dnBwb3NpdGlvbi54eSAvIHZlYzIod3ZwcG9zaXRpb24udyk7CiAgICB0ZXhDb29yZCA9ICh0ZXhDb29yZCAqIDAuNSkgKyB2ZWMyKDAuNSk7CiAgICB2ZWM0IGcwID0gdGV4dHVyZShnYnVmZmVyMCwgdGV4Q29vcmQpOwogICAgdmVjNCBnMSA9IHRleHR1cmUoZ2J1ZmZlcjEsIHRleENvb3JkKTsKICAgIGZsb2F0IGRlcHRoID0gKCgxLjAgLSBnMC53KSAqIDIuMCkgLSAxLjA7CiAgICB2ZWMzIG47CiAgICBuLnogPSAoMS4wIC0gYWJzKGcwLngpKSAtIGFicyhnMC55KTsKICAgIHZlYzIgXzU1MTsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF81NTEgPSBnMC54eTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfNTUxID0gb2N0YWhlZHJvbldyYXAoZzAueHkpOwogICAgfQogICAgbiA9IHZlYzMoXzU1MS54LCBfNTUxLnksIG4ueik7CiAgICBuID0gbm9ybWFsaXplKG4pOwogICAgdmVjMyBwID0gZ2V0UG9zMihpbnZWUCwgZGVwdGgsIHRleENvb3JkKTsKICAgIHZlYzIgbWV0cm91Z2ggPSB1bnBhY2tGbG9hdChnMC56KTsKICAgIHZlYzMgdiA9IG5vcm1hbGl6ZShleWUgLSBwKTsKICAgIGZsb2F0IGRvdE5WID0gZG90KG4sIHYpOwogICAgdmVjMyBhbGJlZG8gPSBzdXJmYWNlQWxiZWRvKGcxLnh5eiwgbWV0cm91Z2gueCk7CiAgICB2ZWMzIGYwID0gc3VyZmFjZUYwKGcxLnh5eiwgbWV0cm91Z2gueCk7CiAgICB2ZWMzIGxwID0gbGlnaHRQb3MgLSBwOwogICAgdmVjMyBsID0gbm9ybWFsaXplKGxwKTsKICAgIHZlYzMgaCA9IG5vcm1hbGl6ZSh2ICsgbCk7CiAgICBmbG9hdCBkb3ROSCA9IGRvdChuLCBoKTsKICAgIGZsb2F0IGRvdFZIID0gZG90KHYsIGgpOwogICAgZmxvYXQgZG90TkwgPSBkb3QobiwgbCk7CiAgICBmbG9hdCB2aXNpYmlsaXR5ID0gMS4wOwogICAgaWYgKGxpZ2h0U2hhZG93ID09IDEpCiAgICB7CiAgICAgICAgdmVjNCBsUG9zID0gTFdWUCAqIHZlYzQocCwgMS4wKTsKICAgICAgICBpZiAobFBvcy53ID4gMC4wKQogICAgICAgIHsKICAgICAgICAgICAgdmlzaWJpbGl0eSA9IHNoYWRvd1Rlc3QobFBvcy54eXogLyB2ZWMzKGxQb3MudyksIHNoYWRvd3NCaWFzLCB2ZWMyKDEwMjQuMCkpOwogICAgICAgIH0KICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBpZiAobGlnaHRTaGFkb3cgPT0gMikKICAgICAgICB7CiAgICAgICAgICAgIHZlYzMgcGFyYW0gPSAtbDsKICAgICAgICAgICAgZmxvYXQgXzY3NyA9IFBDRkN1YmUobHAsIHBhcmFtLCBzaGFkb3dzQmlhcywgbGlnaHRQcm9qLCBuKTsKICAgICAgICAgICAgdmlzaWJpbGl0eSA9IF82Nzc7CiAgICAgICAgfQogICAgfQogICAgdmlzaWJpbGl0eSAqPSBhdHRlbnVhdGUoZGlzdGFuY2UocCwgbGlnaHRQb3MpKTsKICAgIGlmIChsaWdodFR5cGUgPT0gMikKICAgIHsKICAgICAgICBmbG9hdCBzcG90RWZmZWN0ID0gZG90KGxpZ2h0RGlyLCBsKTsKICAgICAgICBpZiAoc3BvdEVmZmVjdCA8IHNwb3RsaWdodERhdGEueCkKICAgICAgICB7CiAgICAgICAgICAgIHZpc2liaWxpdHkgKj0gc21vb3Roc3RlcChzcG90bGlnaHREYXRhLnksIHNwb3RsaWdodERhdGEueCwgc3BvdEVmZmVjdCk7CiAgICAgICAgfQogICAgfQogICAgdmVjMyBfNzIyID0gbGFtYmVydERpZmZ1c2VCUkRGKGFsYmVkbywgZG90TkwpICsgc3BlY3VsYXJCUkRGKGYwLCBtZXRyb3VnaC55LCBkb3ROTCwgZG90TkgsIGRvdE5WLCBkb3RWSCk7CiAgICBmcmFnQ29sb3IgPSB2ZWM0KF83MjIueCwgXzcyMi55LCBfNzIyLnosIGZyYWdDb2xvci53KTsKICAgIHZlYzMgXzcyOSA9IGZyYWdDb2xvci54eXogKiBsaWdodENvbG9yOwogICAgZnJhZ0NvbG9yID0gdmVjNChfNzI5LngsIF83MjkueSwgXzcyOS56LCBmcmFnQ29sb3Iudyk7CiAgICB2ZWMzIF83MzUgPSBmcmFnQ29sb3IueHl6ICogdmlzaWJpbGl0eTsKICAgIGZyYWdDb2xvciA9IHZlYzQoXzczNS54LCBfNzM1LnksIF83MzUueiwgZnJhZ0NvbG9yLncpOwp9Cgo";
kha_Shaders.deferred_light_vertData0 = "s230:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgTFZXVlA7Cgp2YXJ5aW5nIHZlYzQgd3ZwcG9zaXRpb247CmF0dHJpYnV0ZSB2ZWMzIHBvczsKCnZvaWQgbWFpbigpCnsKICAgIHd2cHBvc2l0aW9uID0gTFZXVlAgKiB2ZWM0KHBvcywgMS4wKTsKICAgIGdsX1Bvc2l0aW9uID0gd3ZwcG9zaXRpb247Cn0KCg";
kha_Shaders.deferred_light_vertData1 = "s262:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBMVldWUDsKCnZhcnlpbmcgbWVkaXVtcCB2ZWM0IHd2cHBvc2l0aW9uOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWMzIHBvczsKCnZvaWQgbWFpbigpCnsKICAgIHd2cHBvc2l0aW9uID0gTFZXVlAgKiB2ZWM0KHBvcywgMS4wKTsKICAgIGdsX1Bvc2l0aW9uID0gd3ZwcG9zaXRpb247Cn0KCg";
kha_Shaders.deferred_light_vertData2 = "s251:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBMVldWUDsKCm91dCBtZWRpdW1wIHZlYzQgd3ZwcG9zaXRpb247CmluIG1lZGl1bXAgdmVjMyBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB3dnBwb3NpdGlvbiA9IExWV1ZQICogdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IHd2cHBvc2l0aW9uOwp9Cgo";
kha_Shaders.deferred_light_quad_fragData0 = "s10574:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgc2hhZG93TWFwOwp1bmlmb3JtIGhpZ2hwIHZlYzQgY2FzRGF0YVsyMF07CnVuaWZvcm0gaGlnaHAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyMTsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gaGlnaHAgdmVjMyBleWU7CnVuaWZvcm0gaGlnaHAgdmVjMyBleWVMb29rOwp1bmlmb3JtIGhpZ2hwIHZlYzIgY2FtZXJhUHJvajsKdW5pZm9ybSBoaWdocCB2ZWMzIGw7CnVuaWZvcm0gaW50IGxpZ2h0U2hhZG93Owp1bmlmb3JtIGhpZ2hwIGZsb2F0IHNoYWRvd3NCaWFzOwp1bmlmb3JtIGhpZ2hwIHZlYzMgbGlnaHRDb2xvcjsKdW5pZm9ybSBoaWdocCBzYW1wbGVyQ3ViZSBzaGFkb3dNYXBDdWJlOwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzMgdmlld1JheTsKCmhpZ2hwIHZlYzIgb2N0YWhlZHJvbldyYXAoaGlnaHAgdmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:IDEuMCA6IC0xLjApOwp9CgpoaWdocCB2ZWMzIGdldFBvcyhoaWdocCB2ZWMzIGV5ZV8xLCBoaWdocCB2ZWMzIGV5ZUxvb2tfMSwgaGlnaHAgdmVjMyB2aWV3UmF5XzEsIGhpZ2hwIGZsb2F0IGRlcHRoLCBoaWdocCB2ZWMyIGNhbWVyYVByb2pfMSkKewogICAgaGlnaHAgdmVjMyB2cmF5ID0gbm9ybWFsaXplKHZpZXdSYXlfMSk7CiAgICBoaWdocCBmbG9hdCBsaW5lYXJEZXB0aCA9IGNhbWVyYVByb2pfMS55IC8gKCgoZGVwdGggKiAwLjUpICsgMC41KSAtIGNhbWVyYVByb2pfMS54KTsKICAgIGhpZ2hwIGZsb2F0IHZpZXdaRGlzdCA9IGRvdChleWVMb29rXzEsIHZyYXkpOwogICAgaGlnaHAgdmVjMyB3cG9zaXRpb24gPSBleWVfMSArICh2cmF5ICogKGxpbmVhckRlcHRoIC8gdmlld1pEaXN0KSk7CiAgICByZXR1cm4gd3Bvc2l0aW9uOwp9CgpoaWdocCB2ZWMyIHVucGFja0Zsb2F0KGhpZ2hwIGZsb2F0IGYpCnsKICAgIHJldHVybiB2ZWMyKGZsb29yKGYpIC8gMTAwLjAsIGZyYWN0KGYpKTsKfQoKaGlnaHAgdmVjMyBzdXJmYWNlQWxiZWRvKGhpZ2hwIHZlYzMgYmFzZUNvbG9yLCBoaWdocCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBtaXgoYmFzZUNvbG9yLCB2ZWMzKDAuMCksIHZlYzMobWV0YWxuZXNzKSk7Cn0KCmhpZ2hwIHZlYzMgc3VyZmFjZUYwKGhpZ2hwIHZlYzMgYmFzZUNvbG9yLCBoaWdocCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBtaXgodmVjMygwLjAzOTk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSksIGJhc2VDb2xvciwgdmVjMyhtZXRhbG5lc3MpKTsKfQoKaGlnaHAgbWF0NCBnZXRDYXNjYWRlTWF0KGhpZ2hwIGZsb2F0IGQsIGlub3V0IGludCBjYXNpLCBpbm91dCBpbnQgY2FzSW5kZXgpCnsKICAgIGhpZ2hwIHZlYzQgY29tcCA9IHZlYzQoZmxvYXQoZCA%IGNhc0RhdGFbMTZdLngpLCBmbG9hdChkID4gY2FzRGF0YVsxNl0ueSksIGZsb2F0KGQgPiBjYXNEYXRhWzE2XS56KSwgZmxvYXQoZCA%IGNhc0RhdGFbMTZdLncpKTsKICAgIGNhc2kgPSBpbnQobWluKGRvdCh2ZWM0KDEuMCksIGNvbXApLCA0LjApKTsKICAgIGNhc0luZGV4ID0gY2FzaSAqIDQ7CiAgICByZXR1cm4gbWF0NCh2ZWM0KGNhc0RhdGFbY2FzSW5kZXggKyAwXSksIHZlYzQoY2FzRGF0YVtjYXNJbmRleCArIDFdKSwgdmVjNChjYXNEYXRhW2Nhc0luZGV4ICsgMl0pLCB2ZWM0KGNhc0RhdGFbY2FzSW5kZXggKyAzXSkpOwp9CgpoaWdocCBmbG9hdCBzaGFkb3dDb21wYXJlKGhpZ2hwIHZlYzIgdXYsIGhpZ2hwIGZsb2F0IGNvbXBhcmUpCnsKICAgIGhpZ2hwIGZsb2F0IGRlcHRoID0gdGV4dHVyZTJEKHNoYWRvd01hcCwgdXYpLng7CiAgICByZXR1cm4gc3RlcChjb21wYXJlLCBkZXB0aCk7Cn0KCmhpZ2hwIGZsb2F0IHNoYWRvd0xlcnAoaGlnaHAgdmVjMiB1diwgaGlnaHAgZmxvYXQgY29tcGFyZSwgaGlnaHAgdmVjMiBzbVNpemUpCnsKICAgIGhpZ2hwIHZlYzIgdGV4ZWxTaXplID0gdmVjMigxLjApIC8gc21TaXplOwogICAgaGlnaHAgdmVjMiBmID0gZnJhY3QoKHV2ICogc21TaXplKSArIHZlYzIoMC41KSk7CiAgICBoaWdocCB2ZWMyIGNlbnRyb2lkVVYgPSBmbG9vcigodXYgKiBzbVNpemUpICsgdmVjMigwLjUpKSAvIHNtU2l6ZTsKICAgIGhpZ2hwIGZsb2F0IGxiID0gc2hhZG93Q29tcGFyZShjZW50cm9pZFVWLCBjb21wYXJlKTsKICAgIGhpZ2hwIGZsb2F0IGx0ID0gc2hhZG93Q29tcGFyZShjZW50cm9pZFVWICsgKHRleGVsU2l6ZSAqIHZlYzIoMC4wLCAxLjApKSwgY29tcGFyZSk7CiAgICBoaWdocCBmbG9hdCByYiA9IHNoYWRvd0NvbXBhcmUoY2VudHJvaWRVViArICh0ZXhlbFNpemUgKiB2ZWMyKDEuMCwgMC4wKSksIGNvbXBhcmUpOwogICAgaGlnaHAgZmxvYXQgcnQgPSBzaGFkb3dDb21wYXJlKGNlbnRyb2lkVVYgKyB0ZXhlbFNpemUsIGNvbXBhcmUpOwogICAgaGlnaHAgZmxvYXQgYSA9IG1peChsYiwgbHQsIGYueSk7CiAgICBoaWdocCBmbG9hdCBiID0gbWl4KHJiLCBydCwgZi55KTsKICAgIGhpZ2hwIGZsb2F0IGMgPSBtaXgoYSwgYiwgZi54KTsKICAgIHJldHVybiBjOwp9CgpoaWdocCBmbG9hdCBQQ0YoaGlnaHAgdmVjMiB1diwgaGlnaHAgZmxvYXQgY29tcGFyZSwgaGlnaHAgdmVjMiBzbVNpemUpCnsKICAgIGhpZ2hwIGZsb2F0IHJlc3VsdCA9IHNoYWRvd0xlcnAodXYgKyAodmVjMigtMS4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diArICh2ZWMyKC0xLjAsIDAuMCkgLyBzbVNpemUpLCBjb21wYXJlLCBzbVNpemUpOwogICAgcmVzdWx0ICs9IHNoYWRvd0xlcnAodXYgKyAodmVjMigtMS4wLCAxLjApIC8gc21TaXplKSwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoMC4wLCAtMS4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoMC4wLCAxLjApIC8gc21TaXplKSwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoMS4wLCAtMS4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diArICh2ZWMyKDEuMCwgMC4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diArICh2ZWMyKDEuMCkgLyBzbVNpemUpLCBjb21wYXJlLCBzbVNpemUpOwogICAgcmV0dXJuIHJlc3VsdCAvIDkuMDsKfQoKaGlnaHAgZmxvYXQgc2hhZG93VGVzdChoaWdocCB2ZWMzIGxQb3MsIGhpZ2hwIGZsb2F0IHNoYWRvd3NCaWFzXzEsIGhpZ2hwIHZlYzIgc21TaXplKQp7CiAgICBib29sIF8zMDIgPSBsUG9zLnggPCAwLjA7CiAgICBib29sIF8zMDg7CiAgICBpZiAoIV8zMDIpCiAgICB7CiAgICAgICAgXzMwOCA9IGxQb3MueSA8IDAuMDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMzA4ID0gXzMwMjsKICAgIH0KICAgIGJvb2wgXzMxNDsKICAgIGlmICghXzMwOCkKICAgIHsKICAgICAgICBfMzE0ID0gbFBvcy54ID4gMS4wOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8zMTQgPSBfMzA4OwogICAgfQogICAgYm9vbCBfMzIwOwogICAgaWYgKCFfMzE0KQogICAgewogICAgICAgIF8zMjAgPSBsUG9zLnkgPiAxLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzMyMCA9IF8zMTQ7CiAgICB9CiAgICBpZiAoXzMyMCkKICAgIHsKICAgICAgICByZXR1cm4gMS4wOwogICAgfQogICAgcmV0dXJuIFBDRihsUG9zLnh5LCBsUG9zLnogLSBzaGFkb3dzQmlhc18xLCBzbVNpemUpOwp9CgpoaWdocCBmbG9hdCBzaGFkb3dUZXN0Q2FzY2FkZShoaWdocCB2ZWMzIGV5ZV8xLCBoaWdocCB2ZWMzIHAsIGhpZ2hwIGZsb2F0IHNoYWRvd3NCaWFzXzEsIGhpZ2hwIHZlYzIgc21TaXplKQp7CiAgICBoaWdocCBmbG9hdCBkID0gZGlzdGFuY2UoZXllXzEsIHApOwogICAgaW50IHBhcmFtOwogICAgaW50IHBhcmFtXzE7CiAgICBoaWdocCBtYXQ0IF80MTggPSBnZXRDYXNjYWRlTWF0KGQsIHBhcmFtLCBwYXJhbV8xKTsKICAgIGludCBjYXNpID0gcGFyYW07CiAgICBpbnQgY2FzSW5kZXggPSBwYXJhbV8xOwogICAgaGlnaHAgbWF0NCBMV1ZQID0gXzQxODsKICAgIGhpZ2hwIHZlYzQgbFBvcyA9IExXVlAgKiB2ZWM0KHAsIDEuMCk7CiAgICBoaWdocCBmbG9hdCB2aXNpYmlsaXR5ID0gMS4wOwogICAgaWYgKGxQb3MudyA%IDAuMCkKICAgIHsKICAgICAgICB2aXNpYmlsaXR5ID0gc2hhZG93VGVzdChsUG9zLnh5eiAvIHZlYzMobFBvcy53KSwgc2hhZG93c0JpYXNfMSwgc21TaXplKTsKICAgIH0KICAgIGhpZ2hwIGZsb2F0IG5leHRTcGxpdCA9IGNhc0RhdGFbMTZdW2Nhc2ldOwogICAgaGlnaHAgZmxvYXQgXzQ0NjsKICAgIGlmIChjYXNpID09IDApCiAgICB7CiAgICAgICAgXzQ0NiA9IG5leHRTcGxpdDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfNDQ2ID0gbmV4dFNwbGl0IC0gKGNhc0RhdGFbMTZdW2Nhc2kgLSAxXSk7CiAgICB9CiAgICBoaWdocCBmbG9hdCBzcGxpdFNpemUgPSBfNDQ2OwogICAgaGlnaHAgZmxvYXQgc3BsaXREaXN0ID0gKG5leHRTcGxpdCAtIGQpIC8gc3BsaXRTaXplOwogICAgaGlnaHAgZmxvYXQgdmlzaWJpbGl0eTI7CiAgICBpZiAoKHNwbGl0RGlzdCA8PSAwLjE1MDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpICYmIChjYXNpICE9IDMpKQogICAgewogICAgICAgIGludCBjYXNJbmRleDIgPSBjYXNJbmRleCArIDQ7CiAgICAgICAgaGlnaHAgbWF0NCBMV1ZQMiA9IG1hdDQodmVjNChjYXNEYXRhW2Nhc0luZGV4MiArIDBdKSwgdmVjNChjYXNEYXRhW2Nhc0luZGV4MiArIDFdKSwgdmVjNChjYXNEYXRhW2Nhc0luZGV4MiArIDJdKSwgdmVjNChjYXNEYXRhW2Nhc0luZGV4MiArIDNdKSk7CiAgICAgICAgaGlnaHAgdmVjNCBsUG9zMiA9IExXVlAyICogdmVjNChwLCAxLjApOwogICAgICAgIHZpc2liaWxpdHkyID0gMS4wOwogICAgICAgIGlmIChsUG9zMi53ID4gMC4wKQogICAgICAgIHsKICAgICAgICAgICAgdmlzaWJpbGl0eTIgPSBzaGFkb3dUZXN0KGxQb3MyLnh5eiAvIHZlYzMobFBvczIudyksIHNoYWRvd3NCaWFzXzEsIHNtU2l6ZSk7CiAgICAgICAgfQogICAgICAgIGhpZ2hwIGZsb2F0IGxlcnBBbXQgPSBzbW9vdGhzdGVwKDAuMCwgMC4xNTAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1LCBzcGxpdERpc3QpOwogICAgICAgIHJldHVybiBtaXgodmlzaWJpbGl0eTIsIHZpc2liaWxpdHksIGxlcnBBbXQpOwogICAgfQogICAgcmV0dXJuIHZpc2liaWxpdHk7Cn0KCmhpZ2hwIHZlYzMgbGFtYmVydERpZmZ1c2VCUkRGKGhpZ2hwIHZlYzMgYWxiZWRvLCBoaWdocCBmbG9hdCBubCkKewogICAgcmV0dXJuIGFsYmVkbyAqIG1heCgwLjAsIG5sKTsKfQoKaGlnaHAgZmxvYXQgZF9nZ3goaGlnaHAgZmxvYXQgbmgsIGhpZ2hwIGZsb2F0IGEpCnsKICAgIGhpZ2hwIGZsb2F0IGEyID0gYSAqIGE7CiAgICBoaWdocCBmbG9hdCBkZW5vbSA9IHBvdygoKG5oICogbmgpICogKGEyIC0gMS4wKSkgKyAxLjAsIDIuMCk7CiAgICByZXR1cm4gKGEyICogMC4zMTgzMDk4NzMzNDI1MTQwMzgwODU5Mzc1KSAvIGRlbm9tOwp9CgpoaWdocCBmbG9hdCB2X3NtaXRoc2NobGljayhoaWdocCBmbG9hdCBubCwgaGlnaHAgZmxvYXQgbnYsIGhpZ2hwIGZsb2F0IGEpCnsKICAgIHJldHVybiAxLjAgLyAoKChubCAqICgxLjAgLSBhKSkgKyBhKSAqICgobnYgKiAoMS4wIC0gYSkpICsgYSkpOwp9CgpoaWdocCB2ZWMzIGZfc2NobGljayhoaWdocCB2ZWMzIGYwLCBoaWdocCBmbG9hdCB2aCkKewogICAgcmV0dXJuIGYwICsgKCh2ZWMzKDEuMCkgLSBmMCkgKiBleHAyKCgoLTUuNTU0NzI5OTM4NTA3MDgwMDc4MTI1ICogdmgpIC0gNi45ODMxNjAwMTg5MjA4OTg0Mzc1KSAqIHZoKSk7Cn0KCmhpZ2hwIHZlYzMgc3BlY3VsYXJCUkRGKGhpZ2hwIHZlYzMgZjAsIGhpZ2hwIGZsb2F0IHJvdWdobmVzcywgaGlnaHAgZmxvYXQgbmwsIGhpZ2hwIGZsb2F0IG5oLCBoaWdocCBmbG9hdCBudiwgaGlnaHAgZmxvYXQgdmgpCnsKICAgIGhpZ2hwIGZsb2F0IGEgPSByb3VnaG5lc3MgKiByb3VnaG5lc3M7CiAgICByZXR1cm4gKGZfc2NobGljayhmMCwgdmgpICogKGRfZ2d4KG5oLCBhKSAqIGNsYW1wKHZfc21pdGhzY2hsaWNrKG5sLCBudiwgYSksIDAuMCwgMS4wKSkpIC8gdmVjMyg0LjApOwp9Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IGcwID0gdGV4dHVyZTJEKGdidWZmZXIwLCB0ZXhDb29yZCk7CiAgICBoaWdocCB2ZWM0IGcxID0gdGV4dHVyZTJEKGdidWZmZXIxLCB0ZXhDb29yZCk7CiAgICBoaWdocCBmbG9hdCBkZXB0aCA9ICh0ZXh0dXJlMkQoZ2J1ZmZlckQsIHRleENvb3JkKS54ICogMi4wKSAtIDEuMDsKICAgIGhpZ2hwIHZlYzMgbjsKICAgIG4ueiA9ICgxLjAgLSBhYnMoZzAueCkpIC0gYWJzKGcwLnkpOwogICAgaGlnaHAgZmxvYXQgdmlzaWJpbGl0eTsKICAgIGhpZ2hwIGZsb2F0IGRvdE5MOwogICAgaGlnaHAgZmxvYXQgZG90TlY7CiAgICBoaWdocCB2ZWMzIHY7CiAgICBoaWdocCB2ZWMyIG1ldHJvdWdoOwogICAgaGlnaHAgdmVjMyBmMDsKICAgIGhpZ2hwIHZlYzIgXzYyMDsKICAgIGhpZ2hwIHZlYzMgYWxiZWRvOwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzYyMCA9IGcwLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF82MjAgPSBvY3RhaGVkcm9uV3JhcChnMC54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfNjIwLngsIF82MjAueSwgbi56KTsKICAgIG4gPSBub3JtYWxpemUobik7CiAgICBoaWdocCB2ZWMzIHAgPSBnZXRQb3MoZXllLCBleWVMb29rLCB2aWV3UmF5LCBkZXB0aCwgY2FtZXJhUHJvaik7CiAgICBtZXRyb3VnaCA9IHVucGFja0Zsb2F0KGcwLnopOwogICAgdiA9IG5vcm1hbGl6ZShleWUgLSBwKTsKICAgIGRvdE5WID0gZG90KG4sIHYpOwogICAgYWxiZWRvID0gc3VyZmFjZUFsYmVkbyhnMS54eXosIG1ldHJvdWdoLngpOwogICAgZjAgPSBzdXJmYWNlRjAoZzEueHl6LCBtZXRyb3VnaC54KTsKICAgIGRvdE5MID0gZG90KG4sIGwpOwogICAgdmlzaWJpbGl0eSA9IDEuMDsKICAgIGlmIChsaWdodFNoYWRvdyA9PSAxKQogICAgewogICAgICAgIHZpc2liaWxpdHkgPSBzaGFkb3dUZXN0Q2FzY2FkZShleWUsIHAsIHNoYWRvd3NCaWFzLCB2ZWMyKDQwOTYuMCwgMTAyNC4wKSk7CiAgICB9CiAgICBoaWdocCB2ZWMzIGggPSBub3JtYWxpemUodiArIGwpOwogICAgaGlnaHAgZmxvYXQgZG90TkggPSBkb3QobiwgaCk7CiAgICBoaWdocCBmbG9hdCBkb3RWSCA9IGRvdCh2LCBoKTsKICAgIGhpZ2hwIHZlYzMgXzcyMiA9IGxhbWJlcnREaWZmdXNlQlJERihhbGJlZG8sIGRvdE5MKSArIHNwZWN1bGFyQlJERihmMCwgbWV0cm91Z2gueSwgZG90TkwsIGRvdE5ILCBkb3ROViwgZG90VkgpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KF83MjIueCwgXzcyMi55LCBfNzIyLnosIGdsX0ZyYWdEYXRhWzBdLncpOwogICAgaGlnaHAgdmVjMyBfNzI5ID0gZ2xfRnJhZ0RhdGFbMF0ueHl6ICogbGlnaHRDb2xvcjsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChfNzI5LngsIF83MjkueSwgXzcyOS56LCBnbF9GcmFnRGF0YVswXS53KTsKICAgIGhpZ2hwIHZlYzMgXzczNSA9IGdsX0ZyYWdEYXRhWzBdLnh5eiAqIHZpc2liaWxpdHk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoXzczNS54LCBfNzM1LnksIF83MzUueiwgZ2xfRnJhZ0RhdGFbMF0udyk7Cn0KCg";
kha_Shaders.deferred_light_quad_fragData1 = "s9638:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHNoYWRvd01hcDsKdW5pZm9ybSB2ZWM0IGNhc0RhdGFbMjBdOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGdidWZmZXIxOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGdidWZmZXJEOwp1bmlmb3JtIHZlYzMgZXllOwp1bmlmb3JtIHZlYzMgZXllTG9vazsKdW5pZm9ybSB2ZWMyIGNhbWVyYVByb2o7CnVuaWZvcm0gdmVjMyBsOwp1bmlmb3JtIGludCBsaWdodFNoYWRvdzsKdW5pZm9ybSBmbG9hdCBzaGFkb3dzQmlhczsKdW5pZm9ybSB2ZWMzIGxpZ2h0Q29sb3I7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyQ3ViZSBzaGFkb3dNYXBDdWJlOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIHZlYzMgdmlld1JheTsKCnZlYzIgb2N0YWhlZHJvbldyYXAodmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:IDEuMCA6IC0xLjApOwp9Cgp2ZWMzIGdldFBvcyh2ZWMzIGV5ZV8xLCB2ZWMzIGV5ZUxvb2tfMSwgdmVjMyB2aWV3UmF5XzEsIGZsb2F0IGRlcHRoLCB2ZWMyIGNhbWVyYVByb2pfMSkKewogICAgdmVjMyB2cmF5ID0gbm9ybWFsaXplKHZpZXdSYXlfMSk7CiAgICBmbG9hdCBsaW5lYXJEZXB0aCA9IGNhbWVyYVByb2pfMS55IC8gKCgoZGVwdGggKiAwLjUpICsgMC41KSAtIGNhbWVyYVByb2pfMS54KTsKICAgIGZsb2F0IHZpZXdaRGlzdCA9IGRvdChleWVMb29rXzEsIHZyYXkpOwogICAgdmVjMyB3cG9zaXRpb24gPSBleWVfMSArICh2cmF5ICogKGxpbmVhckRlcHRoIC8gdmlld1pEaXN0KSk7CiAgICByZXR1cm4gd3Bvc2l0aW9uOwp9Cgp2ZWMyIHVucGFja0Zsb2F0KGZsb2F0IGYpCnsKICAgIHJldHVybiB2ZWMyKGZsb29yKGYpIC8gMTAwLjAsIGZyYWN0KGYpKTsKfQoKdmVjMyBzdXJmYWNlQWxiZWRvKHZlYzMgYmFzZUNvbG9yLCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBtaXgoYmFzZUNvbG9yLCB2ZWMzKDAuMCksIHZlYzMobWV0YWxuZXNzKSk7Cn0KCnZlYzMgc3VyZmFjZUYwKHZlYzMgYmFzZUNvbG9yLCBmbG9hdCBtZXRhbG5lc3MpCnsKICAgIHJldHVybiBtaXgodmVjMygwLjAzOTk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSksIGJhc2VDb2xvciwgdmVjMyhtZXRhbG5lc3MpKTsKfQoKbWF0NCBnZXRDYXNjYWRlTWF0KGZsb2F0IGQsIGlub3V0IGludCBjYXNpLCBpbm91dCBpbnQgY2FzSW5kZXgpCnsKICAgIHZlYzQgY29tcCA9IHZlYzQoZmxvYXQoZCA%IGNhc0RhdGFbMTZdLngpLCBmbG9hdChkID4gY2FzRGF0YVsxNl0ueSksIGZsb2F0KGQgPiBjYXNEYXRhWzE2XS56KSwgZmxvYXQoZCA%IGNhc0RhdGFbMTZdLncpKTsKICAgIGNhc2kgPSBpbnQobWluKGRvdCh2ZWM0KDEuMCksIGNvbXApLCA0LjApKTsKICAgIGNhc0luZGV4ID0gY2FzaSAqIDQ7CiAgICByZXR1cm4gbWF0NCh2ZWM0KGNhc0RhdGFbY2FzSW5kZXggKyAwXSksIHZlYzQoY2FzRGF0YVtjYXNJbmRleCArIDFdKSwgdmVjNChjYXNEYXRhW2Nhc0luZGV4ICsgMl0pLCB2ZWM0KGNhc0RhdGFbY2FzSW5kZXggKyAzXSkpOwp9CgpmbG9hdCBzaGFkb3dDb21wYXJlKHZlYzIgdXYsIGZsb2F0IGNvbXBhcmUpCnsKICAgIGZsb2F0IGRlcHRoID0gdGV4dHVyZTJEKHNoYWRvd01hcCwgdXYpLng7CiAgICByZXR1cm4gc3RlcChjb21wYXJlLCBkZXB0aCk7Cn0KCmZsb2F0IHNoYWRvd0xlcnAodmVjMiB1diwgZmxvYXQgY29tcGFyZSwgdmVjMiBzbVNpemUpCnsKICAgIHZlYzIgdGV4ZWxTaXplID0gdmVjMigxLjApIC8gc21TaXplOwogICAgdmVjMiBmID0gZnJhY3QoKHV2ICogc21TaXplKSArIHZlYzIoMC41KSk7CiAgICB2ZWMyIGNlbnRyb2lkVVYgPSBmbG9vcigodXYgKiBzbVNpemUpICsgdmVjMigwLjUpKSAvIHNtU2l6ZTsKICAgIGZsb2F0IGxiID0gc2hhZG93Q29tcGFyZShjZW50cm9pZFVWLCBjb21wYXJlKTsKICAgIGZsb2F0IGx0ID0gc2hhZG93Q29tcGFyZShjZW50cm9pZFVWICsgKHRleGVsU2l6ZSAqIHZlYzIoMC4wLCAxLjApKSwgY29tcGFyZSk7CiAgICBmbG9hdCByYiA9IHNoYWRvd0NvbXBhcmUoY2VudHJvaWRVViArICh0ZXhlbFNpemUgKiB2ZWMyKDEuMCwgMC4wKSksIGNvbXBhcmUpOwogICAgZmxvYXQgcnQgPSBzaGFkb3dDb21wYXJlKGNlbnRyb2lkVVYgKyB0ZXhlbFNpemUsIGNvbXBhcmUpOwogICAgZmxvYXQgYSA9IG1peChsYiwgbHQsIGYueSk7CiAgICBmbG9hdCBiID0gbWl4KHJiLCBydCwgZi55KTsKICAgIGZsb2F0IGMgPSBtaXgoYSwgYiwgZi54KTsKICAgIHJldHVybiBjOwp9CgpmbG9hdCBQQ0YodmVjMiB1diwgZmxvYXQgY29tcGFyZSwgdmVjMiBzbVNpemUpCnsKICAgIGZsb2F0IHJlc3VsdCA9IHNoYWRvd0xlcnAodXYgKyAodmVjMigtMS4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diArICh2ZWMyKC0xLjAsIDAuMCkgLyBzbVNpemUpLCBjb21wYXJlLCBzbVNpemUpOwogICAgcmVzdWx0ICs9IHNoYWRvd0xlcnAodXYgKyAodmVjMigtMS4wLCAxLjApIC8gc21TaXplKSwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoMC4wLCAtMS4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoMC4wLCAxLjApIC8gc21TaXplKSwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoMS4wLCAtMS4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diArICh2ZWMyKDEuMCwgMC4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diArICh2ZWMyKDEuMCkgLyBzbVNpemUpLCBjb21wYXJlLCBzbVNpemUpOwogICAgcmV0dXJuIHJlc3VsdCAvIDkuMDsKfQoKZmxvYXQgc2hhZG93VGVzdCh2ZWMzIGxQb3MsIGZsb2F0IHNoYWRvd3NCaWFzXzEsIHZlYzIgc21TaXplKQp7CiAgICBib29sIF8zMDIgPSBsUG9zLnggPCAwLjA7CiAgICBib29sIF8zMDg7CiAgICBpZiAoIV8zMDIpCiAgICB7CiAgICAgICAgXzMwOCA9IGxQb3MueSA8IDAuMDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMzA4ID0gXzMwMjsKICAgIH0KICAgIGJvb2wgXzMxNDsKICAgIGlmICghXzMwOCkKICAgIHsKICAgICAgICBfMzE0ID0gbFBvcy54ID4gMS4wOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8zMTQgPSBfMzA4OwogICAgfQogICAgYm9vbCBfMzIwOwogICAgaWYgKCFfMzE0KQogICAgewogICAgICAgIF8zMjAgPSBsUG9zLnkgPiAxLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzMyMCA9IF8zMTQ7CiAgICB9CiAgICBpZiAoXzMyMCkKICAgIHsKICAgICAgICByZXR1cm4gMS4wOwogICAgfQogICAgcmV0dXJuIFBDRihsUG9zLnh5LCBsUG9zLnogLSBzaGFkb3dzQmlhc18xLCBzbVNpemUpOwp9CgpmbG9hdCBzaGFkb3dUZXN0Q2FzY2FkZSh2ZWMzIGV5ZV8xLCB2ZWMzIHAsIGZsb2F0IHNoYWRvd3NCaWFzXzEsIHZlYzIgc21TaXplKQp7CiAgICBmbG9hdCBkID0gZGlzdGFuY2UoZXllXzEsIHApOwogICAgaW50IHBhcmFtOwogICAgaW50IHBhcmFtXzE7CiAgICBtYXQ0IF80MTggPSBnZXRDYXNjYWRlTWF0KGQsIHBhcmFtLCBwYXJhbV8xKTsKICAgIGludCBjYXNpID0gcGFyYW07CiAgICBpbnQgY2FzSW5kZXggPSBwYXJhbV8xOwogICAgbWF0NCBMV1ZQID0gXzQxODsKICAgIHZlYzQgbFBvcyA9IExXVlAgKiB2ZWM0KHAsIDEuMCk7CiAgICBmbG9hdCB2aXNpYmlsaXR5ID0gMS4wOwogICAgaWYgKGxQb3MudyA%IDAuMCkKICAgIHsKICAgICAgICB2aXNpYmlsaXR5ID0gc2hhZG93VGVzdChsUG9zLnh5eiAvIHZlYzMobFBvcy53KSwgc2hhZG93c0JpYXNfMSwgc21TaXplKTsKICAgIH0KICAgIGZsb2F0IG5leHRTcGxpdCA9IGNhc0RhdGFbMTZdW2Nhc2ldOwogICAgZmxvYXQgXzQ0NjsKICAgIGlmIChjYXNpID09IDApCiAgICB7CiAgICAgICAgXzQ0NiA9IG5leHRTcGxpdDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfNDQ2ID0gbmV4dFNwbGl0IC0gKGNhc0RhdGFbMTZdW2Nhc2kgLSAxXSk7CiAgICB9CiAgICBmbG9hdCBzcGxpdFNpemUgPSBfNDQ2OwogICAgZmxvYXQgc3BsaXREaXN0ID0gKG5leHRTcGxpdCAtIGQpIC8gc3BsaXRTaXplOwogICAgZmxvYXQgdmlzaWJpbGl0eTI7CiAgICBpZiAoKHNwbGl0RGlzdCA8PSAwLjE1MDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUpICYmIChjYXNpICE9IDMpKQogICAgewogICAgICAgIGludCBjYXNJbmRleDIgPSBjYXNJbmRleCArIDQ7CiAgICAgICAgbWF0NCBMV1ZQMiA9IG1hdDQodmVjNChjYXNEYXRhW2Nhc0luZGV4MiArIDBdKSwgdmVjNChjYXNEYXRhW2Nhc0luZGV4MiArIDFdKSwgdmVjNChjYXNEYXRhW2Nhc0luZGV4MiArIDJdKSwgdmVjNChjYXNEYXRhW2Nhc0luZGV4MiArIDNdKSk7CiAgICAgICAgdmVjNCBsUG9zMiA9IExXVlAyICogdmVjNChwLCAxLjApOwogICAgICAgIHZpc2liaWxpdHkyID0gMS4wOwogICAgICAgIGlmIChsUG9zMi53ID4gMC4wKQogICAgICAgIHsKICAgICAgICAgICAgdmlzaWJpbGl0eTIgPSBzaGFkb3dUZXN0KGxQb3MyLnh5eiAvIHZlYzMobFBvczIudyksIHNoYWRvd3NCaWFzXzEsIHNtU2l6ZSk7CiAgICAgICAgfQogICAgICAgIGZsb2F0IGxlcnBBbXQgPSBzbW9vdGhzdGVwKDAuMCwgMC4xNTAwMDAwMDU5NjA0NjQ0Nzc1MzkwNjI1LCBzcGxpdERpc3QpOwogICAgICAgIHJldHVybiBtaXgodmlzaWJpbGl0eTIsIHZpc2liaWxpdHksIGxlcnBBbXQpOwogICAgfQogICAgcmV0dXJuIHZpc2liaWxpdHk7Cn0KCnZlYzMgbGFtYmVydERpZmZ1c2VCUkRGKHZlYzMgYWxiZWRvLCBmbG9hdCBubCkKewogICAgcmV0dXJuIGFsYmVkbyAqIG1heCgwLjAsIG5sKTsKfQoKZmxvYXQgZF9nZ3goZmxvYXQgbmgsIGZsb2F0IGEpCnsKICAgIGZsb2F0IGEyID0gYSAqIGE7CiAgICBmbG9hdCBkZW5vbSA9IHBvdygoKG5oICogbmgpICogKGEyIC0gMS4wKSkgKyAxLjAsIDIuMCk7CiAgICByZXR1cm4gKGEyICogMC4zMTgzMDk4NzMzNDI1MTQwMzgwODU5Mzc1KSAvIGRlbm9tOwp9CgpmbG9hdCB2X3NtaXRoc2NobGljayhmbG9hdCBubCwgZmxvYXQgbnYsIGZsb2F0IGEpCnsKICAgIHJldHVybiAxLjAgLyAoKChubCAqICgxLjAgLSBhKSkgKyBhKSAqICgobnYgKiAoMS4wIC0gYSkpICsgYSkpOwp9Cgp2ZWMzIGZfc2NobGljayh2ZWMzIGYwLCBmbG9hdCB2aCkKewogICAgcmV0dXJuIGYwICsgKCh2ZWMzKDEuMCkgLSBmMCkgKiBleHAyKCgoLTUuNTU0NzI5OTM4NTA3MDgwMDc4MTI1ICogdmgpIC0gNi45ODMxNjAwMTg5MjA4OTg0Mzc1KSAqIHZoKSk7Cn0KCnZlYzMgc3BlY3VsYXJCUkRGKHZlYzMgZjAsIGZsb2F0IHJvdWdobmVzcywgZmxvYXQgbmwsIGZsb2F0IG5oLCBmbG9hdCBudiwgZmxvYXQgdmgpCnsKICAgIGZsb2F0IGEgPSByb3VnaG5lc3MgKiByb3VnaG5lc3M7CiAgICByZXR1cm4gKGZfc2NobGljayhmMCwgdmgpICogKGRfZ2d4KG5oLCBhKSAqIGNsYW1wKHZfc21pdGhzY2hsaWNrKG5sLCBudiwgYSksIDAuMCwgMS4wKSkpIC8gdmVjMyg0LjApOwp9Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWM0IGcwID0gdGV4dHVyZTJEKGdidWZmZXIwLCB0ZXhDb29yZCk7CiAgICB2ZWM0IGcxID0gdGV4dHVyZTJEKGdidWZmZXIxLCB0ZXhDb29yZCk7CiAgICBmbG9hdCBkZXB0aCA9ICh0ZXh0dXJlMkQoZ2J1ZmZlckQsIHRleENvb3JkKS54ICogMi4wKSAtIDEuMDsKICAgIHZlYzMgbjsKICAgIG4ueiA9ICgxLjAgLSBhYnMoZzAueCkpIC0gYWJzKGcwLnkpOwogICAgZmxvYXQgdmlzaWJpbGl0eTsKICAgIGZsb2F0IGRvdE5MOwogICAgZmxvYXQgZG90TlY7CiAgICB2ZWMzIHY7CiAgICB2ZWMyIG1ldHJvdWdoOwogICAgdmVjMyBmMDsKICAgIHZlYzIgXzYyMDsKICAgIHZlYzMgYWxiZWRvOwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzYyMCA9IGcwLnh5OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF82MjAgPSBvY3RhaGVkcm9uV3JhcChnMC54eSk7CiAgICB9CiAgICBuID0gdmVjMyhfNjIwLngsIF82MjAueSwgbi56KTsKICAgIG4gPSBub3JtYWxpemUobik7CiAgICB2ZWMzIHAgPSBnZXRQb3MoZXllLCBleWVMb29rLCB2aWV3UmF5LCBkZXB0aCwgY2FtZXJhUHJvaik7CiAgICBtZXRyb3VnaCA9IHVucGFja0Zsb2F0KGcwLnopOwogICAgdiA9IG5vcm1hbGl6ZShleWUgLSBwKTsKICAgIGRvdE5WID0gZG90KG4sIHYpOwogICAgYWxiZWRvID0gc3VyZmFjZUFsYmVkbyhnMS54eXosIG1ldHJvdWdoLngpOwogICAgZjAgPSBzdXJmYWNlRjAoZzEueHl6LCBtZXRyb3VnaC54KTsKICAgIGRvdE5MID0gZG90KG4sIGwpOwogICAgdmlzaWJpbGl0eSA9IDEuMDsKICAgIGlmIChsaWdodFNoYWRvdyA9PSAxKQogICAgewogICAgICAgIHZpc2liaWxpdHkgPSBzaGFkb3dUZXN0Q2FzY2FkZShleWUsIHAsIHNoYWRvd3NCaWFzLCB2ZWMyKDQwOTYuMCwgMTAyNC4wKSk7CiAgICB9CiAgICB2ZWMzIGggPSBub3JtYWxpemUodiArIGwpOwogICAgZmxvYXQgZG90TkggPSBkb3QobiwgaCk7CiAgICBmbG9hdCBkb3RWSCA9IGRvdCh2LCBoKTsKICAgIHZlYzMgXzcyMiA9IGxhbWJlcnREaWZmdXNlQlJERihhbGJlZG8sIGRvdE5MKSArIHNwZWN1bGFyQlJERihmMCwgbWV0cm91Z2gueSwgZG90TkwsIGRvdE5ILCBkb3ROViwgZG90VkgpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KF83MjIueCwgXzcyMi55LCBfNzIyLnosIGdsX0ZyYWdEYXRhWzBdLncpOwogICAgdmVjMyBfNzI5ID0gZ2xfRnJhZ0RhdGFbMF0ueHl6ICogbGlnaHRDb2xvcjsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChfNzI5LngsIF83MjkueSwgXzcyOS56LCBnbF9GcmFnRGF0YVswXS53KTsKICAgIHZlYzMgXzczNSA9IGdsX0ZyYWdEYXRhWzBdLnh5eiAqIHZpc2liaWxpdHk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoXzczNS54LCBfNzM1LnksIF83MzUueiwgZ2xfRnJhZ0RhdGFbMF0udyk7Cn0KCg";
kha_Shaders.deferred_light_quad_fragData2 = "s9591:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHNoYWRvd01hcDsKdW5pZm9ybSB2ZWM0IGNhc0RhdGFbMjBdOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGdidWZmZXIwOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGdidWZmZXIxOwp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGdidWZmZXJEOwp1bmlmb3JtIHZlYzMgZXllOwp1bmlmb3JtIHZlYzMgZXllTG9vazsKdW5pZm9ybSB2ZWMyIGNhbWVyYVByb2o7CnVuaWZvcm0gdmVjMyBsOwp1bmlmb3JtIGludCBsaWdodFNoYWRvdzsKdW5pZm9ybSBmbG9hdCBzaGFkb3dzQmlhczsKdW5pZm9ybSB2ZWMzIGxpZ2h0Q29sb3I7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyQ3ViZSBzaGFkb3dNYXBDdWJlOwoKaW4gdmVjMiB0ZXhDb29yZDsKaW4gdmVjMyB2aWV3UmF5OwpvdXQgdmVjNCBmcmFnQ29sb3I7Cgp2ZWMyIG9jdGFoZWRyb25XcmFwKHZlYzIgdikKewogICAgcmV0dXJuICh2ZWMyKDEuMCkgLSBhYnModi55eCkpICogdmVjMigodi54ID49IDAuMCkgPyAxLjAgOiAtMS4wLCAodi55ID49IDAuMCkgPyAxLjAgOiAtMS4wKTsKfQoKdmVjMyBnZXRQb3ModmVjMyBleWVfMSwgdmVjMyBleWVMb29rXzEsIHZlYzMgdmlld1JheV8xLCBmbG9hdCBkZXB0aCwgdmVjMiBjYW1lcmFQcm9qXzEpCnsKICAgIHZlYzMgdnJheSA9IG5vcm1hbGl6ZSh2aWV3UmF5XzEpOwogICAgZmxvYXQgbGluZWFyRGVwdGggPSBjYW1lcmFQcm9qXzEueSAvICgoKGRlcHRoICogMC41KSArIDAuNSkgLSBjYW1lcmFQcm9qXzEueCk7CiAgICBmbG9hdCB2aWV3WkRpc3QgPSBkb3QoZXllTG9va18xLCB2cmF5KTsKICAgIHZlYzMgd3Bvc2l0aW9uID0gZXllXzEgKyAodnJheSAqIChsaW5lYXJEZXB0aCAvIHZpZXdaRGlzdCkpOwogICAgcmV0dXJuIHdwb3NpdGlvbjsKfQoKdmVjMiB1bnBhY2tGbG9hdChmbG9hdCBmKQp7CiAgICByZXR1cm4gdmVjMihmbG9vcihmKSAvIDEwMC4wLCBmcmFjdChmKSk7Cn0KCnZlYzMgc3VyZmFjZUFsYmVkbyh2ZWMzIGJhc2VDb2xvciwgZmxvYXQgbWV0YWxuZXNzKQp7CiAgICByZXR1cm4gbWl4KGJhc2VDb2xvciwgdmVjMygwLjApLCB2ZWMzKG1ldGFsbmVzcykpOwp9Cgp2ZWMzIHN1cmZhY2VGMCh2ZWMzIGJhc2VDb2xvciwgZmxvYXQgbWV0YWxuZXNzKQp7CiAgICByZXR1cm4gbWl4KHZlYzMoMC4wMzk5OTk5OTkxMDU5MzAzMjgzNjkxNDA2MjUpLCBiYXNlQ29sb3IsIHZlYzMobWV0YWxuZXNzKSk7Cn0KCm1hdDQgZ2V0Q2FzY2FkZU1hdChmbG9hdCBkLCBpbm91dCBpbnQgY2FzaSwgaW5vdXQgaW50IGNhc0luZGV4KQp7CiAgICB2ZWM0IGNvbXAgPSB2ZWM0KGZsb2F0KGQgPiBjYXNEYXRhWzE2XS54KSwgZmxvYXQoZCA%IGNhc0RhdGFbMTZdLnkpLCBmbG9hdChkID4gY2FzRGF0YVsxNl0ueiksIGZsb2F0KGQgPiBjYXNEYXRhWzE2XS53KSk7CiAgICBjYXNpID0gaW50KG1pbihkb3QodmVjNCgxLjApLCBjb21wKSwgNC4wKSk7CiAgICBjYXNJbmRleCA9IGNhc2kgKiA0OwogICAgcmV0dXJuIG1hdDQodmVjNChjYXNEYXRhW2Nhc0luZGV4ICsgMF0pLCB2ZWM0KGNhc0RhdGFbY2FzSW5kZXggKyAxXSksIHZlYzQoY2FzRGF0YVtjYXNJbmRleCArIDJdKSwgdmVjNChjYXNEYXRhW2Nhc0luZGV4ICsgM10pKTsKfQoKZmxvYXQgc2hhZG93Q29tcGFyZSh2ZWMyIHV2LCBmbG9hdCBjb21wYXJlKQp7CiAgICBmbG9hdCBkZXB0aCA9IHRleHR1cmUoc2hhZG93TWFwLCB1dikueDsKICAgIHJldHVybiBzdGVwKGNvbXBhcmUsIGRlcHRoKTsKfQoKZmxvYXQgc2hhZG93TGVycCh2ZWMyIHV2LCBmbG9hdCBjb21wYXJlLCB2ZWMyIHNtU2l6ZSkKewogICAgdmVjMiB0ZXhlbFNpemUgPSB2ZWMyKDEuMCkgLyBzbVNpemU7CiAgICB2ZWMyIGYgPSBmcmFjdCgodXYgKiBzbVNpemUpICsgdmVjMigwLjUpKTsKICAgIHZlYzIgY2VudHJvaWRVViA9IGZsb29yKCh1diAqIHNtU2l6ZSkgKyB2ZWMyKDAuNSkpIC8gc21TaXplOwogICAgZmxvYXQgbGIgPSBzaGFkb3dDb21wYXJlKGNlbnRyb2lkVVYsIGNvbXBhcmUpOwogICAgZmxvYXQgbHQgPSBzaGFkb3dDb21wYXJlKGNlbnRyb2lkVVYgKyAodGV4ZWxTaXplICogdmVjMigwLjAsIDEuMCkpLCBjb21wYXJlKTsKICAgIGZsb2F0IHJiID0gc2hhZG93Q29tcGFyZShjZW50cm9pZFVWICsgKHRleGVsU2l6ZSAqIHZlYzIoMS4wLCAwLjApKSwgY29tcGFyZSk7CiAgICBmbG9hdCBydCA9IHNoYWRvd0NvbXBhcmUoY2VudHJvaWRVViArIHRleGVsU2l6ZSwgY29tcGFyZSk7CiAgICBmbG9hdCBhID0gbWl4KGxiLCBsdCwgZi55KTsKICAgIGZsb2F0IGIgPSBtaXgocmIsIHJ0LCBmLnkpOwogICAgZmxvYXQgYyA9IG1peChhLCBiLCBmLngpOwogICAgcmV0dXJuIGM7Cn0KCmZsb2F0IFBDRih2ZWMyIHV2LCBmbG9hdCBjb21wYXJlLCB2ZWMyIHNtU2l6ZSkKewogICAgZmxvYXQgcmVzdWx0ID0gc2hhZG93TGVycCh1diArICh2ZWMyKC0xLjApIC8gc21TaXplKSwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoLTEuMCwgMC4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXN1bHQgKz0gc2hhZG93TGVycCh1diArICh2ZWMyKC0xLjAsIDEuMCkgLyBzbVNpemUpLCBjb21wYXJlLCBzbVNpemUpOwogICAgcmVzdWx0ICs9IHNoYWRvd0xlcnAodXYgKyAodmVjMigwLjAsIC0xLjApIC8gc21TaXplKSwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2LCBjb21wYXJlLCBzbVNpemUpOwogICAgcmVzdWx0ICs9IHNoYWRvd0xlcnAodXYgKyAodmVjMigwLjAsIDEuMCkgLyBzbVNpemUpLCBjb21wYXJlLCBzbVNpemUpOwogICAgcmVzdWx0ICs9IHNoYWRvd0xlcnAodXYgKyAodmVjMigxLjAsIC0xLjApIC8gc21TaXplKSwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoMS4wLCAwLjApIC8gc21TaXplKSwgY29tcGFyZSwgc21TaXplKTsKICAgIHJlc3VsdCArPSBzaGFkb3dMZXJwKHV2ICsgKHZlYzIoMS4wKSAvIHNtU2l6ZSksIGNvbXBhcmUsIHNtU2l6ZSk7CiAgICByZXR1cm4gcmVzdWx0IC8gOS4wOwp9CgpmbG9hdCBzaGFkb3dUZXN0KHZlYzMgbFBvcywgZmxvYXQgc2hhZG93c0JpYXNfMSwgdmVjMiBzbVNpemUpCnsKICAgIGJvb2wgXzMwMiA9IGxQb3MueCA8IDAuMDsKICAgIGJvb2wgXzMwODsKICAgIGlmICghXzMwMikKICAgIHsKICAgICAgICBfMzA4ID0gbFBvcy55IDwgMC4wOwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF8zMDggPSBfMzAyOwogICAgfQogICAgYm9vbCBfMzE0OwogICAgaWYgKCFfMzA4KQogICAgewogICAgICAgIF8zMTQgPSBsUG9zLnggPiAxLjA7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzMxNCA9IF8zMDg7CiAgICB9CiAgICBib29sIF8zMjA7CiAgICBpZiAoIV8zMTQpCiAgICB7CiAgICAgICAgXzMyMCA9IGxQb3MueSA%IDEuMDsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMzIwID0gXzMxNDsKICAgIH0KICAgIGlmIChfMzIwKQogICAgewogICAgICAgIHJldHVybiAxLjA7CiAgICB9CiAgICByZXR1cm4gUENGKGxQb3MueHksIGxQb3MueiAtIHNoYWRvd3NCaWFzXzEsIHNtU2l6ZSk7Cn0KCmZsb2F0IHNoYWRvd1Rlc3RDYXNjYWRlKHZlYzMgZXllXzEsIHZlYzMgcCwgZmxvYXQgc2hhZG93c0JpYXNfMSwgdmVjMiBzbVNpemUpCnsKICAgIGZsb2F0IGQgPSBkaXN0YW5jZShleWVfMSwgcCk7CiAgICBpbnQgcGFyYW07CiAgICBpbnQgcGFyYW1fMTsKICAgIG1hdDQgXzQxOCA9IGdldENhc2NhZGVNYXQoZCwgcGFyYW0sIHBhcmFtXzEpOwogICAgaW50IGNhc2kgPSBwYXJhbTsKICAgIGludCBjYXNJbmRleCA9IHBhcmFtXzE7CiAgICBtYXQ0IExXVlAgPSBfNDE4OwogICAgdmVjNCBsUG9zID0gTFdWUCAqIHZlYzQocCwgMS4wKTsKICAgIGZsb2F0IHZpc2liaWxpdHkgPSAxLjA7CiAgICBpZiAobFBvcy53ID4gMC4wKQogICAgewogICAgICAgIHZpc2liaWxpdHkgPSBzaGFkb3dUZXN0KGxQb3MueHl6IC8gdmVjMyhsUG9zLncpLCBzaGFkb3dzQmlhc18xLCBzbVNpemUpOwogICAgfQogICAgZmxvYXQgbmV4dFNwbGl0ID0gY2FzRGF0YVsxNl1bY2FzaV07CiAgICBmbG9hdCBfNDQ2OwogICAgaWYgKGNhc2kgPT0gMCkKICAgIHsKICAgICAgICBfNDQ2ID0gbmV4dFNwbGl0OwogICAgfQogICAgZWxzZQogICAgewogICAgICAgIF80NDYgPSBuZXh0U3BsaXQgLSAoY2FzRGF0YVsxNl1bY2FzaSAtIDFdKTsKICAgIH0KICAgIGZsb2F0IHNwbGl0U2l6ZSA9IF80NDY7CiAgICBmbG9hdCBzcGxpdERpc3QgPSAobmV4dFNwbGl0IC0gZCkgLyBzcGxpdFNpemU7CiAgICBmbG9hdCB2aXNpYmlsaXR5MjsKICAgIGlmICgoc3BsaXREaXN0IDw9IDAuMTUwMDAwMDA1OTYwNDY0NDc3NTM5MDYyNSkgJiYgKGNhc2kgIT0gMykpCiAgICB7CiAgICAgICAgaW50IGNhc0luZGV4MiA9IGNhc0luZGV4ICsgNDsKICAgICAgICBtYXQ0IExXVlAyID0gbWF0NCh2ZWM0KGNhc0RhdGFbY2FzSW5kZXgyICsgMF0pLCB2ZWM0KGNhc0RhdGFbY2FzSW5kZXgyICsgMV0pLCB2ZWM0KGNhc0RhdGFbY2FzSW5kZXgyICsgMl0pLCB2ZWM0KGNhc0RhdGFbY2FzSW5kZXgyICsgM10pKTsKICAgICAgICB2ZWM0IGxQb3MyID0gTFdWUDIgKiB2ZWM0KHAsIDEuMCk7CiAgICAgICAgdmlzaWJpbGl0eTIgPSAxLjA7CiAgICAgICAgaWYgKGxQb3MyLncgPiAwLjApCiAgICAgICAgewogICAgICAgICAgICB2aXNpYmlsaXR5MiA9IHNoYWRvd1Rlc3QobFBvczIueHl6IC8gdmVjMyhsUG9zMi53KSwgc2hhZG93c0JpYXNfMSwgc21TaXplKTsKICAgICAgICB9CiAgICAgICAgZmxvYXQgbGVycEFtdCA9IHNtb290aHN0ZXAoMC4wLCAwLjE1MDAwMDAwNTk2MDQ2NDQ3NzUzOTA2MjUsIHNwbGl0RGlzdCk7CiAgICAgICAgcmV0dXJuIG1peCh2aXNpYmlsaXR5MiwgdmlzaWJpbGl0eSwgbGVycEFtdCk7CiAgICB9CiAgICByZXR1cm4gdmlzaWJpbGl0eTsKfQoKdmVjMyBsYW1iZXJ0RGlmZnVzZUJSREYodmVjMyBhbGJlZG8sIGZsb2F0IG5sKQp7CiAgICByZXR1cm4gYWxiZWRvICogbWF4KDAuMCwgbmwpOwp9CgpmbG9hdCBkX2dneChmbG9hdCBuaCwgZmxvYXQgYSkKewogICAgZmxvYXQgYTIgPSBhICogYTsKICAgIGZsb2F0IGRlbm9tID0gcG93KCgobmggKiBuaCkgKiAoYTIgLSAxLjApKSArIDEuMCwgMi4wKTsKICAgIHJldHVybiAoYTIgKiAwLjMxODMwOTg3MzM0MjUxNDAzODA4NTkzNzUpIC8gZGVub207Cn0KCmZsb2F0IHZfc21pdGhzY2hsaWNrKGZsb2F0IG5sLCBmbG9hdCBudiwgZmxvYXQgYSkKewogICAgcmV0dXJuIDEuMCAvICgoKG5sICogKDEuMCAtIGEpKSArIGEpICogKChudiAqICgxLjAgLSBhKSkgKyBhKSk7Cn0KCnZlYzMgZl9zY2hsaWNrKHZlYzMgZjAsIGZsb2F0IHZoKQp7CiAgICByZXR1cm4gZjAgKyAoKHZlYzMoMS4wKSAtIGYwKSAqIGV4cDIoKCgtNS41NTQ3Mjk5Mzg1MDcwODAwNzgxMjUgKiB2aCkgLSA2Ljk4MzE2MDAxODkyMDg5ODQzNzUpICogdmgpKTsKfQoKdmVjMyBzcGVjdWxhckJSREYodmVjMyBmMCwgZmxvYXQgcm91Z2huZXNzLCBmbG9hdCBubCwgZmxvYXQgbmgsIGZsb2F0IG52LCBmbG9hdCB2aCkKewogICAgZmxvYXQgYSA9IHJvdWdobmVzcyAqIHJvdWdobmVzczsKICAgIHJldHVybiAoZl9zY2hsaWNrKGYwLCB2aCkgKiAoZF9nZ3gobmgsIGEpICogY2xhbXAodl9zbWl0aHNjaGxpY2sobmwsIG52LCBhKSwgMC4wLCAxLjApKSkgLyB2ZWMzKDQuMCk7Cn0KCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgZzAgPSB0ZXh0dXJlKGdidWZmZXIwLCB0ZXhDb29yZCk7CiAgICB2ZWM0IGcxID0gdGV4dHVyZShnYnVmZmVyMSwgdGV4Q29vcmQpOwogICAgZmxvYXQgZGVwdGggPSAodGV4dHVyZShnYnVmZmVyRCwgdGV4Q29vcmQpLnggKiAyLjApIC0gMS4wOwogICAgdmVjMyBuOwogICAgbi56ID0gKDEuMCAtIGFicyhnMC54KSkgLSBhYnMoZzAueSk7CiAgICBmbG9hdCB2aXNpYmlsaXR5OwogICAgZmxvYXQgZG90Tkw7CiAgICBmbG9hdCBkb3ROVjsKICAgIHZlYzMgdjsKICAgIHZlYzIgbWV0cm91Z2g7CiAgICB2ZWMzIGYwOwogICAgdmVjMiBfNjIwOwogICAgdmVjMyBhbGJlZG87CiAgICBpZiAobi56ID49IDAuMCkKICAgIHsKICAgICAgICBfNjIwID0gZzAueHk7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzYyMCA9IG9jdGFoZWRyb25XcmFwKGcwLnh5KTsKICAgIH0KICAgIG4gPSB2ZWMzKF82MjAueCwgXzYyMC55LCBuLnopOwogICAgbiA9IG5vcm1hbGl6ZShuKTsKICAgIHZlYzMgcCA9IGdldFBvcyhleWUsIGV5ZUxvb2ssIHZpZXdSYXksIGRlcHRoLCBjYW1lcmFQcm9qKTsKICAgIG1ldHJvdWdoID0gdW5wYWNrRmxvYXQoZzAueik7CiAgICB2ID0gbm9ybWFsaXplKGV5ZSAtIHApOwogICAgZG90TlYgPSBkb3Qobiwgdik7CiAgICBhbGJlZG8gPSBzdXJmYWNlQWxiZWRvKGcxLnh5eiwgbWV0cm91Z2gueCk7CiAgICBmMCA9IHN1cmZhY2VGMChnMS54eXosIG1ldHJvdWdoLngpOwogICAgZG90TkwgPSBkb3QobiwgbCk7CiAgICB2aXNpYmlsaXR5ID0gMS4wOwogICAgaWYgKGxpZ2h0U2hhZG93ID09IDEpCiAgICB7CiAgICAgICAgdmlzaWJpbGl0eSA9IHNoYWRvd1Rlc3RDYXNjYWRlKGV5ZSwgcCwgc2hhZG93c0JpYXMsIHZlYzIoNDA5Ni4wLCAxMDI0LjApKTsKICAgIH0KICAgIHZlYzMgaCA9IG5vcm1hbGl6ZSh2ICsgbCk7CiAgICBmbG9hdCBkb3ROSCA9IGRvdChuLCBoKTsKICAgIGZsb2F0IGRvdFZIID0gZG90KHYsIGgpOwogICAgdmVjMyBfNzIyID0gbGFtYmVydERpZmZ1c2VCUkRGKGFsYmVkbywgZG90TkwpICsgc3BlY3VsYXJCUkRGKGYwLCBtZXRyb3VnaC55LCBkb3ROTCwgZG90TkgsIGRvdE5WLCBkb3RWSCk7CiAgICBmcmFnQ29sb3IgPSB2ZWM0KF83MjIueCwgXzcyMi55LCBfNzIyLnosIGZyYWdDb2xvci53KTsKICAgIHZlYzMgXzcyOSA9IGZyYWdDb2xvci54eXogKiBsaWdodENvbG9yOwogICAgZnJhZ0NvbG9yID0gdmVjNChfNzI5LngsIF83MjkueSwgXzcyOS56LCBmcmFnQ29sb3Iudyk7CiAgICB2ZWMzIF83MzUgPSBmcmFnQ29sb3IueHl6ICogdmlzaWJpbGl0eTsKICAgIGZyYWdDb2xvciA9IHZlYzQoXzczNS54LCBfNzM1LnksIF83MzUueiwgZnJhZ0NvbG9yLncpOwp9Cgo";
kha_Shaders.deferred_light_quad_vertData0 = "s520:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgaW52VlA7CnVuaWZvcm0gdmVjMyBleWU7Cgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHBvczsKdmFyeWluZyB2ZWMzIHZpZXdSYXk7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwogICAgdmVjNCB2ID0gdmVjNChwb3MueCwgcG9zLnksIDEuMCwgMS4wKTsKICAgIHYgPSB2ZWM0KGludlZQICogdik7CiAgICB2ZWMzIF82MiA9IHYueHl6IC8gdmVjMyh2LncpOwogICAgdiA9IHZlYzQoXzYyLngsIF82Mi55LCBfNjIueiwgdi53KTsKICAgIHZpZXdSYXkgPSB2Lnh5eiAtIGV5ZTsKfQoK";
kha_Shaders.deferred_light_quad_vertData1 = "s595:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBpbnZWUDsKdW5pZm9ybSBtZWRpdW1wIHZlYzMgZXllOwoKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgcG9zOwp2YXJ5aW5nIG1lZGl1bXAgdmVjMyB2aWV3UmF5OwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKICAgIG1lZGl1bXAgdmVjNCB2ID0gdmVjNChwb3MueCwgcG9zLnksIDEuMCwgMS4wKTsKICAgIHYgPSB2ZWM0KGludlZQICogdik7CiAgICBtZWRpdW1wIHZlYzMgXzYyID0gdi54eXogLyB2ZWMzKHYudyk7CiAgICB2ID0gdmVjNChfNjIueCwgXzYyLnksIF82Mi56LCB2LncpOwogICAgdmlld1JheSA9IHYueHl6IC0gZXllOwp9Cgo";
kha_Shaders.deferred_light_quad_vertData2 = "s579:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBpbnZWUDsKdW5pZm9ybSBtZWRpdW1wIHZlYzMgZXllOwoKb3V0IG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKaW4gbWVkaXVtcCB2ZWMyIHBvczsKb3V0IG1lZGl1bXAgdmVjMyB2aWV3UmF5OwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKICAgIG1lZGl1bXAgdmVjNCB2ID0gdmVjNChwb3MueCwgcG9zLnksIDEuMCwgMS4wKTsKICAgIHYgPSB2ZWM0KGludlZQICogdik7CiAgICBtZWRpdW1wIHZlYzMgXzYyID0gdi54eXogLyB2ZWMzKHYudyk7CiAgICB2ID0gdmVjNChfNjIueCwgXzYyLnksIF82Mi56LCB2LncpOwogICAgdmlld1JheSA9IHYueHl6IC0gZXllOwp9Cgo";
kha_Shaders.smaa_blend_weight_fragData0 = "s50843:%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xID0gdmVjMigtMS4wLCAxLjApOwogICAgICAgIGhpZ2hwIHZlYzIgXzY1OCA9IFNNQUFTZWFyY2hEaWFnMShwYXJhbSwgcGFyYW1fMSk7CiAgICAgICAgZCA9IHZlYzQoXzY1OC54LCBkLnksIF82NTgueSwgZC53KTsKICAgICAgICBoaWdocCBmbG9hdCBkYWRkID0gZmxvYXQoY2R3X2VuZC55ID4gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSk7CiAgICAgICAgZC54ICs9IGRhZGQ7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgZCA9IHZlYzQodmVjMigwLjApLngsIGQueSwgdmVjMigwLjApLnksIGQudyk7CiAgICB9CiAgICBoaWdocCB2ZWMyIHBhcmFtXzIgPSB0ZXhjb29yZDsKICAgIGhpZ2hwIHZlYzIgcGFyYW1fMyA9IHZlYzIoMS4wLCAtMS4wKTsKICAgIGhpZ2hwIHZlYzIgXzY3OSA9IFNNQUFTZWFyY2hEaWFnMShwYXJhbV8yLCBwYXJhbV8zKTsKICAgIGQgPSB2ZWM0KGQueCwgXzY3OS54LCBkLnosIF82NzkueSk7CiAgICBoaWdocCBmbG9hdCBhMWNvbmR5OwogICAgaGlnaHAgdmVjMiBjYzsKICAgIGlmICgoZC54ICsgZC55KSA%IDIuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWM0IGNvb3JkcyA9ICh2ZWM0KC1kLnggKyAwLjI1LCBkLngsIGQueSwgLWQueSAtIDAuMjUpICogc2NyZWVuU2l6ZUludi54eXh5KSArIHRleGNvb3JkLnh5eHk7CiAgICAgICAgaGlnaHAgdmVjMiBfNzIwID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCBjb29yZHMueHkgKyAodmVjMigtMS4wLCAwLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueHk7CiAgICAgICAgaGlnaHAgdmVjNCBjOwogICAgICAgIGMgPSB2ZWM0KF83MjAueCwgXzcyMC55LCBjLnosIGMudyk7CiAgICAgICAgaGlnaHAgdmVjMiBfNzMxID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCBjb29yZHMuencgKyAodmVjMigxLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KSwgMC4wKS54eTsKICAgICAgICBjID0gdmVjNChjLngsIGMueSwgXzczMS54LCBfNzMxLnkpOwogICAgICAgIGhpZ2hwIHZlYzQgcGFyYW1fNCA9IGM7CiAgICAgICAgaGlnaHAgdmVjNCBfNzM2ID0gU01BQURlY29kZURpYWdCaWxpbmVhckFjY2VzcyhwYXJhbV80KTsKICAgICAgICBjID0gdmVjNChfNzM2LnksIF83MzYueCwgXzczNi53LCBfNzM2LnopOwogICAgICAgIGNjID0gKHZlYzIoMi4wKSAqIGMueHopICsgYy55dzsKICAgICAgICBoaWdocCBmbG9hdCBhMWNvbmR4ID0gc3RlcCgwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1LCBkLnopOwogICAgICAgIGExY29uZHkgPSBzdGVwKDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUsIGQudyk7CiAgICAgICAgaWYgKGExY29uZHggPT0gMS4wKQogICAgICAgIHsKICAgICAgICAgICAgY2MueCA9IDAuMDsKICAgICAgICB9CiAgICAgICAgaWYgKGExY29uZHkgPT0gMS4wKQogICAgICAgIHsKICAgICAgICAgICAgY2MueSA9IDAuMDsKICAgICAgICB9CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV81ID0gZC54eTsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzYgPSBjYzsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV83ID0gc3Vic2FtcGxlSW5kaWNlcy56OwogICAgICAgIHdlaWdodHMgKz0gU01BQUFyZWFEaWFnKHBhcmFtXzUsIHBhcmFtXzYsIHBhcmFtXzcpOwogICAgfQogICAgaGlnaHAgdmVjMiBwYXJhbV84ID0gdGV4Y29vcmQ7CiAgICBoaWdocCB2ZWMyIHBhcmFtXzkgPSB2ZWMyKC0xLjApOwogICAgaGlnaHAgdmVjMiBfNzgwID0gU01BQVNlYXJjaERpYWcyKHBhcmFtXzgsIHBhcmFtXzkpOwogICAgZCA9IHZlYzQoXzc4MC54LCBkLnksIF83ODAueSwgZC53KTsKICAgIGlmICh0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkICsgKHZlYzIoMS4wLCAwLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueCA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzEwID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xMSA9IHZlYzIoMS4wKTsKICAgICAgICBoaWdocCB2ZWMyIF83OTcgPSBTTUFBU2VhcmNoRGlhZzIocGFyYW1fMTAsIHBhcmFtXzExKTsKICAgICAgICBkID0gdmVjNChkLngsIF83OTcueCwgZC56LCBfNzk3LnkpOwogICAgICAgIGhpZ2hwIGZsb2F0IGRhZGRfMSA9IGZsb2F0KGNkd19lbmQueSA%%PSBlbmQpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV82ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV83ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV82LCBwYXJhbV83KTsKICAgIH0KICAgIGlmIChlLnkgPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV84ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV85ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV84LCBwYXJhbV85KTsKICAgIH0KICAgIGlmIChlLnggIT0gMC4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTAgPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzExID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV8xMCwgcGFyYW1fMTEpOwogICAgfQogICAgZSA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDIuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueCA%PSBlbmQpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xMiA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTMgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWFJpZ2h0KHBhcmFtXzEyLCBwYXJhbV8xMyk7CiAgICB9CiAgICBpZiAoZS55IDw9IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1KQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTQgPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzE1ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV8xNCwgcGFyYW1fMTUpOwogICAgfQogICAgaWYgKGUueCAhPSAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xNiA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTcgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWFJpZ2h0KHBhcmFtXzE2LCBwYXJhbV8xNyk7CiAgICB9CiAgICBlID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCB0ZXhjb29yZCwgMC4wKS54eTsKICAgIHRleGNvb3JkID0gKHZlYzIoMi4wLCAwLjApICogc2NyZWVuU2l6ZUludikgKyB0ZXhjb29yZDsKICAgIGlmICh0ZXhjb29yZC54ID49IGVuZCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzE4ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xOSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW1fMTgsIHBhcmFtXzE5KTsKICAgIH0KICAgIGlmIChlLnkgPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yMCA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMjEgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWFJpZ2h0KHBhcmFtXzIwLCBwYXJhbV8yMSk7CiAgICB9CiAgICBpZiAoZS54ICE9IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIyID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yMyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW1fMjIsIHBhcmFtXzIzKTsKICAgIH0KICAgIGUgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLCAwLjApLnh5OwogICAgdGV4Y29vcmQgPSAodmVjMigyLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgaWYgKHRleGNvb3JkLnggPj0gZW5kKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMjQgPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzI1ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV8yNCwgcGFyYW1fMjUpOwogICAgfQogICAgaWYgKGUueSA8PSAwLjgyODEwMDAyNTY1MzgzOTExMTMyODEyNSkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzI2ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yNyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW1fMjYsIHBhcmFtXzI3KTsKICAgIH0KICAgIGlmIChlLnggIT0gMC4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMjggPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzI5ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV8yOCwgcGFyYW1fMjkpOwogICAgfQogICAgZSA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDIuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueCA%%PSBlbmQpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbSA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbSwgcGFyYW1fMSk7CiAgICB9CiAgICBpZiAoZS54IDw9IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1KQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMiA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV8yLCBwYXJhbV8zKTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fNCA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fNSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV80LCBwYXJhbV81KTsKICAgIH0KICAgIGUgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLCAwLjApLnh5OwogICAgdGV4Y29vcmQgPSAodmVjMigwLjAsIDIuMCkgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgaWYgKHRleGNvb3JkLnkgPj0gZW5kKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fNiA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fNyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV82LCBwYXJhbV83KTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV84ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV85ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzgsIHBhcmFtXzkpOwogICAgfQogICAgaWYgKGUueSAhPSAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xMCA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTEgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMTAsIHBhcmFtXzExKTsKICAgIH0KICAgIGUgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLCAwLjApLnh5OwogICAgdGV4Y29vcmQgPSAodmVjMigwLjAsIDIuMCkgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgaWYgKHRleGNvb3JkLnkgPj0gZW5kKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTIgPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzEzID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzEyLCBwYXJhbV8xMyk7CiAgICB9CiAgICBpZiAoZS54IDw9IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1KQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTQgPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzE1ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzE0LCBwYXJhbV8xNSk7CiAgICB9CiAgICBpZiAoZS55ICE9IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzE2ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xNyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV8xNiwgcGFyYW1fMTcpOwogICAgfQogICAgZSA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDAuMCwgMi4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueSA%PSBlbmQpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xOCA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTkgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMTgsIHBhcmFtXzE5KTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yMCA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMjEgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMjAsIHBhcmFtXzIxKTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMjIgPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzIzID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzIyLCBwYXJhbV8yMyk7CiAgICB9CiAgICBlID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCB0ZXhjb29yZCwgMC4wKS54eTsKICAgIHRleGNvb3JkID0gKHZlYzIoMC4wLCAyLjApICogc2NyZWVuU2l6ZUludikgKyB0ZXhjb29yZDsKICAgIGlmICh0ZXhjb29yZC55ID49IGVuZCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzI0ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yNSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV8yNCwgcGFyYW1fMjUpOwogICAgfQogICAgaWYgKGUueCA8PSAwLjgyODEwMDAyNTY1MzgzOTExMTMyODEyNSkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzI2ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yNyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV8yNiwgcGFyYW1fMjcpOwogICAgfQogICAgaWYgKGUueSAhPSAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yOCA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMjkgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMjgsIHBhcmFtXzI5KTsKICAgIH0KICAgIGUgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLCAwLjApLnh5OwogICAgdGV4Y29vcmQgPSAodmVjMigwLjAsIDIuMCkgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgaWYgKHRleGNvb3JkLnkgPj0gZW5kKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMzAgPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzMxID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzMwLCBwYXJhbV8zMSk7CiAgICB9CiAgICBpZiAoZS54IDw9IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1KQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMzIgPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzMzID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzMyLCBwYXJhbV8zMyk7CiAgICB9CiAgICBpZiAoZS55ICE9IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzM0ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8zNSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV8zNCwgcGFyYW1fMzUpOwogICAgfQogICAgZSA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDAuMCwgMi4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueSA%PSBlbmQpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8zNiA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMzcgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMzYsIHBhcmFtXzM3KTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8zOCA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMzkgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMzgsIHBhcmFtXzM5KTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fNDAgPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzQxID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzQwLCBwYXJhbV80MSk7CiAgICB9CiAgICBlID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCB0ZXhjb29yZCwgMC4wKS54eTsKICAgIHRleGNvb3JkID0gKHZlYzIoMC4wLCAyLjApICogc2NyZWVuU2l6ZUludikgKyB0ZXhjb29yZDsKICAgIGlmICh0ZXhjb29yZC55ID49IGVuZCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzQyID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV80MyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV80MiwgcGFyYW1fNDMpOwogICAgfQogICAgaWYgKGUueCA8PSAwLjgyODEwMDAyNTY1MzgzOTExMTMyODEyNSkKICAgIHsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzQ0ID0gdGV4Y29vcmQ7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV80NSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV80NCwgcGFyYW1fNDUpOwogICAgfQogICAgaWYgKGUueSAhPSAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV80NiA9IHRleGNvb3JkOwogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fNDcgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fNDYsIHBhcmFtXzQ3KTsKICAgIH0KICAgIGUgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLCAwLjApLnh5OwogICAgdGV4Y29vcmQgPSAodmVjMigwLjAsIDIuMCkgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgaGlnaHAgdmVjMiBwYXJhbV80OCA9IGUueXg7CiAgICBoaWdocCBmbG9hdCBwYXJhbV80OSA9IDAuNTsKICAgIGhpZ2hwIGZsb2F0IG9mZnNldCA9ICgtMi4wMDc4NzQwMTE5OTM0MDgyMDMxMjUgKiBTTUFBU2VhcmNoTGVuZ3RoKHBhcmFtXzQ4LCBwYXJhbV80OSkpICsgMy4yNTsKICAgIHJldHVybiAoLXNjcmVlblNpemVJbnYueSAqIG9mZnNldCkgKyB0ZXhjb29yZC55Owp9CgpoaWdocCB2ZWMyIFNNQUFEZXRlY3RWZXJ0aWNhbENvcm5lclBhdHRlcm4oaW5vdXQgaGlnaHAgdmVjMiB3ZWlnaHRzLCBoaWdocCB2ZWM0IHRleGNvb3JkLCBoaWdocCB2ZWMyIGQpCnsKICAgIGhpZ2hwIHZlYzIgbGVmdFJpZ2h0ID0gc3RlcChkLCBkLnl4KTsKICAgIGhpZ2hwIHZlYzIgcm91bmRpbmcgPSBsZWZ0UmlnaHQgKiAwLjc1OwogICAgcm91bmRpbmcgLz0gdmVjMihsZWZ0UmlnaHQueCArIGxlZnRSaWdodC55KTsKICAgIGhpZ2hwIHZlYzIgZmFjdG9yID0gdmVjMigxLjApOwogICAgZmFjdG9yLnggLT0gKHJvdW5kaW5nLnggKiB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLnh5ICsgKHZlYzIoMS4wLCAwLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueSk7CiAgICBmYWN0b3IueCAtPSAocm91bmRpbmcueSAqIHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgdGV4Y29vcmQuencgKyAodmVjMigxLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueSk7CiAgICBmYWN0b3IueSAtPSAocm91bmRpbmcueCAqIHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgdGV4Y29vcmQueHkgKyAodmVjMigtMi4wLCAwLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueSk7CiAgICBmYWN0b3IueSAtPSAocm91bmRpbmcueSAqIHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgdGV4Y29vcmQuencgKyAodmVjMigtMi4wLCAxLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueSk7CiAgICB3ZWlnaHRzICo9IGNsYW1wKGZhY3RvciwgdmVjMigwLjApLCB2ZWMyKDEuMCkpOwogICAgcmV0dXJuIHdlaWdodHM7Cn0KCmhpZ2hwIHZlYzQgU01BQUJsZW5kaW5nV2VpZ2h0Q2FsY3VsYXRpb25QUyhoaWdocCB2ZWMyIHRleGNvb3JkLCBoaWdocCB2ZWMyIHBpeGNvb3JkXzEsIGhpZ2hwIHZlYzQgc3Vic2FtcGxlSW5kaWNlcykKewogICAgaGlnaHAgdmVjNCB3ZWlnaHRzID0gdmVjNCgwLjApOwogICAgaGlnaHAgdmVjMiBlID0gdGV4dHVyZTJEKGVkZ2VzVGV4LCB0ZXhjb29yZCkueHk7CiAgICBpZiAoZS55ID4gMC4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhjb29yZDsKICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzEgPSBlOwogICAgICAgIGhpZ2hwIHZlYzQgcGFyYW1fMiA9IHN1YnNhbXBsZUluZGljZXM7CiAgICAgICAgaGlnaHAgdmVjMiBfMjY2MSA9IFNNQUFDYWxjdWxhdGVEaWFnV2VpZ2h0cyhwYXJhbSwgcGFyYW1fMSwgcGFyYW1fMik7CiAgICAgICAgd2VpZ2h0cyA9IHZlYzQoXzI2NjEueCwgXzI2NjEueSwgd2VpZ2h0cy56LCB3ZWlnaHRzLncpOwogICAgICAgIGlmICh3ZWlnaHRzLnggPT0gLXdlaWdodHMueSkKICAgICAgICB7CiAgICAgICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMyA9IG9mZnNldDAueHk7CiAgICAgICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzQgPSBvZmZzZXQyLng7CiAgICAgICAgICAgIGhpZ2hwIGZsb2F0IF8yNjgzID0gU01BQVNlYXJjaFhMZWZ0KHBhcmFtXzMsIHBhcmFtXzQpOwogICAgICAgICAgICBoaWdocCB2ZWMzIGNvb3JkczsKICAgICAgICAgICAgY29vcmRzLnggPSBfMjY4MzsKICAgICAgICAgICAgY29vcmRzLnkgPSBvZmZzZXQxLnk7CiAgICAgICAgICAgIGhpZ2hwIHZlYzIgZDsKICAgICAgICAgICAgZC54ID0gY29vcmRzLng7CiAgICAgICAgICAgIGhpZ2hwIGZsb2F0IGUxID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCBjb29yZHMueHksIDAuMCkueDsKICAgICAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV81ID0gb2Zmc2V0MC56dzsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fNiA9IG9mZnNldDIueTsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgXzI3MDUgPSBTTUFBU2VhcmNoWFJpZ2h0KHBhcmFtXzUsIHBhcmFtXzYpOwogICAgICAgICAgICBjb29yZHMueiA9IF8yNzA1OwogICAgICAgICAgICBkLnkgPSBjb29yZHMuejsKICAgICAgICAgICAgZCA9IGFicyhmbG9vcigoKHNjcmVlblNpemUueHggKiBkKSArIC1waXhjb29yZF8xLnh4KSArIHZlYzIoMC41KSkpOwogICAgICAgICAgICBoaWdocCB2ZWMyIHNxcnRfZCA9IHNxcnQoZCk7CiAgICAgICAgICAgIGhpZ2hwIGZsb2F0IGUyID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCBjb29yZHMuenkgKyAodmVjMigxLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KSwgMC4wKS54OwogICAgICAgICAgICBoaWdocCB2ZWMyIHBhcmFtXzcgPSBzcXJ0X2Q7CiAgICAgICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzggPSBlMTsKICAgICAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fOSA9IGUyOwogICAgICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8xMCA9IHN1YnNhbXBsZUluZGljZXMueTsKICAgICAgICAgICAgaGlnaHAgdmVjMiBfMjc0NCA9IFNNQUFBcmVhKHBhcmFtXzcsIHBhcmFtXzgsIHBhcmFtXzksIHBhcmFtXzEwKTsKICAgICAgICAgICAgd2VpZ2h0cyA9IHZlYzQoXzI3NDQueCwgXzI3NDQueSwgd2VpZ2h0cy56LCB3ZWlnaHRzLncpOwogICAgICAgICAgICBjb29yZHMueSA9IHRleGNvb3JkLnk7CiAgICAgICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTEgPSB3ZWlnaHRzLnh5OwogICAgICAgICAgICBoaWdocCB2ZWM0IHBhcmFtXzEyID0gY29vcmRzLnh5enk7CiAgICAgICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTMgPSBkOwogICAgICAgICAgICBoaWdocCB2ZWMyIF8yNzU4ID0gU01BQURldGVjdEhvcml6b250YWxDb3JuZXJQYXR0ZXJuKHBhcmFtXzExLCBwYXJhbV8xMiwgcGFyYW1fMTMpOwogICAgICAgICAgICB3ZWlnaHRzID0gdmVjNChfMjc1OC54LCBfMjc1OC55LCB3ZWlnaHRzLnosIHdlaWdodHMudyk7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIGUueCA9IDAuMDsKICAgICAgICB9CiAgICB9CiAgICBpZiAoZS54ID4gMC4wKQogICAgewogICAgICAgIGhpZ2hwIHZlYzIgcGFyYW1fMTQgPSBvZmZzZXQxLnh5OwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzE1ID0gb2Zmc2V0Mi56OwogICAgICAgIGhpZ2hwIGZsb2F0IF8yNzc1ID0gU01BQVNlYXJjaFlVcChwYXJhbV8xNCwgcGFyYW1fMTUpOwogICAgICAgIGhpZ2hwIHZlYzMgY29vcmRzXzE7CiAgICAgICAgY29vcmRzXzEueSA9IF8yNzc1OwogICAgICAgIGNvb3Jkc18xLnggPSBvZmZzZXQwLng7CiAgICAgICAgaGlnaHAgdmVjMiBkXzE7CiAgICAgICAgZF8xLnggPSBjb29yZHNfMS55OwogICAgICAgIGhpZ2hwIGZsb2F0IGUxXzEgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIGNvb3Jkc18xLnh5LCAwLjApLnk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xNiA9IG9mZnNldDEuenc7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMTcgPSBvZmZzZXQyLnc7CiAgICAgICAgaGlnaHAgZmxvYXQgXzI3OTYgPSBTTUFBU2VhcmNoWURvd24ocGFyYW1fMTYsIHBhcmFtXzE3KTsKICAgICAgICBjb29yZHNfMS56ID0gXzI3OTY7CiAgICAgICAgZF8xLnkgPSBjb29yZHNfMS56OwogICAgICAgIGRfMSA9IGFicyhmbG9vcigoKHNjcmVlblNpemUueXkgKiBkXzEpICsgLXBpeGNvb3JkXzEueXkpICsgdmVjMigwLjUpKSk7CiAgICAgICAgaGlnaHAgdmVjMiBzcXJ0X2RfMSA9IHNxcnQoZF8xKTsKICAgICAgICBoaWdocCBmbG9hdCBlMl8xID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCBjb29yZHNfMS54eiArICh2ZWMyKDAuMCwgMS4wKSAqIHNjcmVlblNpemVJbnYpLCAwLjApLnk7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8xOCA9IHNxcnRfZF8xOwogICAgICAgIGhpZ2hwIGZsb2F0IHBhcmFtXzE5ID0gZTFfMTsKICAgICAgICBoaWdocCBmbG9hdCBwYXJhbV8yMCA9IGUyXzE7CiAgICAgICAgaGlnaHAgZmxvYXQgcGFyYW1fMjEgPSBzdWJzYW1wbGVJbmRpY2VzLng7CiAgICAgICAgaGlnaHAgdmVjMiBfMjgzNCA9IFNNQUFBcmVhKHBhcmFtXzE4LCBwYXJhbV8xOSwgcGFyYW1fMjAsIHBhcmFtXzIxKTsKICAgICAgICB3ZWlnaHRzID0gdmVjNCh3ZWlnaHRzLngsIHdlaWdodHMueSwgXzI4MzQueCwgXzI4MzQueSk7CiAgICAgICAgY29vcmRzXzEueCA9IHRleGNvb3JkLng7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yMiA9IHdlaWdodHMuenc7CiAgICAgICAgaGlnaHAgdmVjNCBwYXJhbV8yMyA9IGNvb3Jkc18xLnh5eHo7CiAgICAgICAgaGlnaHAgdmVjMiBwYXJhbV8yNCA9IGRfMTsKICAgICAgICBoaWdocCB2ZWMyIF8yODQ4ID0gU01BQURldGVjdFZlcnRpY2FsQ29ybmVyUGF0dGVybihwYXJhbV8yMiwgcGFyYW1fMjMsIHBhcmFtXzI0KTsKICAgICAgICB3ZWlnaHRzID0gdmVjNCh3ZWlnaHRzLngsIHdlaWdodHMueSwgXzI4NDgueCwgXzI4NDgueSk7CiAgICB9CiAgICByZXR1cm4gd2VpZ2h0czsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMiBwYXJhbSA9IHRleENvb3JkOwogICAgaGlnaHAgdmVjMiBwYXJhbV8xID0gcGl4Y29vcmQ7CiAgICBoaWdocCB2ZWM0IHBhcmFtXzIgPSB2ZWM0KDAuMCk7CiAgICBoaWdocCB2ZWM0IF8yODY0ID0gU01BQUJsZW5kaW5nV2VpZ2h0Q2FsY3VsYXRpb25QUyhwYXJhbSwgcGFyYW1fMSwgcGFyYW1fMik7CiAgICBnbF9GcmFnRGF0YVswXSA9IF8yODY0Owp9Cgo";
kha_Shaders.smaa_blend_weight_fragData1 = "s47496:I3ZlcnNpb24gMTAwCiNleHRlbnNpb24gR0xfRVhUX3NoYWRlcl90ZXh0dXJlX2xvZCA6IHJlcXVpcmUKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIGludDsKCnVuaWZvcm0gdmVjMiBzY3JlZW5TaXplSW52Owp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGVkZ2VzVGV4Owp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGFyZWFUZXg7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgc2VhcmNoVGV4Owp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZTsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBjb2xvclRleDsKCnZhcnlpbmcgdmVjNCBvZmZzZXQwOwp2YXJ5aW5nIHZlYzQgb2Zmc2V0MjsKdmFyeWluZyB2ZWM0IG9mZnNldDE7CnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWMyIHBpeGNvb3JkOwp2ZWMyIGNkd19lbmQ7Cgp2ZWMyIFNNQUFTZWFyY2hEaWFnMSh2ZWMyIHRleGNvb3JkLCB2ZWMyIGRpcikKewogICAgdmVjNCBjb29yZCA9IHZlYzQodGV4Y29vcmQsIC0xLjAsIDEuMCk7CiAgICB2ZWMzIHQgPSB2ZWMzKHNjcmVlblNpemVJbnYsIDEuMCk7CiAgICBpZiAoY29vcmQudyA8PSAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1KQogICAgewogICAgICAgIHJldHVybiBjb29yZC56dzsKICAgIH0KICAgIGlmIChjb29yZC56ID49IDcuMCkKICAgIHsKICAgICAgICByZXR1cm4gY29vcmQuenc7CiAgICB9CiAgICB2ZWMzIF8xODUgPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgIGNvb3JkID0gdmVjNChfMTg1LngsIF8xODUueSwgXzE4NS56LCBjb29yZC53KTsKICAgIGNkd19lbmQgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIGNvb3JkLnh5LCAwLjApLnh5OwogICAgY29vcmQudyA9IGRvdChjZHdfZW5kLCB2ZWMyKDAuNSkpOwogICAgaWYgKGNvb3JkLncgPD0gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSkKICAgIHsKICAgICAgICByZXR1cm4gY29vcmQuenc7CiAgICB9CiAgICB2ZWMzIF8yMjAgPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgIGNvb3JkID0gdmVjNChfMjIwLngsIF8yMjAueSwgXzIyMC56LCBjb29yZC53KTsKICAgIGNkd19lbmQgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIGNvb3JkLnh5LCAwLjApLnh5OwogICAgY29vcmQudyA9IGRvdChjZHdfZW5kLCB2ZWMyKDAuNSkpOwogICAgaWYgKGNvb3JkLncgPD0gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSkKICAgIHsKICAgICAgICByZXR1cm4gY29vcmQuenc7CiAgICB9CiAgICB2ZWMzIF8yNDcgPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgIGNvb3JkID0gdmVjNChfMjQ3LngsIF8yNDcueSwgXzI0Ny56LCBjb29yZC53KTsKICAgIGNkd19lbmQgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIGNvb3JkLnh5LCAwLjApLnh5OwogICAgY29vcmQudyA9IGRvdChjZHdfZW5kLCB2ZWMyKDAuNSkpOwogICAgaWYgKGNvb3JkLncgPD0gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSkKICAgIHsKICAgICAgICByZXR1cm4gY29vcmQuenc7CiAgICB9CiAgICB2ZWMzIF8yNzQgPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgIGNvb3JkID0gdmVjNChfMjc0LngsIF8yNzQueSwgXzI3NC56LCBjb29yZC53KTsKICAgIGNkd19lbmQgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIGNvb3JkLnh5LCAwLjApLnh5OwogICAgY29vcmQudyA9IGRvdChjZHdfZW5kLCB2ZWMyKDAuNSkpOwogICAgaWYgKGNvb3JkLncgPD0gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSkKICAgIHsKICAgICAgICByZXR1cm4gY29vcmQuenc7CiAgICB9CiAgICB2ZWMzIF8zMDEgPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgIGNvb3JkID0gdmVjNChfMzAxLngsIF8zMDEueSwgXzMwMS56LCBjb29yZC53KTsKICAgIGNkd19lbmQgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIGNvb3JkLnh5LCAwLjApLnh5OwogICAgY29vcmQudyA9IGRvdChjZHdfZW5kLCB2ZWMyKDAuNSkpOwogICAgaWYgKGNvb3JkLncgPD0gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSkKICAgIHsKICAgICAgICByZXR1cm4gY29vcmQuenc7CiAgICB9CiAgICB2ZWMzIF8zMjggPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgIGNvb3JkID0gdmVjNChfMzI4LngsIF8zMjgueSwgXzMyOC56LCBjb29yZC53KTsKICAgIGNkd19lbmQgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIGNvb3JkLnh5LCAwLjApLnh5OwogICAgY29vcmQudyA9IGRvdChjZHdfZW5kLCB2ZWMyKDAuNSkpOwogICAgaWYgKGNvb3JkLncgPD0gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSkKICAgIHsKICAgICAgICByZXR1cm4gY29vcmQuenc7CiAgICB9CiAgICB2ZWMzIF8zNTUgPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgIGNvb3JkID0gdmVjNChfMzU1LngsIF8zNTUueSwgXzM1NS56LCBjb29yZC53KTsKICAgIGNkd19lbmQgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIGNvb3JkLnh5LCAwLjApLnh5OwogICAgY29vcmQudyA9IGRvdChjZHdfZW5kLCB2ZWMyKDAuNSkpOwogICAgcmV0dXJuIGNvb3JkLnp3Owp9Cgp2ZWM0IFNNQUFEZWNvZGVEaWFnQmlsaW5lYXJBY2Nlc3MoaW5vdXQgdmVjNCBlKQp7CiAgICB2ZWMyIF8xMzEgPSBlLnh6ICogYWJzKChlLnh6ICogNS4wKSAtIHZlYzIoMy43NSkpOwogICAgZSA9IHZlYzQoXzEzMS54LCBlLnksIF8xMzEueSwgZS53KTsKICAgIHJldHVybiBmbG9vcihlICsgdmVjNCgwLjUpKTsKfQoKdmVjMiBTTUFBQXJlYURpYWcodmVjMiBkaXN0LCB2ZWMyIGUsIGZsb2F0IG9mZnNldCkKewogICAgdmVjMiB0ZXhjb29yZCA9ICh2ZWMyKDIwLjApICogZSkgKyBkaXN0OwogICAgdGV4Y29vcmQgPSAodmVjMigwLjAwNjI1MDAwMDA5MzEzMjI1NzQ2MTU0Nzg1MTU2MjUsIDAuMDAxNzg1NzE0Mjk1NjkyNzQxODcwODgwMTI2OTUzMTI1KSAqIHRleGNvb3JkKSArIHZlYzIoMC4wMDMxMjUwMDAwNDY1NjYxMjg3MzA3NzM5MjU3ODEyNSwgMC4wMDA4OTI4NTcxNDc4NDYzNzA5MzU0NDAwNjM0NzY1NjI1KTsKICAgIHRleGNvb3JkLnggKz0gMC41OwogICAgdGV4Y29vcmQueSArPSAoMC4xNDI4NTcxNDkyNDMzNTQ3OTczNjMyODEyNSAqIG9mZnNldCk7CiAgICByZXR1cm4gdGV4dHVyZTJETG9kRVhUKGFyZWFUZXgsIHRleGNvb3JkLCAwLjApLnh5Owp9Cgp2ZWMyIFNNQUFEZWNvZGVEaWFnQmlsaW5lYXJBY2Nlc3MoaW5vdXQgdmVjMiBlKQp7CiAgICBlLnggKj0gYWJzKCg1LjAgKiBlLngpIC0gMy43NSk7CiAgICByZXR1cm4gZmxvb3IoZSArIHZlYzIoMC41KSk7Cn0KCnZlYzIgU01BQVNlYXJjaERpYWcyKHZlYzIgdGV4Y29vcmQsIHZlYzIgZGlyKQp7CiAgICB2ZWM0IGNvb3JkID0gdmVjNCh0ZXhjb29yZCwgLTEuMCwgMS4wKTsKICAgIGNvb3JkLnggKz0gKDAuMjUgKiBzY3JlZW5TaXplSW52LngpOwogICAgdmVjMyB0ID0gdmVjMyhzY3JlZW5TaXplSW52LCAxLjApOwogICAgaWYgKGNvb3JkLncgPD0gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSkKICAgIHsKICAgICAgICByZXR1cm4gY29vcmQuenc7CiAgICB9CiAgICBpZiAoY29vcmQueiA%PSA3LjApCiAgICB7CiAgICAgICAgcmV0dXJuIGNvb3JkLnp3OwogICAgfQogICAgdmVjMyBfNDEzID0gKHQgKiB2ZWMzKGRpciwgMS4wKSkgKyBjb29yZC54eXo7CiAgICBjb29yZCA9IHZlYzQoXzQxMy54LCBfNDEzLnksIF80MTMueiwgY29vcmQudyk7CiAgICBjZHdfZW5kID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCBjb29yZC54eSwgMC4wKS54eTsKICAgIHZlYzIgcGFyYW0gPSBjZHdfZW5kOwogICAgdmVjMiBfNDIzID0gU01BQURlY29kZURpYWdCaWxpbmVhckFjY2VzcyhwYXJhbSk7CiAgICBjZHdfZW5kID0gXzQyMzsKICAgIGNvb3JkLncgPSBkb3QoY2R3X2VuZCwgdmVjMigwLjUpKTsKICAgIGlmIChjb29yZC53IDw9IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUpCiAgICB7CiAgICAgICAgcmV0dXJuIGNvb3JkLnp3OwogICAgfQogICAgdmVjMyBfNDQzID0gKHQgKiB2ZWMzKGRpciwgMS4wKSkgKyBjb29yZC54eXo7CiAgICBjb29yZCA9IHZlYzQoXzQ0My54LCBfNDQzLnksIF80NDMueiwgY29vcmQudyk7CiAgICBjZHdfZW5kID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCBjb29yZC54eSwgMC4wKS54eTsKICAgIHZlYzIgcGFyYW1fMSA9IGNkd19lbmQ7CiAgICB2ZWMyIF80NTMgPSBTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzKHBhcmFtXzEpOwogICAgY2R3X2VuZCA9IF80NTM7CiAgICBjb29yZC53ID0gZG90KGNkd19lbmQsIHZlYzIoMC41KSk7CiAgICBpZiAoY29vcmQudyA8PSAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1KQogICAgewogICAgICAgIHJldHVybiBjb29yZC56dzsKICAgIH0KICAgIHZlYzMgXzQ3MyA9ICh0ICogdmVjMyhkaXIsIDEuMCkpICsgY29vcmQueHl6OwogICAgY29vcmQgPSB2ZWM0KF80NzMueCwgXzQ3My55LCBfNDczLnosIGNvb3JkLncpOwogICAgY2R3X2VuZCA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgY29vcmQueHksIDAuMCkueHk7CiAgICB2ZWMyIHBhcmFtXzIgPSBjZHdfZW5kOwogICAgdmVjMiBfNDgzID0gU01BQURlY29kZURpYWdCaWxpbmVhckFjY2VzcyhwYXJhbV8yKTsKICAgIGNkd19lbmQgPSBfNDgzOwogICAgY29vcmQudyA9IGRvdChjZHdfZW5kLCB2ZWMyKDAuNSkpOwogICAgaWYgKGNvb3JkLncgPD0gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSkKICAgIHsKICAgICAgICByZXR1cm4gY29vcmQuenc7CiAgICB9CiAgICB2ZWMzIF81MDMgPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgIGNvb3JkID0gdmVjNChfNTAzLngsIF81MDMueSwgXzUwMy56LCBjb29yZC53KTsKICAgIGNkd19lbmQgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIGNvb3JkLnh5LCAwLjApLnh5OwogICAgdmVjMiBwYXJhbV8zID0gY2R3X2VuZDsKICAgIHZlYzIgXzUxMyA9IFNNQUFEZWNvZGVEaWFnQmlsaW5lYXJBY2Nlc3MocGFyYW1fMyk7CiAgICBjZHdfZW5kID0gXzUxMzsKICAgIGNvb3JkLncgPSBkb3QoY2R3X2VuZCwgdmVjMigwLjUpKTsKICAgIGlmIChjb29yZC53IDw9IDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUpCiAgICB7CiAgICAgICAgcmV0dXJuIGNvb3JkLnp3OwogICAgfQogICAgdmVjMyBfNTMzID0gKHQgKiB2ZWMzKGRpciwgMS4wKSkgKyBjb29yZC54eXo7CiAgICBjb29yZCA9IHZlYzQoXzUzMy54LCBfNTMzLnksIF81MzMueiwgY29vcmQudyk7CiAgICBjZHdfZW5kID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCBjb29yZC54eSwgMC4wKS54eTsKICAgIHZlYzIgcGFyYW1fNCA9IGNkd19lbmQ7CiAgICB2ZWMyIF81NDMgPSBTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzKHBhcmFtXzQpOwogICAgY2R3X2VuZCA9IF81NDM7CiAgICBjb29yZC53ID0gZG90KGNkd19lbmQsIHZlYzIoMC41KSk7CiAgICBpZiAoY29vcmQudyA8PSAwLjg5OTk5OTk3NjE1ODE0MjA4OTg0Mzc1KQogICAgewogICAgICAgIHJldHVybiBjb29yZC56dzsKICAgIH0KICAgIHZlYzMgXzU2MyA9ICh0ICogdmVjMyhkaXIsIDEuMCkpICsgY29vcmQueHl6OwogICAgY29vcmQgPSB2ZWM0KF81NjMueCwgXzU2My55LCBfNTYzLnosIGNvb3JkLncpOwogICAgY2R3X2VuZCA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgY29vcmQueHksIDAuMCkueHk7CiAgICB2ZWMyIHBhcmFtXzUgPSBjZHdfZW5kOwogICAgdmVjMiBfNTczID0gU01BQURlY29kZURpYWdCaWxpbmVhckFjY2VzcyhwYXJhbV81KTsKICAgIGNkd19lbmQgPSBfNTczOwogICAgY29vcmQudyA9IGRvdChjZHdfZW5kLCB2ZWMyKDAuNSkpOwogICAgaWYgKGNvb3JkLncgPD0gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSkKICAgIHsKICAgICAgICByZXR1cm4gY29vcmQuenc7CiAgICB9CiAgICB2ZWMzIF81OTMgPSAodCAqIHZlYzMoZGlyLCAxLjApKSArIGNvb3JkLnh5ejsKICAgIGNvb3JkID0gdmVjNChfNTkzLngsIF81OTMueSwgXzU5My56LCBjb29yZC53KTsKICAgIGNkd19lbmQgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIGNvb3JkLnh5LCAwLjApLnh5OwogICAgdmVjMiBwYXJhbV82ID0gY2R3X2VuZDsKICAgIHZlYzIgXzYwMyA9IFNNQUFEZWNvZGVEaWFnQmlsaW5lYXJBY2Nlc3MocGFyYW1fNik7CiAgICBjZHdfZW5kID0gXzYwMzsKICAgIGNvb3JkLncgPSBkb3QoY2R3X2VuZCwgdmVjMigwLjUpKTsKICAgIHJldHVybiBjb29yZC56dzsKfQoKdmVjMiBTTUFBQ2FsY3VsYXRlRGlhZ1dlaWdodHModmVjMiB0ZXhjb29yZCwgdmVjMiBlLCB2ZWM0IHN1YnNhbXBsZUluZGljZXMpCnsKICAgIHZlYzIgd2VpZ2h0cyA9IHZlYzIoMC4wKTsKICAgIHZlYzQgZDsKICAgIGlmIChlLnggPiAwLjApCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbSA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMSA9IHZlYzIoLTEuMCwgMS4wKTsKICAgICAgICB2ZWMyIF82NTggPSBTTUFBU2VhcmNoRGlhZzEocGFyYW0sIHBhcmFtXzEpOwogICAgICAgIGQgPSB2ZWM0KF82NTgueCwgZC55LCBfNjU4LnksIGQudyk7CiAgICAgICAgZmxvYXQgZGFkZCA9IGZsb2F0KGNkd19lbmQueSA%%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbSA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW0sIHBhcmFtXzEpOwogICAgfQogICAgaWYgKGUueSA8PSAwLjgyODEwMDAyNTY1MzgzOTExMTMyODEyNSkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzIgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzMgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWFJpZ2h0KHBhcmFtXzIsIHBhcmFtXzMpOwogICAgfQogICAgaWYgKGUueCAhPSAwLjApCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV80ID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV81ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV80LCBwYXJhbV81KTsKICAgIH0KICAgIGUgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLCAwLjApLnh5OwogICAgdGV4Y29vcmQgPSAodmVjMigyLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgaWYgKHRleGNvb3JkLnggPj0gZW5kKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fNiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fNyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW1fNiwgcGFyYW1fNyk7CiAgICB9CiAgICBpZiAoZS55IDw9IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1KQogICAgewogICAgICAgIHZlYzIgcGFyYW1fOCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fOSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW1fOCwgcGFyYW1fOSk7CiAgICB9CiAgICBpZiAoZS54ICE9IDAuMCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzEwID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8xMSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW1fMTAsIHBhcmFtXzExKTsKICAgIH0KICAgIGUgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLCAwLjApLnh5OwogICAgdGV4Y29vcmQgPSAodmVjMigyLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgaWYgKHRleGNvb3JkLnggPj0gZW5kKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMTIgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzEzID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV8xMiwgcGFyYW1fMTMpOwogICAgfQogICAgaWYgKGUueSA8PSAwLjgyODEwMDAyNTY1MzgzOTExMTMyODEyNSkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzE0ID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8xNSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW1fMTQsIHBhcmFtXzE1KTsKICAgIH0KICAgIGlmIChlLnggIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMTYgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzE3ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV8xNiwgcGFyYW1fMTcpOwogICAgfQogICAgZSA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDIuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueCA%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8xOCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMTkgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWFJpZ2h0KHBhcmFtXzE4LCBwYXJhbV8xOSk7CiAgICB9CiAgICBpZiAoZS55IDw9IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1KQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMjAgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzIxID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV8yMCwgcGFyYW1fMjEpOwogICAgfQogICAgaWYgKGUueCAhPSAwLjApCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8yMiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMjMgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWFJpZ2h0KHBhcmFtXzIyLCBwYXJhbV8yMyk7CiAgICB9CiAgICBlID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCB0ZXhjb29yZCwgMC4wKS54eTsKICAgIHRleGNvb3JkID0gKHZlYzIoMi4wLCAwLjApICogc2NyZWVuU2l6ZUludikgKyB0ZXhjb29yZDsKICAgIGlmICh0ZXhjb29yZC54ID49IGVuZCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzI0ID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8yNSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW1fMjQsIHBhcmFtXzI1KTsKICAgIH0KICAgIGlmIChlLnkgPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8yNiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMjcgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWFJpZ2h0KHBhcmFtXzI2LCBwYXJhbV8yNyk7CiAgICB9CiAgICBpZiAoZS54ICE9IDAuMCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzI4ID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8yOSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW1fMjgsIHBhcmFtXzI5KTsKICAgIH0KICAgIGUgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLCAwLjApLnh5OwogICAgdGV4Y29vcmQgPSAodmVjMigyLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgaWYgKHRleGNvb3JkLnggPj0gZW5kKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMzAgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzMxID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV8zMCwgcGFyYW1fMzEpOwogICAgfQogICAgaWYgKGUueSA8PSAwLjgyODEwMDAyNTY1MzgzOTExMTMyODEyNSkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzMyID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8zMyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BYUmlnaHQocGFyYW1fMzIsIHBhcmFtXzMzKTsKICAgIH0KICAgIGlmIChlLnggIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMzQgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzM1ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFhSaWdodChwYXJhbV8zNCwgcGFyYW1fMzUpOwogICAgfQogICAgZSA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDIuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueCA%%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8yNCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMjUgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMjQsIHBhcmFtXzI1KTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8yNiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMjcgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMjYsIHBhcmFtXzI3KTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMjggPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzI5ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzI4LCBwYXJhbV8yOSk7CiAgICB9CiAgICBlID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCB0ZXhjb29yZCwgMC4wKS54eTsKICAgIHRleGNvb3JkID0gKHZlYzIoMC4wLCAyLjApICogc2NyZWVuU2l6ZUludikgKyB0ZXhjb29yZDsKICAgIGlmICh0ZXhjb29yZC55ID49IGVuZCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzMwID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8zMSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV8zMCwgcGFyYW1fMzEpOwogICAgfQogICAgaWYgKGUueCA8PSAwLjgyODEwMDAyNTY1MzgzOTExMTMyODEyNSkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzMyID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8zMyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV8zMiwgcGFyYW1fMzMpOwogICAgfQogICAgaWYgKGUueSAhPSAwLjApCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8zNCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMzUgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMzQsIHBhcmFtXzM1KTsKICAgIH0KICAgIGUgPSB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLCAwLjApLnh5OwogICAgdGV4Y29vcmQgPSAodmVjMigwLjAsIDIuMCkgKiBzY3JlZW5TaXplSW52KSArIHRleGNvb3JkOwogICAgaWYgKHRleGNvb3JkLnkgPj0gZW5kKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMzYgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzM3ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzM2LCBwYXJhbV8zNyk7CiAgICB9CiAgICBpZiAoZS54IDw9IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1KQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMzggPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzM5ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzM4LCBwYXJhbV8zOSk7CiAgICB9CiAgICBpZiAoZS55ICE9IDAuMCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzQwID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV80MSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV80MCwgcGFyYW1fNDEpOwogICAgfQogICAgZSA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDAuMCwgMi4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueSA%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV80MiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fNDMgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fNDIsIHBhcmFtXzQzKTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV80NCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fNDUgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fNDQsIHBhcmFtXzQ1KTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fNDYgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzQ3ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzQ2LCBwYXJhbV80Nyk7CiAgICB9CiAgICBlID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCB0ZXhjb29yZCwgMC4wKS54eTsKICAgIHRleGNvb3JkID0gKHZlYzIoMC4wLCAyLjApICogc2NyZWVuU2l6ZUludikgKyB0ZXhjb29yZDsKICAgIHZlYzIgcGFyYW1fNDggPSBlLnl4OwogICAgZmxvYXQgcGFyYW1fNDkgPSAwLjU7CiAgICBmbG9hdCBvZmZzZXQgPSAoLTIuMDA3ODc0MDExOTkzNDA4MjAzMTI1ICogU01BQVNlYXJjaExlbmd0aChwYXJhbV80OCwgcGFyYW1fNDkpKSArIDMuMjU7CiAgICByZXR1cm4gKC1zY3JlZW5TaXplSW52LnkgKiBvZmZzZXQpICsgdGV4Y29vcmQueTsKfQoKdmVjMiBTTUFBRGV0ZWN0VmVydGljYWxDb3JuZXJQYXR0ZXJuKGlub3V0IHZlYzIgd2VpZ2h0cywgdmVjNCB0ZXhjb29yZCwgdmVjMiBkKQp7CiAgICB2ZWMyIGxlZnRSaWdodCA9IHN0ZXAoZCwgZC55eCk7CiAgICB2ZWMyIHJvdW5kaW5nID0gbGVmdFJpZ2h0ICogMC43NTsKICAgIHJvdW5kaW5nIC89IHZlYzIobGVmdFJpZ2h0LnggKyBsZWZ0UmlnaHQueSk7CiAgICB2ZWMyIGZhY3RvciA9IHZlYzIoMS4wKTsKICAgIGZhY3Rvci54IC09IChyb3VuZGluZy54ICogdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCB0ZXhjb29yZC54eSArICh2ZWMyKDEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpLCAwLjApLnkpOwogICAgZmFjdG9yLnggLT0gKHJvdW5kaW5nLnkgKiB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLnp3ICsgKHZlYzIoMS4wKSAqIHNjcmVlblNpemVJbnYpLCAwLjApLnkpOwogICAgZmFjdG9yLnkgLT0gKHJvdW5kaW5nLnggKiB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLnh5ICsgKHZlYzIoLTIuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpLCAwLjApLnkpOwogICAgZmFjdG9yLnkgLT0gKHJvdW5kaW5nLnkgKiB0ZXh0dXJlMkRMb2RFWFQoZWRnZXNUZXgsIHRleGNvb3JkLnp3ICsgKHZlYzIoLTIuMCwgMS4wKSAqIHNjcmVlblNpemVJbnYpLCAwLjApLnkpOwogICAgd2VpZ2h0cyAqPSBjbGFtcChmYWN0b3IsIHZlYzIoMC4wKSwgdmVjMigxLjApKTsKICAgIHJldHVybiB3ZWlnaHRzOwp9Cgp2ZWM0IFNNQUFCbGVuZGluZ1dlaWdodENhbGN1bGF0aW9uUFModmVjMiB0ZXhjb29yZCwgdmVjMiBwaXhjb29yZF8xLCB2ZWM0IHN1YnNhbXBsZUluZGljZXMpCnsKICAgIHZlYzQgd2VpZ2h0cyA9IHZlYzQoMC4wKTsKICAgIHZlYzIgZSA9IHRleHR1cmUyRChlZGdlc1RleCwgdGV4Y29vcmQpLnh5OwogICAgaWYgKGUueSA%IDAuMCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8xID0gZTsKICAgICAgICB2ZWM0IHBhcmFtXzIgPSBzdWJzYW1wbGVJbmRpY2VzOwogICAgICAgIHZlYzIgXzI2NjEgPSBTTUFBQ2FsY3VsYXRlRGlhZ1dlaWdodHMocGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgICAgIHdlaWdodHMgPSB2ZWM0KF8yNjYxLngsIF8yNjYxLnksIHdlaWdodHMueiwgd2VpZ2h0cy53KTsKICAgICAgICBpZiAod2VpZ2h0cy54ID09IC13ZWlnaHRzLnkpCiAgICAgICAgewogICAgICAgICAgICB2ZWMyIHBhcmFtXzMgPSBvZmZzZXQwLnh5OwogICAgICAgICAgICBmbG9hdCBwYXJhbV80ID0gb2Zmc2V0Mi54OwogICAgICAgICAgICBmbG9hdCBfMjY4MyA9IFNNQUFTZWFyY2hYTGVmdChwYXJhbV8zLCBwYXJhbV80KTsKICAgICAgICAgICAgdmVjMyBjb29yZHM7CiAgICAgICAgICAgIGNvb3Jkcy54ID0gXzI2ODM7CiAgICAgICAgICAgIGNvb3Jkcy55ID0gb2Zmc2V0MS55OwogICAgICAgICAgICB2ZWMyIGQ7CiAgICAgICAgICAgIGQueCA9IGNvb3Jkcy54OwogICAgICAgICAgICBmbG9hdCBlMSA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgY29vcmRzLnh5LCAwLjApLng7CiAgICAgICAgICAgIHZlYzIgcGFyYW1fNSA9IG9mZnNldDAuenc7CiAgICAgICAgICAgIGZsb2F0IHBhcmFtXzYgPSBvZmZzZXQyLnk7CiAgICAgICAgICAgIGZsb2F0IF8yNzA1ID0gU01BQVNlYXJjaFhSaWdodChwYXJhbV81LCBwYXJhbV82KTsKICAgICAgICAgICAgY29vcmRzLnogPSBfMjcwNTsKICAgICAgICAgICAgZC55ID0gY29vcmRzLno7CiAgICAgICAgICAgIGQgPSBhYnMoZmxvb3IoKChzY3JlZW5TaXplLnh4ICogZCkgKyAtcGl4Y29vcmRfMS54eCkgKyB2ZWMyKDAuNSkpKTsKICAgICAgICAgICAgdmVjMiBzcXJ0X2QgPSBzcXJ0KGQpOwogICAgICAgICAgICBmbG9hdCBlMiA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgY29vcmRzLnp5ICsgKHZlYzIoMS4wLCAwLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueDsKICAgICAgICAgICAgdmVjMiBwYXJhbV83ID0gc3FydF9kOwogICAgICAgICAgICBmbG9hdCBwYXJhbV84ID0gZTE7CiAgICAgICAgICAgIGZsb2F0IHBhcmFtXzkgPSBlMjsKICAgICAgICAgICAgZmxvYXQgcGFyYW1fMTAgPSBzdWJzYW1wbGVJbmRpY2VzLnk7CiAgICAgICAgICAgIHZlYzIgXzI3NDQgPSBTTUFBQXJlYShwYXJhbV83LCBwYXJhbV84LCBwYXJhbV85LCBwYXJhbV8xMCk7CiAgICAgICAgICAgIHdlaWdodHMgPSB2ZWM0KF8yNzQ0LngsIF8yNzQ0LnksIHdlaWdodHMueiwgd2VpZ2h0cy53KTsKICAgICAgICAgICAgY29vcmRzLnkgPSB0ZXhjb29yZC55OwogICAgICAgICAgICB2ZWMyIHBhcmFtXzExID0gd2VpZ2h0cy54eTsKICAgICAgICAgICAgdmVjNCBwYXJhbV8xMiA9IGNvb3Jkcy54eXp5OwogICAgICAgICAgICB2ZWMyIHBhcmFtXzEzID0gZDsKICAgICAgICAgICAgdmVjMiBfMjc1OCA9IFNNQUFEZXRlY3RIb3Jpem9udGFsQ29ybmVyUGF0dGVybihwYXJhbV8xMSwgcGFyYW1fMTIsIHBhcmFtXzEzKTsKICAgICAgICAgICAgd2VpZ2h0cyA9IHZlYzQoXzI3NTgueCwgXzI3NTgueSwgd2VpZ2h0cy56LCB3ZWlnaHRzLncpOwogICAgICAgIH0KICAgICAgICBlbHNlCiAgICAgICAgewogICAgICAgICAgICBlLnggPSAwLjA7CiAgICAgICAgfQogICAgfQogICAgaWYgKGUueCA%IDAuMCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzE0ID0gb2Zmc2V0MS54eTsKICAgICAgICBmbG9hdCBwYXJhbV8xNSA9IG9mZnNldDIuejsKICAgICAgICBmbG9hdCBfMjc3NSA9IFNNQUFTZWFyY2hZVXAocGFyYW1fMTQsIHBhcmFtXzE1KTsKICAgICAgICB2ZWMzIGNvb3Jkc18xOwogICAgICAgIGNvb3Jkc18xLnkgPSBfMjc3NTsKICAgICAgICBjb29yZHNfMS54ID0gb2Zmc2V0MC54OwogICAgICAgIHZlYzIgZF8xOwogICAgICAgIGRfMS54ID0gY29vcmRzXzEueTsKICAgICAgICBmbG9hdCBlMV8xID0gdGV4dHVyZTJETG9kRVhUKGVkZ2VzVGV4LCBjb29yZHNfMS54eSwgMC4wKS55OwogICAgICAgIHZlYzIgcGFyYW1fMTYgPSBvZmZzZXQxLnp3OwogICAgICAgIGZsb2F0IHBhcmFtXzE3ID0gb2Zmc2V0Mi53OwogICAgICAgIGZsb2F0IF8yNzk2ID0gU01BQVNlYXJjaFlEb3duKHBhcmFtXzE2LCBwYXJhbV8xNyk7CiAgICAgICAgY29vcmRzXzEueiA9IF8yNzk2OwogICAgICAgIGRfMS55ID0gY29vcmRzXzEuejsKICAgICAgICBkXzEgPSBhYnMoZmxvb3IoKChzY3JlZW5TaXplLnl5ICogZF8xKSArIC1waXhjb29yZF8xLnl5KSArIHZlYzIoMC41KSkpOwogICAgICAgIHZlYzIgc3FydF9kXzEgPSBzcXJ0KGRfMSk7CiAgICAgICAgZmxvYXQgZTJfMSA9IHRleHR1cmUyRExvZEVYVChlZGdlc1RleCwgY29vcmRzXzEueHogKyAodmVjMigwLjAsIDEuMCkgKiBzY3JlZW5TaXplSW52KSwgMC4wKS55OwogICAgICAgIHZlYzIgcGFyYW1fMTggPSBzcXJ0X2RfMTsKICAgICAgICBmbG9hdCBwYXJhbV8xOSA9IGUxXzE7CiAgICAgICAgZmxvYXQgcGFyYW1fMjAgPSBlMl8xOwogICAgICAgIGZsb2F0IHBhcmFtXzIxID0gc3Vic2FtcGxlSW5kaWNlcy54OwogICAgICAgIHZlYzIgXzI4MzQgPSBTTUFBQXJlYShwYXJhbV8xOCwgcGFyYW1fMTksIHBhcmFtXzIwLCBwYXJhbV8yMSk7CiAgICAgICAgd2VpZ2h0cyA9IHZlYzQod2VpZ2h0cy54LCB3ZWlnaHRzLnksIF8yODM0LngsIF8yODM0LnkpOwogICAgICAgIGNvb3Jkc18xLnggPSB0ZXhjb29yZC54OwogICAgICAgIHZlYzIgcGFyYW1fMjIgPSB3ZWlnaHRzLnp3OwogICAgICAgIHZlYzQgcGFyYW1fMjMgPSBjb29yZHNfMS54eXh6OwogICAgICAgIHZlYzIgcGFyYW1fMjQgPSBkXzE7CiAgICAgICAgdmVjMiBfMjg0OCA9IFNNQUFEZXRlY3RWZXJ0aWNhbENvcm5lclBhdHRlcm4ocGFyYW1fMjIsIHBhcmFtXzIzLCBwYXJhbV8yNCk7CiAgICAgICAgd2VpZ2h0cyA9IHZlYzQod2VpZ2h0cy54LCB3ZWlnaHRzLnksIF8yODQ4LngsIF8yODQ4LnkpOwogICAgfQogICAgcmV0dXJuIHdlaWdodHM7Cn0KCnZvaWQgbWFpbigpCnsKICAgIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIHZlYzIgcGFyYW1fMSA9IHBpeGNvb3JkOwogICAgdmVjNCBwYXJhbV8yID0gdmVjNCgwLjApOwogICAgdmVjNCBfMjg2NCA9IFNNQUFCbGVuZGluZ1dlaWdodENhbGN1bGF0aW9uUFMocGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBfMjg2NDsKfQoK";
kha_Shaders.smaa_blend_weight_fragData2 = "s46975:%IDAuMCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8xID0gdmVjMigtMS4wLCAxLjApOwogICAgICAgIHZlYzIgXzY1OCA9IFNNQUFTZWFyY2hEaWFnMShwYXJhbSwgcGFyYW1fMSk7CiAgICAgICAgZCA9IHZlYzQoXzY1OC54LCBkLnksIF82NTgueSwgZC53KTsKICAgICAgICBmbG9hdCBkYWRkID0gZmxvYXQoY2R3X2VuZC55ID4gMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSk7CiAgICAgICAgZC54ICs9IGRhZGQ7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgZCA9IHZlYzQodmVjMigwLjApLngsIGQueSwgdmVjMigwLjApLnksIGQudyk7CiAgICB9CiAgICB2ZWMyIHBhcmFtXzIgPSB0ZXhjb29yZDsKICAgIHZlYzIgcGFyYW1fMyA9IHZlYzIoMS4wLCAtMS4wKTsKICAgIHZlYzIgXzY3OSA9IFNNQUFTZWFyY2hEaWFnMShwYXJhbV8yLCBwYXJhbV8zKTsKICAgIGQgPSB2ZWM0KGQueCwgXzY3OS54LCBkLnosIF82NzkueSk7CiAgICBmbG9hdCBhMWNvbmR5OwogICAgdmVjMiBjYzsKICAgIGlmICgoZC54ICsgZC55KSA%IDIuMCkKICAgIHsKICAgICAgICB2ZWM0IGNvb3JkcyA9ICh2ZWM0KC1kLnggKyAwLjI1LCBkLngsIGQueSwgLWQueSAtIDAuMjUpICogc2NyZWVuU2l6ZUludi54eXh5KSArIHRleGNvb3JkLnh5eHk7CiAgICAgICAgdmVjMiBfNzIwID0gdGV4dHVyZUxvZChlZGdlc1RleCwgY29vcmRzLnh5ICsgKHZlYzIoLTEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpLCAwLjApLnh5OwogICAgICAgIHZlYzQgYzsKICAgICAgICBjID0gdmVjNChfNzIwLngsIF83MjAueSwgYy56LCBjLncpOwogICAgICAgIHZlYzIgXzczMSA9IHRleHR1cmVMb2QoZWRnZXNUZXgsIGNvb3Jkcy56dyArICh2ZWMyKDEuMCwgMC4wKSAqIHNjcmVlblNpemVJbnYpLCAwLjApLnh5OwogICAgICAgIGMgPSB2ZWM0KGMueCwgYy55LCBfNzMxLngsIF83MzEueSk7CiAgICAgICAgdmVjNCBwYXJhbV80ID0gYzsKICAgICAgICB2ZWM0IF83MzYgPSBTTUFBRGVjb2RlRGlhZ0JpbGluZWFyQWNjZXNzKHBhcmFtXzQpOwogICAgICAgIGMgPSB2ZWM0KF83MzYueSwgXzczNi54LCBfNzM2LncsIF83MzYueik7CiAgICAgICAgY2MgPSAodmVjMigyLjApICogYy54eikgKyBjLnl3OwogICAgICAgIGZsb2F0IGExY29uZHggPSBzdGVwKDAuODk5OTk5OTc2MTU4MTQyMDg5ODQzNzUsIGQueik7CiAgICAgICAgYTFjb25keSA9IHN0ZXAoMC44OTk5OTk5NzYxNTgxNDIwODk4NDM3NSwgZC53KTsKICAgICAgICBpZiAoYTFjb25keCA9PSAxLjApCiAgICAgICAgewogICAgICAgICAgICBjYy54ID0gMC4wOwogICAgICAgIH0KICAgICAgICBpZiAoYTFjb25keSA9PSAxLjApCiAgICAgICAgewogICAgICAgICAgICBjYy55ID0gMC4wOwogICAgICAgIH0KICAgICAgICB2ZWMyIHBhcmFtXzUgPSBkLnh5OwogICAgICAgIHZlYzIgcGFyYW1fNiA9IGNjOwogICAgICAgIGZsb2F0IHBhcmFtXzcgPSBzdWJzYW1wbGVJbmRpY2VzLno7CiAgICAgICAgd2VpZ2h0cyArPSBTTUFBQXJlYURpYWcocGFyYW1fNSwgcGFyYW1fNiwgcGFyYW1fNyk7CiAgICB9CiAgICB2ZWMyIHBhcmFtXzggPSB0ZXhjb29yZDsKICAgIHZlYzIgcGFyYW1fOSA9IHZlYzIoLTEuMCk7CiAgICB2ZWMyIF83ODAgPSBTTUFBU2VhcmNoRGlhZzIocGFyYW1fOCwgcGFyYW1fOSk7CiAgICBkID0gdmVjNChfNzgwLngsIGQueSwgXzc4MC55LCBkLncpOwogICAgaWYgKHRleHR1cmVMb2QoZWRnZXNUZXgsIHRleGNvb3JkICsgKHZlYzIoMS4wLCAwLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueCA%IDAuMCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzEwID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8xMSA9IHZlYzIoMS4wKTsKICAgICAgICB2ZWMyIF83OTcgPSBTTUFBU2VhcmNoRGlhZzIocGFyYW1fMTAsIHBhcmFtXzExKTsKICAgICAgICBkID0gdmVjNChkLngsIF83OTcueCwgZC56LCBfNzk3LnkpOwogICAgICAgIGZsb2F0IGRhZGRfMSA9IGZsb2F0KGNkd19lbmQueSA%%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbSA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbSwgcGFyYW1fMSk7CiAgICB9CiAgICBpZiAoZS54IDw9IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1KQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMyA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV8yLCBwYXJhbV8zKTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fNCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fNSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV80LCBwYXJhbV81KTsKICAgIH0KICAgIGUgPSB0ZXh0dXJlTG9kKGVkZ2VzVGV4LCB0ZXhjb29yZCwgMC4wKS54eTsKICAgIHRleGNvb3JkID0gKHZlYzIoMC4wLCAyLjApICogc2NyZWVuU2l6ZUludikgKyB0ZXhjb29yZDsKICAgIGlmICh0ZXhjb29yZC55ID49IGVuZCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtXzYgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzcgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fNiwgcGFyYW1fNyk7CiAgICB9CiAgICBpZiAoZS54IDw9IDAuODI4MTAwMDI1NjUzODM5MTExMzI4MTI1KQogICAgewogICAgICAgIHZlYzIgcGFyYW1fOCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fOSA9IGU7CiAgICAgICAgcmV0dXJuIGVuZExvb3BZRG93bihwYXJhbV84LCBwYXJhbV85KTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMTAgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzExID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzEwLCBwYXJhbV8xMSk7CiAgICB9CiAgICBlID0gdGV4dHVyZUxvZChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDAuMCwgMi4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueSA%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8xMiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMTMgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMTIsIHBhcmFtXzEzKTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8xNCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMTUgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMTQsIHBhcmFtXzE1KTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMTYgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzE3ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzE2LCBwYXJhbV8xNyk7CiAgICB9CiAgICBlID0gdGV4dHVyZUxvZChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDAuMCwgMi4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueSA%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8xOCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMTkgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMTgsIHBhcmFtXzE5KTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8yMCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMjEgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMjAsIHBhcmFtXzIxKTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMjIgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzIzID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzIyLCBwYXJhbV8yMyk7CiAgICB9CiAgICBlID0gdGV4dHVyZUxvZChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDAuMCwgMi4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueSA%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8yNCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMjUgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMjQsIHBhcmFtXzI1KTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8yNiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMjcgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMjYsIHBhcmFtXzI3KTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMjggPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzI5ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzI4LCBwYXJhbV8yOSk7CiAgICB9CiAgICBlID0gdGV4dHVyZUxvZChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDAuMCwgMi4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueSA%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8zMCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMzEgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMzAsIHBhcmFtXzMxKTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8zMiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMzMgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMzIsIHBhcmFtXzMzKTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMzQgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzM1ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzM0LCBwYXJhbV8zNSk7CiAgICB9CiAgICBlID0gdGV4dHVyZUxvZChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDAuMCwgMi4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueSA%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8zNiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMzcgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMzYsIHBhcmFtXzM3KTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV8zOCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fMzkgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fMzgsIHBhcmFtXzM5KTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fNDAgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzQxID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzQwLCBwYXJhbV80MSk7CiAgICB9CiAgICBlID0gdGV4dHVyZUxvZChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDAuMCwgMi4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICBpZiAodGV4Y29vcmQueSA%PSBlbmQpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV80MiA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fNDMgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fNDIsIHBhcmFtXzQzKTsKICAgIH0KICAgIGlmIChlLnggPD0gMC44MjgxMDAwMjU2NTM4MzkxMTEzMjgxMjUpCiAgICB7CiAgICAgICAgdmVjMiBwYXJhbV80NCA9IHRleGNvb3JkOwogICAgICAgIHZlYzIgcGFyYW1fNDUgPSBlOwogICAgICAgIHJldHVybiBlbmRMb29wWURvd24ocGFyYW1fNDQsIHBhcmFtXzQ1KTsKICAgIH0KICAgIGlmIChlLnkgIT0gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fNDYgPSB0ZXhjb29yZDsKICAgICAgICB2ZWMyIHBhcmFtXzQ3ID0gZTsKICAgICAgICByZXR1cm4gZW5kTG9vcFlEb3duKHBhcmFtXzQ2LCBwYXJhbV80Nyk7CiAgICB9CiAgICBlID0gdGV4dHVyZUxvZChlZGdlc1RleCwgdGV4Y29vcmQsIDAuMCkueHk7CiAgICB0ZXhjb29yZCA9ICh2ZWMyKDAuMCwgMi4wKSAqIHNjcmVlblNpemVJbnYpICsgdGV4Y29vcmQ7CiAgICB2ZWMyIHBhcmFtXzQ4ID0gZS55eDsKICAgIGZsb2F0IHBhcmFtXzQ5ID0gMC41OwogICAgZmxvYXQgb2Zmc2V0ID0gKC0yLjAwNzg3NDAxMTk5MzQwODIwMzEyNSAqIFNNQUFTZWFyY2hMZW5ndGgocGFyYW1fNDgsIHBhcmFtXzQ5KSkgKyAzLjI1OwogICAgcmV0dXJuICgtc2NyZWVuU2l6ZUludi55ICogb2Zmc2V0KSArIHRleGNvb3JkLnk7Cn0KCnZlYzIgU01BQURldGVjdFZlcnRpY2FsQ29ybmVyUGF0dGVybihpbm91dCB2ZWMyIHdlaWdodHMsIHZlYzQgdGV4Y29vcmQsIHZlYzIgZCkKewogICAgdmVjMiBsZWZ0UmlnaHQgPSBzdGVwKGQsIGQueXgpOwogICAgdmVjMiByb3VuZGluZyA9IGxlZnRSaWdodCAqIDAuNzU7CiAgICByb3VuZGluZyAvPSB2ZWMyKGxlZnRSaWdodC54ICsgbGVmdFJpZ2h0LnkpOwogICAgdmVjMiBmYWN0b3IgPSB2ZWMyKDEuMCk7CiAgICBmYWN0b3IueCAtPSAocm91bmRpbmcueCAqIHRleHR1cmVMb2QoZWRnZXNUZXgsIHRleGNvb3JkLnh5ICsgKHZlYzIoMS4wLCAwLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueSk7CiAgICBmYWN0b3IueCAtPSAocm91bmRpbmcueSAqIHRleHR1cmVMb2QoZWRnZXNUZXgsIHRleGNvb3JkLnp3ICsgKHZlYzIoMS4wKSAqIHNjcmVlblNpemVJbnYpLCAwLjApLnkpOwogICAgZmFjdG9yLnkgLT0gKHJvdW5kaW5nLnggKiB0ZXh0dXJlTG9kKGVkZ2VzVGV4LCB0ZXhjb29yZC54eSArICh2ZWMyKC0yLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KSwgMC4wKS55KTsKICAgIGZhY3Rvci55IC09IChyb3VuZGluZy55ICogdGV4dHVyZUxvZChlZGdlc1RleCwgdGV4Y29vcmQuencgKyAodmVjMigtMi4wLCAxLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueSk7CiAgICB3ZWlnaHRzICo9IGNsYW1wKGZhY3RvciwgdmVjMigwLjApLCB2ZWMyKDEuMCkpOwogICAgcmV0dXJuIHdlaWdodHM7Cn0KCnZlYzQgU01BQUJsZW5kaW5nV2VpZ2h0Q2FsY3VsYXRpb25QUyh2ZWMyIHRleGNvb3JkLCB2ZWMyIHBpeGNvb3JkXzEsIHZlYzQgc3Vic2FtcGxlSW5kaWNlcykKewogICAgdmVjNCB3ZWlnaHRzID0gdmVjNCgwLjApOwogICAgdmVjMiBlID0gdGV4dHVyZShlZGdlc1RleCwgdGV4Y29vcmQpLnh5OwogICAgaWYgKGUueSA%IDAuMCkKICAgIHsKICAgICAgICB2ZWMyIHBhcmFtID0gdGV4Y29vcmQ7CiAgICAgICAgdmVjMiBwYXJhbV8xID0gZTsKICAgICAgICB2ZWM0IHBhcmFtXzIgPSBzdWJzYW1wbGVJbmRpY2VzOwogICAgICAgIHZlYzIgXzI2NjEgPSBTTUFBQ2FsY3VsYXRlRGlhZ1dlaWdodHMocGFyYW0sIHBhcmFtXzEsIHBhcmFtXzIpOwogICAgICAgIHdlaWdodHMgPSB2ZWM0KF8yNjYxLngsIF8yNjYxLnksIHdlaWdodHMueiwgd2VpZ2h0cy53KTsKICAgICAgICBpZiAod2VpZ2h0cy54ID09IC13ZWlnaHRzLnkpCiAgICAgICAgewogICAgICAgICAgICB2ZWMyIHBhcmFtXzMgPSBvZmZzZXQwLnh5OwogICAgICAgICAgICBmbG9hdCBwYXJhbV80ID0gb2Zmc2V0Mi54OwogICAgICAgICAgICBmbG9hdCBfMjY4MyA9IFNNQUFTZWFyY2hYTGVmdChwYXJhbV8zLCBwYXJhbV80KTsKICAgICAgICAgICAgdmVjMyBjb29yZHM7CiAgICAgICAgICAgIGNvb3Jkcy54ID0gXzI2ODM7CiAgICAgICAgICAgIGNvb3Jkcy55ID0gb2Zmc2V0MS55OwogICAgICAgICAgICB2ZWMyIGQ7CiAgICAgICAgICAgIGQueCA9IGNvb3Jkcy54OwogICAgICAgICAgICBmbG9hdCBlMSA9IHRleHR1cmVMb2QoZWRnZXNUZXgsIGNvb3Jkcy54eSwgMC4wKS54OwogICAgICAgICAgICB2ZWMyIHBhcmFtXzUgPSBvZmZzZXQwLnp3OwogICAgICAgICAgICBmbG9hdCBwYXJhbV82ID0gb2Zmc2V0Mi55OwogICAgICAgICAgICBmbG9hdCBfMjcwNSA9IFNNQUFTZWFyY2hYUmlnaHQocGFyYW1fNSwgcGFyYW1fNik7CiAgICAgICAgICAgIGNvb3Jkcy56ID0gXzI3MDU7CiAgICAgICAgICAgIGQueSA9IGNvb3Jkcy56OwogICAgICAgICAgICBkID0gYWJzKGZsb29yKCgoc2NyZWVuU2l6ZS54eCAqIGQpICsgLXBpeGNvb3JkXzEueHgpICsgdmVjMigwLjUpKSk7CiAgICAgICAgICAgIHZlYzIgc3FydF9kID0gc3FydChkKTsKICAgICAgICAgICAgZmxvYXQgZTIgPSB0ZXh0dXJlTG9kKGVkZ2VzVGV4LCBjb29yZHMuenkgKyAodmVjMigxLjAsIDAuMCkgKiBzY3JlZW5TaXplSW52KSwgMC4wKS54OwogICAgICAgICAgICB2ZWMyIHBhcmFtXzcgPSBzcXJ0X2Q7CiAgICAgICAgICAgIGZsb2F0IHBhcmFtXzggPSBlMTsKICAgICAgICAgICAgZmxvYXQgcGFyYW1fOSA9IGUyOwogICAgICAgICAgICBmbG9hdCBwYXJhbV8xMCA9IHN1YnNhbXBsZUluZGljZXMueTsKICAgICAgICAgICAgdmVjMiBfMjc0NCA9IFNNQUFBcmVhKHBhcmFtXzcsIHBhcmFtXzgsIHBhcmFtXzksIHBhcmFtXzEwKTsKICAgICAgICAgICAgd2VpZ2h0cyA9IHZlYzQoXzI3NDQueCwgXzI3NDQueSwgd2VpZ2h0cy56LCB3ZWlnaHRzLncpOwogICAgICAgICAgICBjb29yZHMueSA9IHRleGNvb3JkLnk7CiAgICAgICAgICAgIHZlYzIgcGFyYW1fMTEgPSB3ZWlnaHRzLnh5OwogICAgICAgICAgICB2ZWM0IHBhcmFtXzEyID0gY29vcmRzLnh5enk7CiAgICAgICAgICAgIHZlYzIgcGFyYW1fMTMgPSBkOwogICAgICAgICAgICB2ZWMyIF8yNzU4ID0gU01BQURldGVjdEhvcml6b250YWxDb3JuZXJQYXR0ZXJuKHBhcmFtXzExLCBwYXJhbV8xMiwgcGFyYW1fMTMpOwogICAgICAgICAgICB3ZWlnaHRzID0gdmVjNChfMjc1OC54LCBfMjc1OC55LCB3ZWlnaHRzLnosIHdlaWdodHMudyk7CiAgICAgICAgfQogICAgICAgIGVsc2UKICAgICAgICB7CiAgICAgICAgICAgIGUueCA9IDAuMDsKICAgICAgICB9CiAgICB9CiAgICBpZiAoZS54ID4gMC4wKQogICAgewogICAgICAgIHZlYzIgcGFyYW1fMTQgPSBvZmZzZXQxLnh5OwogICAgICAgIGZsb2F0IHBhcmFtXzE1ID0gb2Zmc2V0Mi56OwogICAgICAgIGZsb2F0IF8yNzc1ID0gU01BQVNlYXJjaFlVcChwYXJhbV8xNCwgcGFyYW1fMTUpOwogICAgICAgIHZlYzMgY29vcmRzXzE7CiAgICAgICAgY29vcmRzXzEueSA9IF8yNzc1OwogICAgICAgIGNvb3Jkc18xLnggPSBvZmZzZXQwLng7CiAgICAgICAgdmVjMiBkXzE7CiAgICAgICAgZF8xLnggPSBjb29yZHNfMS55OwogICAgICAgIGZsb2F0IGUxXzEgPSB0ZXh0dXJlTG9kKGVkZ2VzVGV4LCBjb29yZHNfMS54eSwgMC4wKS55OwogICAgICAgIHZlYzIgcGFyYW1fMTYgPSBvZmZzZXQxLnp3OwogICAgICAgIGZsb2F0IHBhcmFtXzE3ID0gb2Zmc2V0Mi53OwogICAgICAgIGZsb2F0IF8yNzk2ID0gU01BQVNlYXJjaFlEb3duKHBhcmFtXzE2LCBwYXJhbV8xNyk7CiAgICAgICAgY29vcmRzXzEueiA9IF8yNzk2OwogICAgICAgIGRfMS55ID0gY29vcmRzXzEuejsKICAgICAgICBkXzEgPSBhYnMoZmxvb3IoKChzY3JlZW5TaXplLnl5ICogZF8xKSArIC1waXhjb29yZF8xLnl5KSArIHZlYzIoMC41KSkpOwogICAgICAgIHZlYzIgc3FydF9kXzEgPSBzcXJ0KGRfMSk7CiAgICAgICAgZmxvYXQgZTJfMSA9IHRleHR1cmVMb2QoZWRnZXNUZXgsIGNvb3Jkc18xLnh6ICsgKHZlYzIoMC4wLCAxLjApICogc2NyZWVuU2l6ZUludiksIDAuMCkueTsKICAgICAgICB2ZWMyIHBhcmFtXzE4ID0gc3FydF9kXzE7CiAgICAgICAgZmxvYXQgcGFyYW1fMTkgPSBlMV8xOwogICAgICAgIGZsb2F0IHBhcmFtXzIwID0gZTJfMTsKICAgICAgICBmbG9hdCBwYXJhbV8yMSA9IHN1YnNhbXBsZUluZGljZXMueDsKICAgICAgICB2ZWMyIF8yODM0ID0gU01BQUFyZWEocGFyYW1fMTgsIHBhcmFtXzE5LCBwYXJhbV8yMCwgcGFyYW1fMjEpOwogICAgICAgIHdlaWdodHMgPSB2ZWM0KHdlaWdodHMueCwgd2VpZ2h0cy55LCBfMjgzNC54LCBfMjgzNC55KTsKICAgICAgICBjb29yZHNfMS54ID0gdGV4Y29vcmQueDsKICAgICAgICB2ZWMyIHBhcmFtXzIyID0gd2VpZ2h0cy56dzsKICAgICAgICB2ZWM0IHBhcmFtXzIzID0gY29vcmRzXzEueHl4ejsKICAgICAgICB2ZWMyIHBhcmFtXzI0ID0gZF8xOwogICAgICAgIHZlYzIgXzI4NDggPSBTTUFBRGV0ZWN0VmVydGljYWxDb3JuZXJQYXR0ZXJuKHBhcmFtXzIyLCBwYXJhbV8yMywgcGFyYW1fMjQpOwogICAgICAgIHdlaWdodHMgPSB2ZWM0KHdlaWdodHMueCwgd2VpZ2h0cy55LCBfMjg0OC54LCBfMjg0OC55KTsKICAgIH0KICAgIHJldHVybiB3ZWlnaHRzOwp9Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWMyIHBhcmFtID0gdGV4Q29vcmQ7CiAgICB2ZWMyIHBhcmFtXzEgPSBwaXhjb29yZDsKICAgIHZlYzQgcGFyYW1fMiA9IHZlYzQoMC4wKTsKICAgIHZlYzQgXzI4NjQgPSBTTUFBQmxlbmRpbmdXZWlnaHRDYWxjdWxhdGlvblBTKHBhcmFtLCBwYXJhbV8xLCBwYXJhbV8yKTsKICAgIGZyYWdDb2xvciA9IF8yODY0Owp9Cgo";
kha_Shaders.smaa_blend_weight_vertData0 = "s823:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZTsKdW5pZm9ybSB2ZWMyIHNjcmVlblNpemVJbnY7Cgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHBvczsKdmFyeWluZyB2ZWMyIHBpeGNvb3JkOwp2YXJ5aW5nIHZlYzQgb2Zmc2V0MDsKdmFyeWluZyB2ZWM0IG9mZnNldDE7CnZhcnlpbmcgdmVjNCBvZmZzZXQyOwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIHBpeGNvb3JkID0gdGV4Q29vcmQgKiBzY3JlZW5TaXplOwogICAgb2Zmc2V0MCA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiB2ZWM0KC0wLjI1LCAtMC4xMjUsIDEuMjUsIC0wLjEyNSkpICsgdGV4Q29vcmQueHl4eTsKICAgIG9mZnNldDEgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogdmVjNCgtMC4xMjUsIC0wLjI1LCAtMC4xMjUsIDEuMjUpKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQyID0gKHNjcmVlblNpemVJbnYueHh5eSAqIHZlYzQoLTMyLjAsIDMyLjAsIC0zMi4wLCAzMi4wKSkgKyB2ZWM0KG9mZnNldDAueHosIG9mZnNldDEueXcpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.smaa_blend_weight_vertData1 = "s908:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgdmVjMiBzY3JlZW5TaXplOwp1bmlmb3JtIG1lZGl1bXAgdmVjMiBzY3JlZW5TaXplSW52OwoKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgcG9zOwp2YXJ5aW5nIG1lZGl1bXAgdmVjMiBwaXhjb29yZDsKdmFyeWluZyBtZWRpdW1wIHZlYzQgb2Zmc2V0MDsKdmFyeWluZyBtZWRpdW1wIHZlYzQgb2Zmc2V0MTsKdmFyeWluZyBtZWRpdW1wIHZlYzQgb2Zmc2V0MjsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSk7CiAgICBwaXhjb29yZCA9IHRleENvb3JkICogc2NyZWVuU2l6ZTsKICAgIG9mZnNldDAgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogdmVjNCgtMC4yNSwgLTAuMTI1LCAxLjI1LCAtMC4xMjUpKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQxID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoLTAuMTI1LCAtMC4yNSwgLTAuMTI1LCAxLjI1KSkgKyB0ZXhDb29yZC54eXh5OwogICAgb2Zmc2V0MiA9IChzY3JlZW5TaXplSW52Lnh4eXkgKiB2ZWM0KC0zMi4wLCAzMi4wLCAtMzIuMCwgMzIuMCkpICsgdmVjNChvZmZzZXQwLnh6LCBvZmZzZXQxLnl3KTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKfQoK";
kha_Shaders.smaa_blend_weight_vertData2 = "s876:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgdmVjMiBzY3JlZW5TaXplOwp1bmlmb3JtIG1lZGl1bXAgdmVjMiBzY3JlZW5TaXplSW52OwoKb3V0IG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKaW4gbWVkaXVtcCB2ZWMyIHBvczsKb3V0IG1lZGl1bXAgdmVjMiBwaXhjb29yZDsKb3V0IG1lZGl1bXAgdmVjNCBvZmZzZXQwOwpvdXQgbWVkaXVtcCB2ZWM0IG9mZnNldDE7Cm91dCBtZWRpdW1wIHZlYzQgb2Zmc2V0MjsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSk7CiAgICBwaXhjb29yZCA9IHRleENvb3JkICogc2NyZWVuU2l6ZTsKICAgIG9mZnNldDAgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogdmVjNCgtMC4yNSwgLTAuMTI1LCAxLjI1LCAtMC4xMjUpKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQxID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoLTAuMTI1LCAtMC4yNSwgLTAuMTI1LCAxLjI1KSkgKyB0ZXhDb29yZC54eXh5OwogICAgb2Zmc2V0MiA9IChzY3JlZW5TaXplSW52Lnh4eXkgKiB2ZWM0KC0zMi4wLCAzMi4wLCAtMzIuMCwgMzIuMCkpICsgdmVjNChvZmZzZXQwLnh6LCBvZmZzZXQxLnl3KTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKfQoK";
kha_Shaders.smaa_edge_detect_fragData0 = "s2263:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgY29sb3JUZXg7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzQgb2Zmc2V0MDsKdmFyeWluZyBoaWdocCB2ZWM0IG9mZnNldDE7CnZhcnlpbmcgaGlnaHAgdmVjNCBvZmZzZXQyOwp2YXJ5aW5nIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7CgpoaWdocCB2ZWMyIFNNQUFDb2xvckVkZ2VEZXRlY3Rpb25QUyhoaWdocCB2ZWMyIHRleGNvb3JkKQp7CiAgICBoaWdocCB2ZWMyIHRocmVzaG9sZCA9IHZlYzIoMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgaGlnaHAgdmVjMyBDID0gdGV4dHVyZTJEKGNvbG9yVGV4LCB0ZXhjb29yZCkueHl6OwogICAgaGlnaHAgdmVjMyBDbGVmdCA9IHRleHR1cmUyRChjb2xvclRleCwgb2Zmc2V0MC54eSkueHl6OwogICAgaGlnaHAgdmVjMyB0ID0gYWJzKEMgLSBDbGVmdCk7CiAgICBoaWdocCB2ZWM0IGRlbHRhOwogICAgZGVsdGEueCA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgaGlnaHAgdmVjMyBDdG9wID0gdGV4dHVyZTJEKGNvbG9yVGV4LCBvZmZzZXQwLnp3KS54eXo7CiAgICB0ID0gYWJzKEMgLSBDdG9wKTsKICAgIGRlbHRhLnkgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIGhpZ2hwIHZlYzIgZWRnZXMgPSBzdGVwKHRocmVzaG9sZCwgZGVsdGEueHkpOwogICAgaWYgKGRvdChlZGdlcywgdmVjMigxLjApKSA9PSAwLjApCiAgICB7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGhpZ2hwIHZlYzMgQ3JpZ2h0ID0gdGV4dHVyZTJEKGNvbG9yVGV4LCBvZmZzZXQxLnh5KS54eXo7CiAgICB0ID0gYWJzKEMgLSBDcmlnaHQpOwogICAgZGVsdGEueiA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgaGlnaHAgdmVjMyBDYm90dG9tID0gdGV4dHVyZTJEKGNvbG9yVGV4LCBvZmZzZXQxLnp3KS54eXo7CiAgICB0ID0gYWJzKEMgLSBDYm90dG9tKTsKICAgIGRlbHRhLncgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIGhpZ2hwIHZlYzIgbWF4RGVsdGEgPSBtYXgoZGVsdGEueHksIGRlbHRhLnp3KTsKICAgIGhpZ2hwIHZlYzMgQ2xlZnRsZWZ0ID0gdGV4dHVyZTJEKGNvbG9yVGV4LCBvZmZzZXQyLnh5KS54eXo7CiAgICB0ID0gYWJzKEMgLSBDbGVmdGxlZnQpOwogICAgZGVsdGEueiA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgaGlnaHAgdmVjMyBDdG9wdG9wID0gdGV4dHVyZTJEKGNvbG9yVGV4LCBvZmZzZXQyLnp3KS54eXo7CiAgICB0ID0gYWJzKEMgLSBDdG9wdG9wKTsKICAgIGRlbHRhLncgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIG1heERlbHRhID0gbWF4KG1heERlbHRhLCBkZWx0YS56dyk7CiAgICBoaWdocCBmbG9hdCBmaW5hbERlbHRhID0gbWF4KG1heERlbHRhLngsIG1heERlbHRhLnkpOwogICAgZWRnZXMgKj0gc3RlcCh2ZWMyKGZpbmFsRGVsdGEpLCBkZWx0YS54eSAqIDIuMCk7CiAgICByZXR1cm4gZWRnZXM7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGhpZ2hwIHZlYzIgcGFyYW0gPSB0ZXhDb29yZDsKICAgIGhpZ2hwIHZlYzIgXzIwNCA9IFNNQUFDb2xvckVkZ2VEZXRlY3Rpb25QUyhwYXJhbSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoXzIwNC54LCBfMjA0LnksIGdsX0ZyYWdEYXRhWzBdLnosIGdsX0ZyYWdEYXRhWzBdLncpOwp9Cgo";
kha_Shaders.smaa_edge_detect_fragData1 = "s2100:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGNvbG9yVGV4OwoKdmFyeWluZyB2ZWM0IG9mZnNldDA7CnZhcnlpbmcgdmVjNCBvZmZzZXQxOwp2YXJ5aW5nIHZlYzQgb2Zmc2V0MjsKdmFyeWluZyB2ZWMyIHRleENvb3JkOwoKdmVjMiBTTUFBQ29sb3JFZGdlRGV0ZWN0aW9uUFModmVjMiB0ZXhjb29yZCkKewogICAgdmVjMiB0aHJlc2hvbGQgPSB2ZWMyKDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1KTsKICAgIHZlYzMgQyA9IHRleHR1cmUyRChjb2xvclRleCwgdGV4Y29vcmQpLnh5ejsKICAgIHZlYzMgQ2xlZnQgPSB0ZXh0dXJlMkQoY29sb3JUZXgsIG9mZnNldDAueHkpLnh5ejsKICAgIHZlYzMgdCA9IGFicyhDIC0gQ2xlZnQpOwogICAgdmVjNCBkZWx0YTsKICAgIGRlbHRhLnggPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIHZlYzMgQ3RvcCA9IHRleHR1cmUyRChjb2xvclRleCwgb2Zmc2V0MC56dykueHl6OwogICAgdCA9IGFicyhDIC0gQ3RvcCk7CiAgICBkZWx0YS55ID0gbWF4KG1heCh0LngsIHQueSksIHQueik7CiAgICB2ZWMyIGVkZ2VzID0gc3RlcCh0aHJlc2hvbGQsIGRlbHRhLnh5KTsKICAgIGlmIChkb3QoZWRnZXMsIHZlYzIoMS4wKSkgPT0gMC4wKQogICAgewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICB2ZWMzIENyaWdodCA9IHRleHR1cmUyRChjb2xvclRleCwgb2Zmc2V0MS54eSkueHl6OwogICAgdCA9IGFicyhDIC0gQ3JpZ2h0KTsKICAgIGRlbHRhLnogPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIHZlYzMgQ2JvdHRvbSA9IHRleHR1cmUyRChjb2xvclRleCwgb2Zmc2V0MS56dykueHl6OwogICAgdCA9IGFicyhDIC0gQ2JvdHRvbSk7CiAgICBkZWx0YS53ID0gbWF4KG1heCh0LngsIHQueSksIHQueik7CiAgICB2ZWMyIG1heERlbHRhID0gbWF4KGRlbHRhLnh5LCBkZWx0YS56dyk7CiAgICB2ZWMzIENsZWZ0bGVmdCA9IHRleHR1cmUyRChjb2xvclRleCwgb2Zmc2V0Mi54eSkueHl6OwogICAgdCA9IGFicyhDIC0gQ2xlZnRsZWZ0KTsKICAgIGRlbHRhLnogPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIHZlYzMgQ3RvcHRvcCA9IHRleHR1cmUyRChjb2xvclRleCwgb2Zmc2V0Mi56dykueHl6OwogICAgdCA9IGFicyhDIC0gQ3RvcHRvcCk7CiAgICBkZWx0YS53ID0gbWF4KG1heCh0LngsIHQueSksIHQueik7CiAgICBtYXhEZWx0YSA9IG1heChtYXhEZWx0YSwgZGVsdGEuencpOwogICAgZmxvYXQgZmluYWxEZWx0YSA9IG1heChtYXhEZWx0YS54LCBtYXhEZWx0YS55KTsKICAgIGVkZ2VzICo9IHN0ZXAodmVjMihmaW5hbERlbHRhKSwgZGVsdGEueHkgKiAyLjApOwogICAgcmV0dXJuIGVkZ2VzOwp9Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWMyIHBhcmFtID0gdGV4Q29vcmQ7CiAgICB2ZWMyIF8yMDQgPSBTTUFBQ29sb3JFZGdlRGV0ZWN0aW9uUFMocGFyYW0pOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KF8yMDQueCwgXzIwNC55LCBnbF9GcmFnRGF0YVswXS56LCBnbF9GcmFnRGF0YVswXS53KTsKfQoK";
kha_Shaders.smaa_edge_detect_fragData2 = "s2066:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGNvbG9yVGV4OwoKaW4gdmVjNCBvZmZzZXQwOwppbiB2ZWM0IG9mZnNldDE7CmluIHZlYzQgb2Zmc2V0MjsKb3V0IHZlYzQgZnJhZ0NvbG9yOwppbiB2ZWMyIHRleENvb3JkOwoKdmVjMiBTTUFBQ29sb3JFZGdlRGV0ZWN0aW9uUFModmVjMiB0ZXhjb29yZCkKewogICAgdmVjMiB0aHJlc2hvbGQgPSB2ZWMyKDAuMTAwMDAwMDAxNDkwMTE2MTE5Mzg0NzY1NjI1KTsKICAgIHZlYzMgQyA9IHRleHR1cmUoY29sb3JUZXgsIHRleGNvb3JkKS54eXo7CiAgICB2ZWMzIENsZWZ0ID0gdGV4dHVyZShjb2xvclRleCwgb2Zmc2V0MC54eSkueHl6OwogICAgdmVjMyB0ID0gYWJzKEMgLSBDbGVmdCk7CiAgICB2ZWM0IGRlbHRhOwogICAgZGVsdGEueCA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgdmVjMyBDdG9wID0gdGV4dHVyZShjb2xvclRleCwgb2Zmc2V0MC56dykueHl6OwogICAgdCA9IGFicyhDIC0gQ3RvcCk7CiAgICBkZWx0YS55ID0gbWF4KG1heCh0LngsIHQueSksIHQueik7CiAgICB2ZWMyIGVkZ2VzID0gc3RlcCh0aHJlc2hvbGQsIGRlbHRhLnh5KTsKICAgIGlmIChkb3QoZWRnZXMsIHZlYzIoMS4wKSkgPT0gMC4wKQogICAgewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICB2ZWMzIENyaWdodCA9IHRleHR1cmUoY29sb3JUZXgsIG9mZnNldDEueHkpLnh5ejsKICAgIHQgPSBhYnMoQyAtIENyaWdodCk7CiAgICBkZWx0YS56ID0gbWF4KG1heCh0LngsIHQueSksIHQueik7CiAgICB2ZWMzIENib3R0b20gPSB0ZXh0dXJlKGNvbG9yVGV4LCBvZmZzZXQxLnp3KS54eXo7CiAgICB0ID0gYWJzKEMgLSBDYm90dG9tKTsKICAgIGRlbHRhLncgPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIHZlYzIgbWF4RGVsdGEgPSBtYXgoZGVsdGEueHksIGRlbHRhLnp3KTsKICAgIHZlYzMgQ2xlZnRsZWZ0ID0gdGV4dHVyZShjb2xvclRleCwgb2Zmc2V0Mi54eSkueHl6OwogICAgdCA9IGFicyhDIC0gQ2xlZnRsZWZ0KTsKICAgIGRlbHRhLnogPSBtYXgobWF4KHQueCwgdC55KSwgdC56KTsKICAgIHZlYzMgQ3RvcHRvcCA9IHRleHR1cmUoY29sb3JUZXgsIG9mZnNldDIuencpLnh5ejsKICAgIHQgPSBhYnMoQyAtIEN0b3B0b3ApOwogICAgZGVsdGEudyA9IG1heChtYXgodC54LCB0LnkpLCB0LnopOwogICAgbWF4RGVsdGEgPSBtYXgobWF4RGVsdGEsIGRlbHRhLnp3KTsKICAgIGZsb2F0IGZpbmFsRGVsdGEgPSBtYXgobWF4RGVsdGEueCwgbWF4RGVsdGEueSk7CiAgICBlZGdlcyAqPSBzdGVwKHZlYzIoZmluYWxEZWx0YSksIGRlbHRhLnh5ICogMi4wKTsKICAgIHJldHVybiBlZGdlczsKfQoKdm9pZCBtYWluKCkKewogICAgdmVjMiBwYXJhbSA9IHRleENvb3JkOwogICAgdmVjMiBfMjA0ID0gU01BQUNvbG9yRWRnZURldGVjdGlvblBTKHBhcmFtKTsKICAgIGZyYWdDb2xvciA9IHZlYzQoXzIwNC54LCBfMjA0LnksIGZyYWdDb2xvci56LCBmcmFnQ29sb3Iudyk7Cn0KCg";
kha_Shaders.smaa_edge_detect_vertData0 = "s662:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZUludjsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKYXR0cmlidXRlIHZlYzIgcG9zOwp2YXJ5aW5nIHZlYzQgb2Zmc2V0MDsKdmFyeWluZyB2ZWM0IG9mZnNldDE7CnZhcnlpbmcgdmVjNCBvZmZzZXQyOwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIG9mZnNldDAgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogdmVjNCgtMS4wLCAwLjAsIDAuMCwgLTEuMCkpICsgdGV4Q29vcmQueHl4eTsKICAgIG9mZnNldDEgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogdmVjNCgxLjAsIDAuMCwgMC4wLCAxLjApKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQyID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoLTIuMCwgMC4wLCAwLjAsIC0yLjApKSArIHRleENvb3JkLnh5eHk7CiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQocG9zLCAwLjAsIDEuMCk7Cn0KCg";
kha_Shaders.smaa_edge_detect_vertData1 = "s726:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgdmVjMiBzY3JlZW5TaXplSW52OwoKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgcG9zOwp2YXJ5aW5nIG1lZGl1bXAgdmVjNCBvZmZzZXQwOwp2YXJ5aW5nIG1lZGl1bXAgdmVjNCBvZmZzZXQxOwp2YXJ5aW5nIG1lZGl1bXAgdmVjNCBvZmZzZXQyOwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIG9mZnNldDAgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogdmVjNCgtMS4wLCAwLjAsIDAuMCwgLTEuMCkpICsgdGV4Q29vcmQueHl4eTsKICAgIG9mZnNldDEgPSAoc2NyZWVuU2l6ZUludi54eXh5ICogdmVjNCgxLjAsIDAuMCwgMC4wLCAxLjApKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQyID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoLTIuMCwgMC4wLCAwLjAsIC0yLjApKSArIHRleENvb3JkLnh5eHk7CiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQocG9zLCAwLjAsIDEuMCk7Cn0KCg";
kha_Shaders.smaa_edge_detect_vertData2 = "s699:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgdmVjMiBzY3JlZW5TaXplSW52OwoKb3V0IG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKaW4gbWVkaXVtcCB2ZWMyIHBvczsKb3V0IG1lZGl1bXAgdmVjNCBvZmZzZXQwOwpvdXQgbWVkaXVtcCB2ZWM0IG9mZnNldDE7Cm91dCBtZWRpdW1wIHZlYzQgb2Zmc2V0MjsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSk7CiAgICBvZmZzZXQwID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoLTEuMCwgMC4wLCAwLjAsIC0xLjApKSArIHRleENvb3JkLnh5eHk7CiAgICBvZmZzZXQxID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoMS4wLCAwLjAsIDAuMCwgMS4wKSkgKyB0ZXhDb29yZC54eXh5OwogICAgb2Zmc2V0MiA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiB2ZWM0KC0yLjAsIDAuMCwgMC4wLCAtMi4wKSkgKyB0ZXhDb29yZC54eXh5OwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.smaa_neighborhood_blend_fragData0 = "s2566:I3ZlcnNpb24gMTAwCiNleHRlbnNpb24gR0xfRVhUX3NoYWRlcl90ZXh0dXJlX2xvZCA6IHJlcXVpcmUKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBoaWdocCBpbnQ7Cgp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBibGVuZFRleDsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgY29sb3JUZXg7CnVuaWZvcm0gaGlnaHAgdmVjMiBzY3JlZW5TaXplSW52OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgb2Zmc2V0OwoKaGlnaHAgdmVjNCBTTUFBTmVpZ2hib3Job29kQmxlbmRpbmdQUyhoaWdocCB2ZWMyIHRleGNvb3JkLCBoaWdocCB2ZWM0IG9mZnNldF8xKQp7CiAgICBoaWdocCB2ZWM0IGE7CiAgICBhLnggPSB0ZXh0dXJlMkQoYmxlbmRUZXgsIG9mZnNldF8xLnh5KS53OwogICAgYS55ID0gdGV4dHVyZTJEKGJsZW5kVGV4LCBvZmZzZXRfMS56dykueTsKICAgIGhpZ2hwIHZlYzIgXzQxID0gdGV4dHVyZTJEKGJsZW5kVGV4LCB0ZXhjb29yZCkueHo7CiAgICBhID0gdmVjNChhLngsIGEueSwgXzQxLnksIF80MS54KTsKICAgIGhpZ2hwIHZlYzQgYmxlbmRpbmdPZmZzZXQ7CiAgICBoaWdocCB2ZWMyIGJsZW5kaW5nV2VpZ2h0OwogICAgYm9vbCBoOwogICAgaWYgKGRvdChhLCB2ZWM0KDEuMCkpIDwgOS45OTk5OTk3NDczNzg3NTE2MzU1NTE0NTI2MzY3MTg4ZS0wNikKICAgIHsKICAgICAgICBoaWdocCB2ZWM0IGNvbG9yID0gdGV4dHVyZTJETG9kRVhUKGNvbG9yVGV4LCB0ZXhjb29yZCwgMC4wKTsKICAgICAgICByZXR1cm4gY29sb3I7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgaCA9IG1heChhLngsIGEueikgPiBtYXgoYS55LCBhLncpOwogICAgICAgIGJsZW5kaW5nT2Zmc2V0ID0gdmVjNCgwLjAsIGEueSwgMC4wLCBhLncpOwogICAgICAgIGJsZW5kaW5nV2VpZ2h0ID0gYS55dzsKICAgICAgICBpZiAoaCkKICAgICAgICB7CiAgICAgICAgICAgIGJsZW5kaW5nT2Zmc2V0LnggPSBhLng7CiAgICAgICAgfQogICAgICAgIGlmIChoKQogICAgICAgIHsKICAgICAgICAgICAgYmxlbmRpbmdPZmZzZXQueSA9IDAuMDsKICAgICAgICB9CiAgICAgICAgaWYgKGgpCiAgICAgICAgewogICAgICAgICAgICBibGVuZGluZ09mZnNldC56ID0gYS56OwogICAgICAgIH0KICAgICAgICBpZiAoaCkKICAgICAgICB7CiAgICAgICAgICAgIGJsZW5kaW5nT2Zmc2V0LncgPSAwLjA7CiAgICAgICAgfQogICAgICAgIGlmIChoKQogICAgICAgIHsKICAgICAgICAgICAgYmxlbmRpbmdXZWlnaHQueCA9IGEueDsKICAgICAgICB9CiAgICAgICAgaWYgKGgpCiAgICAgICAgewogICAgICAgICAgICBibGVuZGluZ1dlaWdodC55ID0gYS56OwogICAgICAgIH0KICAgICAgICBibGVuZGluZ1dlaWdodCAvPSB2ZWMyKGRvdChibGVuZGluZ1dlaWdodCwgdmVjMigxLjApKSk7CiAgICAgICAgaGlnaHAgdmVjNCBibGVuZGluZ0Nvb3JkID0gKGJsZW5kaW5nT2Zmc2V0ICogdmVjNChzY3JlZW5TaXplSW52LCAtc2NyZWVuU2l6ZUludikpICsgdGV4Y29vcmQueHl4eTsKICAgICAgICBoaWdocCB2ZWM0IGNvbG9yXzEgPSB0ZXh0dXJlMkRMb2RFWFQoY29sb3JUZXgsIGJsZW5kaW5nQ29vcmQueHksIDAuMCkgKiBibGVuZGluZ1dlaWdodC54OwogICAgICAgIGNvbG9yXzEgKz0gKHRleHR1cmUyRExvZEVYVChjb2xvclRleCwgYmxlbmRpbmdDb29yZC56dywgMC4wKSAqIGJsZW5kaW5nV2VpZ2h0LnkpOwogICAgICAgIHJldHVybiBjb2xvcl8xOwogICAgfQogICAgcmV0dXJuIHZlYzQoMC4wKTsKfQoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjMiBwYXJhbSA9IHRleENvb3JkOwogICAgaGlnaHAgdmVjNCBwYXJhbV8xID0gb2Zmc2V0OwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBTTUFBTmVpZ2hib3Job29kQmxlbmRpbmdQUyhwYXJhbSwgcGFyYW1fMSk7Cn0KCg";
kha_Shaders.smaa_neighborhood_blend_fragData1 = "s2454:I3ZlcnNpb24gMTAwCiNleHRlbnNpb24gR0xfRVhUX3NoYWRlcl90ZXh0dXJlX2xvZCA6IHJlcXVpcmUKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIGludDsKCnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgYmxlbmRUZXg7CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgY29sb3JUZXg7CnVuaWZvcm0gdmVjMiBzY3JlZW5TaXplSW52OwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIHZlYzQgb2Zmc2V0OwoKdmVjNCBTTUFBTmVpZ2hib3Job29kQmxlbmRpbmdQUyh2ZWMyIHRleGNvb3JkLCB2ZWM0IG9mZnNldF8xKQp7CiAgICB2ZWM0IGE7CiAgICBhLnggPSB0ZXh0dXJlMkQoYmxlbmRUZXgsIG9mZnNldF8xLnh5KS53OwogICAgYS55ID0gdGV4dHVyZTJEKGJsZW5kVGV4LCBvZmZzZXRfMS56dykueTsKICAgIHZlYzIgXzQxID0gdGV4dHVyZTJEKGJsZW5kVGV4LCB0ZXhjb29yZCkueHo7CiAgICBhID0gdmVjNChhLngsIGEueSwgXzQxLnksIF80MS54KTsKICAgIHZlYzQgYmxlbmRpbmdPZmZzZXQ7CiAgICB2ZWMyIGJsZW5kaW5nV2VpZ2h0OwogICAgYm9vbCBoOwogICAgaWYgKGRvdChhLCB2ZWM0KDEuMCkpIDwgOS45OTk5OTk3NDczNzg3NTE2MzU1NTE0NTI2MzY3MTg4ZS0wNikKICAgIHsKICAgICAgICB2ZWM0IGNvbG9yID0gdGV4dHVyZTJETG9kRVhUKGNvbG9yVGV4LCB0ZXhjb29yZCwgMC4wKTsKICAgICAgICByZXR1cm4gY29sb3I7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgaCA9IG1heChhLngsIGEueikgPiBtYXgoYS55LCBhLncpOwogICAgICAgIGJsZW5kaW5nT2Zmc2V0ID0gdmVjNCgwLjAsIGEueSwgMC4wLCBhLncpOwogICAgICAgIGJsZW5kaW5nV2VpZ2h0ID0gYS55dzsKICAgICAgICBpZiAoaCkKICAgICAgICB7CiAgICAgICAgICAgIGJsZW5kaW5nT2Zmc2V0LnggPSBhLng7CiAgICAgICAgfQogICAgICAgIGlmIChoKQogICAgICAgIHsKICAgICAgICAgICAgYmxlbmRpbmdPZmZzZXQueSA9IDAuMDsKICAgICAgICB9CiAgICAgICAgaWYgKGgpCiAgICAgICAgewogICAgICAgICAgICBibGVuZGluZ09mZnNldC56ID0gYS56OwogICAgICAgIH0KICAgICAgICBpZiAoaCkKICAgICAgICB7CiAgICAgICAgICAgIGJsZW5kaW5nT2Zmc2V0LncgPSAwLjA7CiAgICAgICAgfQogICAgICAgIGlmIChoKQogICAgICAgIHsKICAgICAgICAgICAgYmxlbmRpbmdXZWlnaHQueCA9IGEueDsKICAgICAgICB9CiAgICAgICAgaWYgKGgpCiAgICAgICAgewogICAgICAgICAgICBibGVuZGluZ1dlaWdodC55ID0gYS56OwogICAgICAgIH0KICAgICAgICBibGVuZGluZ1dlaWdodCAvPSB2ZWMyKGRvdChibGVuZGluZ1dlaWdodCwgdmVjMigxLjApKSk7CiAgICAgICAgdmVjNCBibGVuZGluZ0Nvb3JkID0gKGJsZW5kaW5nT2Zmc2V0ICogdmVjNChzY3JlZW5TaXplSW52LCAtc2NyZWVuU2l6ZUludikpICsgdGV4Y29vcmQueHl4eTsKICAgICAgICB2ZWM0IGNvbG9yXzEgPSB0ZXh0dXJlMkRMb2RFWFQoY29sb3JUZXgsIGJsZW5kaW5nQ29vcmQueHksIDAuMCkgKiBibGVuZGluZ1dlaWdodC54OwogICAgICAgIGNvbG9yXzEgKz0gKHRleHR1cmUyRExvZEVYVChjb2xvclRleCwgYmxlbmRpbmdDb29yZC56dywgMC4wKSAqIGJsZW5kaW5nV2VpZ2h0LnkpOwogICAgICAgIHJldHVybiBjb2xvcl8xOwogICAgfQogICAgcmV0dXJuIHZlYzQoMC4wKTsKfQoKdm9pZCBtYWluKCkKewogICAgdmVjMiBwYXJhbSA9IHRleENvb3JkOwogICAgdmVjNCBwYXJhbV8xID0gb2Zmc2V0OwogICAgZ2xfRnJhZ0RhdGFbMF0gPSBTTUFBTmVpZ2hib3Job29kQmxlbmRpbmdQUyhwYXJhbSwgcGFyYW1fMSk7Cn0KCg";
kha_Shaders.smaa_neighborhood_blend_fragData2 = "s2374:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGJsZW5kVGV4Owp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIGNvbG9yVGV4Owp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZUludjsKCm91dCB2ZWM0IGZyYWdDb2xvcjsKaW4gdmVjMiB0ZXhDb29yZDsKaW4gdmVjNCBvZmZzZXQ7Cgp2ZWM0IFNNQUFOZWlnaGJvcmhvb2RCbGVuZGluZ1BTKHZlYzIgdGV4Y29vcmQsIHZlYzQgb2Zmc2V0XzEpCnsKICAgIHZlYzQgYTsKICAgIGEueCA9IHRleHR1cmUoYmxlbmRUZXgsIG9mZnNldF8xLnh5KS53OwogICAgYS55ID0gdGV4dHVyZShibGVuZFRleCwgb2Zmc2V0XzEuencpLnk7CiAgICB2ZWMyIF80MSA9IHRleHR1cmUoYmxlbmRUZXgsIHRleGNvb3JkKS54ejsKICAgIGEgPSB2ZWM0KGEueCwgYS55LCBfNDEueSwgXzQxLngpOwogICAgdmVjNCBibGVuZGluZ09mZnNldDsKICAgIHZlYzIgYmxlbmRpbmdXZWlnaHQ7CiAgICBib29sIGg7CiAgICBpZiAoZG90KGEsIHZlYzQoMS4wKSkgPCA5Ljk5OTk5OTc0NzM3ODc1MTYzNTU1MTQ1MjYzNjcxODhlLTA2KQogICAgewogICAgICAgIHZlYzQgY29sb3IgPSB0ZXh0dXJlTG9kKGNvbG9yVGV4LCB0ZXhjb29yZCwgMC4wKTsKICAgICAgICByZXR1cm4gY29sb3I7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgaCA9IG1heChhLngsIGEueikgPiBtYXgoYS55LCBhLncpOwogICAgICAgIGJsZW5kaW5nT2Zmc2V0ID0gdmVjNCgwLjAsIGEueSwgMC4wLCBhLncpOwogICAgICAgIGJsZW5kaW5nV2VpZ2h0ID0gYS55dzsKICAgICAgICBpZiAoaCkKICAgICAgICB7CiAgICAgICAgICAgIGJsZW5kaW5nT2Zmc2V0LnggPSBhLng7CiAgICAgICAgfQogICAgICAgIGlmIChoKQogICAgICAgIHsKICAgICAgICAgICAgYmxlbmRpbmdPZmZzZXQueSA9IDAuMDsKICAgICAgICB9CiAgICAgICAgaWYgKGgpCiAgICAgICAgewogICAgICAgICAgICBibGVuZGluZ09mZnNldC56ID0gYS56OwogICAgICAgIH0KICAgICAgICBpZiAoaCkKICAgICAgICB7CiAgICAgICAgICAgIGJsZW5kaW5nT2Zmc2V0LncgPSAwLjA7CiAgICAgICAgfQogICAgICAgIGlmIChoKQogICAgICAgIHsKICAgICAgICAgICAgYmxlbmRpbmdXZWlnaHQueCA9IGEueDsKICAgICAgICB9CiAgICAgICAgaWYgKGgpCiAgICAgICAgewogICAgICAgICAgICBibGVuZGluZ1dlaWdodC55ID0gYS56OwogICAgICAgIH0KICAgICAgICBibGVuZGluZ1dlaWdodCAvPSB2ZWMyKGRvdChibGVuZGluZ1dlaWdodCwgdmVjMigxLjApKSk7CiAgICAgICAgdmVjNCBibGVuZGluZ0Nvb3JkID0gKGJsZW5kaW5nT2Zmc2V0ICogdmVjNChzY3JlZW5TaXplSW52LCAtc2NyZWVuU2l6ZUludikpICsgdGV4Y29vcmQueHl4eTsKICAgICAgICB2ZWM0IGNvbG9yXzEgPSB0ZXh0dXJlTG9kKGNvbG9yVGV4LCBibGVuZGluZ0Nvb3JkLnh5LCAwLjApICogYmxlbmRpbmdXZWlnaHQueDsKICAgICAgICBjb2xvcl8xICs9ICh0ZXh0dXJlTG9kKGNvbG9yVGV4LCBibGVuZGluZ0Nvb3JkLnp3LCAwLjApICogYmxlbmRpbmdXZWlnaHQueSk7CiAgICAgICAgcmV0dXJuIGNvbG9yXzE7CiAgICB9CiAgICByZXR1cm4gdmVjNCgwLjApOwp9Cgp2b2lkIG1haW4oKQp7CiAgICB2ZWMyIHBhcmFtID0gdGV4Q29vcmQ7CiAgICB2ZWM0IHBhcmFtXzEgPSBvZmZzZXQ7CiAgICBmcmFnQ29sb3IgPSBTTUFBTmVpZ2hib3Job29kQmxlbmRpbmdQUyhwYXJhbSwgcGFyYW1fMSk7Cn0KCg";
kha_Shaders.smaa_neighborhood_blend_vertData0 = "s384:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIHZlYzIgc2NyZWVuU2l6ZUludjsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKYXR0cmlidXRlIHZlYzIgcG9zOwp2YXJ5aW5nIHZlYzQgb2Zmc2V0OwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIG9mZnNldCA9IChzY3JlZW5TaXplSW52Lnh5eHkgKiB2ZWM0KDEuMCwgMC4wLCAwLjAsIDEuMCkpICsgdGV4Q29vcmQueHl4eTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKfQoK";
kha_Shaders.smaa_neighborhood_blend_vertData1 = "s427:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgdmVjMiBzY3JlZW5TaXplSW52OwoKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgcG9zOwp2YXJ5aW5nIG1lZGl1bXAgdmVjNCBvZmZzZXQ7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgb2Zmc2V0ID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoMS4wLCAwLjAsIDAuMCwgMS4wKSkgKyB0ZXhDb29yZC54eXh5OwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.smaa_neighborhood_blend_vertData2 = "s411:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgdmVjMiBzY3JlZW5TaXplSW52OwoKb3V0IG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKaW4gbWVkaXVtcCB2ZWMyIHBvczsKb3V0IG1lZGl1bXAgdmVjNCBvZmZzZXQ7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgb2Zmc2V0ID0gKHNjcmVlblNpemVJbnYueHl4eSAqIHZlYzQoMS4wLCAwLjAsIDAuMCwgMS4wKSkgKyB0ZXhDb29yZC54eXh5OwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.ssao_pass_fragData0 = "s9422:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMyIGFzcGVjdFJhdGlvOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyRDsKdW5pZm9ybSBoaWdocCB2ZWMzIGV5ZTsKdW5pZm9ybSBoaWdocCBtYXQ0IGludlZQOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBnYnVmZmVyMDsKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgc25vaXNlOwp1bmlmb3JtIGhpZ2hwIHZlYzIgc2NyZWVuU2l6ZTsKCnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCmhpZ2hwIHZlYzIgb2N0YWhlZHJvbldyYXAoaGlnaHAgdmVjMiB2KQp7CiAgICByZXR1cm4gKHZlYzIoMS4wKSAtIGFicyh2Lnl4KSkgKiB2ZWMyKCh2LnggPj0gMC4wKSA:IDEuMCA6IC0xLjAsICh2LnkgPj0gMC4wKSA:";
kha_Shaders.ssao_pass_fragData1 = "s8488:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgYXNwZWN0UmF0aW87CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gdmVjMyBleWU7CnVuaWZvcm0gbWF0NCBpbnZWUDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBnYnVmZmVyMDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBzbm9pc2U7CnVuaWZvcm0gdmVjMiBzY3JlZW5TaXplOwoKdmFyeWluZyB2ZWMyIHRleENvb3JkOwoKdmVjMiBvY3RhaGVkcm9uV3JhcCh2ZWMyIHYpCnsKICAgIHJldHVybiAodmVjMigxLjApIC0gYWJzKHYueXgpKSAqIHZlYzIoKHYueCA%PSAwLjApID8gMS4wIDogLTEuMCwgKHYueSA%PSAwLjApID8gMS4wIDogLTEuMCk7Cn0KCnZlYzMgZ2V0UG9zMk5vRXllKHZlYzMgZXllXzEsIG1hdDQgaW52VlBfMSwgZmxvYXQgZGVwdGgsIHZlYzIgY29vcmQpCnsKICAgIHZlYzQgcG9zID0gdmVjNCgoY29vcmQgKiAyLjApIC0gdmVjMigxLjApLCBkZXB0aCwgMS4wKTsKICAgIHBvcyA9IGludlZQXzEgKiBwb3M7CiAgICB2ZWMzIF83NCA9IHBvcy54eXogLyB2ZWMzKHBvcy53KTsKICAgIHBvcyA9IHZlYzQoXzc0LngsIF83NC55LCBfNzQueiwgcG9zLncpOwogICAgcmV0dXJuIHBvcy54eXogLSBleWVfMTsKfQoKZmxvYXQgZG9BTyhpbm91dCB2ZWMyIGtlcm5lbFZlYywgdmVjMiByYW5kb21WZWMsIG1hdDIgcm90TWF0LCB2ZWMzIGN1cnJlbnRQb3MsIHZlYzMgbiwgZmxvYXQgY3VycmVudERpc3RhbmNlKQp7CiAgICBrZXJuZWxWZWMgKj0gYXNwZWN0UmF0aW87CiAgICBmbG9hdCByYWRpdXMgPSAwLjExOTk5OTk5NzMxNzc5MDk4NTEwNzQyMTg3NSAqIHJhbmRvbVZlYy55OwogICAga2VybmVsVmVjID0gKChyb3RNYXQgKiBrZXJuZWxWZWMpIC8gdmVjMihjdXJyZW50RGlzdGFuY2UpKSAqIHJhZGl1czsKICAgIHZlYzIgY29vcmQgPSB0ZXhDb29yZCArIGtlcm5lbFZlYzsKICAgIGZsb2F0IGRlcHRoID0gKHRleHR1cmUyRChnYnVmZmVyRCwgY29vcmQpLnggKiAyLjApIC0gMS4wOwogICAgdmVjMyBwb3MgPSBnZXRQb3MyTm9FeWUoZXllLCBpbnZWUCwgZGVwdGgsIGNvb3JkKSAtIGN1cnJlbnRQb3M7CiAgICBmbG9hdCBhbmdsZSA9IGRvdChwb3MsIG4pOwogICAgYW5nbGUgKj0gc3RlcCgwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSwgYW5nbGUgLyBsZW5ndGgocG9zKSk7CiAgICBhbmdsZSAtPSAoY3VycmVudERpc3RhbmNlICogMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUpOwogICAgYW5nbGUgPSBtYXgoMC4wLCBhbmdsZSk7CiAgICBhbmdsZSAvPSAoKGRvdChwb3MsIHBvcykgLyBtaW4oY3VycmVudERpc3RhbmNlICogMC4yNSwgMS4wKSkgKyAwLjAwMTAwMDAwMDA0NzQ5NzQ1MTMwNTM4OTQwNDI5Njg3NSk7CiAgICByZXR1cm4gYW5nbGU7Cn0KCnZvaWQgbWFpbigpCnsKICAgIGZsb2F0IGRlcHRoID0gKHRleHR1cmUyRChnYnVmZmVyRCwgdGV4Q29vcmQpLnggKiAyLjApIC0gMS4wOwogICAgaWYgKGRlcHRoID09IDEuMCkKICAgIHsKICAgICAgICBnbF9GcmFnRGF0YVswXS54ID0gMS4wOwogICAgICAgIHJldHVybjsKICAgIH0KICAgIHZlYzIgZW5jID0gdGV4dHVyZTJEKGdidWZmZXIwLCB0ZXhDb29yZCkueHk7CiAgICB2ZWMzIG47CiAgICBuLnogPSAoMS4wIC0gYWJzKGVuYy54KSkgLSBhYnMoZW5jLnkpOwogICAgdmVjMiBfMTk1OwogICAgaWYgKG4ueiA%PSAwLjApCiAgICB7CiAgICAgICAgXzE5NSA9IGVuYzsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBfMTk1ID0gb2N0YWhlZHJvbldyYXAoZW5jKTsKICAgIH0KICAgIG4gPSB2ZWMzKF8xOTUueCwgXzE5NS55LCBuLnopOwogICAgbiA9IG5vcm1hbGl6ZShuKTsKICAgIHZlYzMgY3VycmVudFBvcyA9IGdldFBvczJOb0V5ZShleWUsIGludlZQLCBkZXB0aCwgdGV4Q29vcmQpOwogICAgZmxvYXQgY3VycmVudERpc3RhbmNlID0gbGVuZ3RoKGN1cnJlbnRQb3MpOwogICAgdmVjMiByYW5kb21WZWMgPSB0ZXh0dXJlMkQoc25vaXNlLCAodGV4Q29vcmQgKiBzY3JlZW5TaXplKSAvIHZlYzIoOC4wKSkueHk7CiAgICByYW5kb21WZWMgPSAocmFuZG9tVmVjICogMi4wKSAtIHZlYzIoMS4wKTsKICAgIG1hdDIgcm90TWF0ID0gbWF0Mih2ZWMyKHZlYzIoY29zKHJhbmRvbVZlYy54ICogMy4xNDE1OTI3NDEwMTI1NzMyNDIxODc1KSwgLXNpbihyYW5kb21WZWMueCAqIDMuMTQxNTkyNzQxMDEyNTczMjQyMTg3NSkpKSwgdmVjMih2ZWMyKHNpbihyYW5kb21WZWMueCAqIDMuMTQxNTkyNzQxMDEyNTczMjQyMTg3NSksIGNvcyhyYW5kb21WZWMueCAqIDMuMTQxNTkyNzQxMDEyNTczMjQyMTg3NSkpKSk7CiAgICB2ZWMyIHBhcmFtID0gdmVjMigxLjAsIDAuMCk7CiAgICB2ZWMyIHBhcmFtXzEgPSByYW5kb21WZWM7CiAgICBtYXQyIHBhcmFtXzIgPSByb3RNYXQ7CiAgICB2ZWMzIHBhcmFtXzMgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV80ID0gbjsKICAgIGZsb2F0IHBhcmFtXzUgPSBjdXJyZW50RGlzdGFuY2U7CiAgICBmbG9hdCBfMjc1ID0gZG9BTyhwYXJhbSwgcGFyYW1fMSwgcGFyYW1fMiwgcGFyYW1fMywgcGFyYW1fNCwgcGFyYW1fNSk7CiAgICBnbF9GcmFnRGF0YVswXS54ID0gXzI3NTsKICAgIHZlYzIgcGFyYW1fNiA9IHZlYzIoMC44NjYwMjUzODgyNDA4MTQyMDg5ODQzNzUsIDAuNDk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSk7CiAgICB2ZWMyIHBhcmFtXzcgPSByYW5kb21WZWM7CiAgICBtYXQyIHBhcmFtXzggPSByb3RNYXQ7CiAgICB2ZWMzIHBhcmFtXzkgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV8xMCA9IG47CiAgICBmbG9hdCBwYXJhbV8xMSA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF8yOTEgPSBkb0FPKHBhcmFtXzYsIHBhcmFtXzcsIHBhcmFtXzgsIHBhcmFtXzksIHBhcmFtXzEwLCBwYXJhbV8xMSk7CiAgICBnbF9GcmFnRGF0YVswXS54ICs9IF8yOTE7CiAgICB2ZWMyIHBhcmFtXzEyID0gdmVjMigwLjUsIDAuODY2MDI1Mzg4MjQwODE0MjA4OTg0Mzc1KTsKICAgIHZlYzIgcGFyYW1fMTMgPSByYW5kb21WZWM7CiAgICBtYXQyIHBhcmFtXzE0ID0gcm90TWF0OwogICAgdmVjMyBwYXJhbV8xNSA9IGN1cnJlbnRQb3M7CiAgICB2ZWMzIHBhcmFtXzE2ID0gbjsKICAgIGZsb2F0IHBhcmFtXzE3ID0gY3VycmVudERpc3RhbmNlOwogICAgZmxvYXQgXzMwOSA9IGRvQU8ocGFyYW1fMTIsIHBhcmFtXzEzLCBwYXJhbV8xNCwgcGFyYW1fMTUsIHBhcmFtXzE2LCBwYXJhbV8xNyk7CiAgICBnbF9GcmFnRGF0YVswXS54ICs9IF8zMDk7CiAgICB2ZWMyIHBhcmFtXzE4ID0gdmVjMigwLjAsIDEuMCk7CiAgICB2ZWMyIHBhcmFtXzE5ID0gcmFuZG9tVmVjOwogICAgbWF0MiBwYXJhbV8yMCA9IHJvdE1hdDsKICAgIHZlYzMgcGFyYW1fMjEgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV8yMiA9IG47CiAgICBmbG9hdCBwYXJhbV8yMyA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF8zMjYgPSBkb0FPKHBhcmFtXzE4LCBwYXJhbV8xOSwgcGFyYW1fMjAsIHBhcmFtXzIxLCBwYXJhbV8yMiwgcGFyYW1fMjMpOwogICAgZ2xfRnJhZ0RhdGFbMF0ueCArPSBfMzI2OwogICAgdmVjMiBwYXJhbV8yNCA9IHZlYzIoLTAuNDk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSwgMC44NjYwMjUzODgyNDA4MTQyMDg5ODQzNzUpOwogICAgdmVjMiBwYXJhbV8yNSA9IHJhbmRvbVZlYzsKICAgIG1hdDIgcGFyYW1fMjYgPSByb3RNYXQ7CiAgICB2ZWMzIHBhcmFtXzI3ID0gY3VycmVudFBvczsKICAgIHZlYzMgcGFyYW1fMjggPSBuOwogICAgZmxvYXQgcGFyYW1fMjkgPSBjdXJyZW50RGlzdGFuY2U7CiAgICBmbG9hdCBfMzQ0ID0gZG9BTyhwYXJhbV8yNCwgcGFyYW1fMjUsIHBhcmFtXzI2LCBwYXJhbV8yNywgcGFyYW1fMjgsIHBhcmFtXzI5KTsKICAgIGdsX0ZyYWdEYXRhWzBdLnggKz0gXzM0NDsKICAgIHZlYzIgcGFyYW1fMzAgPSB2ZWMyKC0wLjg2NjAyNTM4ODI0MDgxNDIwODk4NDM3NSwgMC41KTsKICAgIHZlYzIgcGFyYW1fMzEgPSByYW5kb21WZWM7CiAgICBtYXQyIHBhcmFtXzMyID0gcm90TWF0OwogICAgdmVjMyBwYXJhbV8zMyA9IGN1cnJlbnRQb3M7CiAgICB2ZWMzIHBhcmFtXzM0ID0gbjsKICAgIGZsb2F0IHBhcmFtXzM1ID0gY3VycmVudERpc3RhbmNlOwogICAgZmxvYXQgXzM2MiA9IGRvQU8ocGFyYW1fMzAsIHBhcmFtXzMxLCBwYXJhbV8zMiwgcGFyYW1fMzMsIHBhcmFtXzM0LCBwYXJhbV8zNSk7CiAgICBnbF9GcmFnRGF0YVswXS54ICs9IF8zNjI7CiAgICB2ZWMyIHBhcmFtXzM2ID0gdmVjMigtMS4wLCAwLjApOwogICAgdmVjMiBwYXJhbV8zNyA9IHJhbmRvbVZlYzsKICAgIG1hdDIgcGFyYW1fMzggPSByb3RNYXQ7CiAgICB2ZWMzIHBhcmFtXzM5ID0gY3VycmVudFBvczsKICAgIHZlYzMgcGFyYW1fNDAgPSBuOwogICAgZmxvYXQgcGFyYW1fNDEgPSBjdXJyZW50RGlzdGFuY2U7CiAgICBmbG9hdCBfMzc5ID0gZG9BTyhwYXJhbV8zNiwgcGFyYW1fMzcsIHBhcmFtXzM4LCBwYXJhbV8zOSwgcGFyYW1fNDAsIHBhcmFtXzQxKTsKICAgIGdsX0ZyYWdEYXRhWzBdLnggKz0gXzM3OTsKICAgIHZlYzIgcGFyYW1fNDIgPSB2ZWMyKC0wLjg2NjAyNTM4ODI0MDgxNDIwODk4NDM3NSwgLTAuNDk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSk7CiAgICB2ZWMyIHBhcmFtXzQzID0gcmFuZG9tVmVjOwogICAgbWF0MiBwYXJhbV80NCA9IHJvdE1hdDsKICAgIHZlYzMgcGFyYW1fNDUgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV80NiA9IG47CiAgICBmbG9hdCBwYXJhbV80NyA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF8zOTYgPSBkb0FPKHBhcmFtXzQyLCBwYXJhbV80MywgcGFyYW1fNDQsIHBhcmFtXzQ1LCBwYXJhbV80NiwgcGFyYW1fNDcpOwogICAgZ2xfRnJhZ0RhdGFbMF0ueCArPSBfMzk2OwogICAgdmVjMiBwYXJhbV80OCA9IHZlYzIoLTAuNSwgLTAuODY2MDI1Mzg4MjQwODE0MjA4OTg0Mzc1KTsKICAgIHZlYzIgcGFyYW1fNDkgPSByYW5kb21WZWM7CiAgICBtYXQyIHBhcmFtXzUwID0gcm90TWF0OwogICAgdmVjMyBwYXJhbV81MSA9IGN1cnJlbnRQb3M7CiAgICB2ZWMzIHBhcmFtXzUyID0gbjsKICAgIGZsb2F0IHBhcmFtXzUzID0gY3VycmVudERpc3RhbmNlOwogICAgZmxvYXQgXzQxNCA9IGRvQU8ocGFyYW1fNDgsIHBhcmFtXzQ5LCBwYXJhbV81MCwgcGFyYW1fNTEsIHBhcmFtXzUyLCBwYXJhbV81Myk7CiAgICBnbF9GcmFnRGF0YVswXS54ICs9IF80MTQ7CiAgICB2ZWMyIHBhcmFtXzU0ID0gdmVjMigwLjAsIC0xLjApOwogICAgdmVjMiBwYXJhbV81NSA9IHJhbmRvbVZlYzsKICAgIG1hdDIgcGFyYW1fNTYgPSByb3RNYXQ7CiAgICB2ZWMzIHBhcmFtXzU3ID0gY3VycmVudFBvczsKICAgIHZlYzMgcGFyYW1fNTggPSBuOwogICAgZmxvYXQgcGFyYW1fNTkgPSBjdXJyZW50RGlzdGFuY2U7CiAgICBmbG9hdCBfNDMxID0gZG9BTyhwYXJhbV81NCwgcGFyYW1fNTUsIHBhcmFtXzU2LCBwYXJhbV81NywgcGFyYW1fNTgsIHBhcmFtXzU5KTsKICAgIGdsX0ZyYWdEYXRhWzBdLnggKz0gXzQzMTsKICAgIHZlYzIgcGFyYW1fNjAgPSB2ZWMyKDAuNDk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSwgLTAuODY2MDI1Mzg4MjQwODE0MjA4OTg0Mzc1KTsKICAgIHZlYzIgcGFyYW1fNjEgPSByYW5kb21WZWM7CiAgICBtYXQyIHBhcmFtXzYyID0gcm90TWF0OwogICAgdmVjMyBwYXJhbV82MyA9IGN1cnJlbnRQb3M7CiAgICB2ZWMzIHBhcmFtXzY0ID0gbjsKICAgIGZsb2F0IHBhcmFtXzY1ID0gY3VycmVudERpc3RhbmNlOwogICAgZmxvYXQgXzQ0OCA9IGRvQU8ocGFyYW1fNjAsIHBhcmFtXzYxLCBwYXJhbV82MiwgcGFyYW1fNjMsIHBhcmFtXzY0LCBwYXJhbV82NSk7CiAgICBnbF9GcmFnRGF0YVswXS54ICs9IF80NDg7CiAgICB2ZWMyIHBhcmFtXzY2ID0gdmVjMigwLjg2NjAyNTM4ODI0MDgxNDIwODk4NDM3NSwgLTAuNSk7CiAgICB2ZWMyIHBhcmFtXzY3ID0gcmFuZG9tVmVjOwogICAgbWF0MiBwYXJhbV82OCA9IHJvdE1hdDsKICAgIHZlYzMgcGFyYW1fNjkgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV83MCA9IG47CiAgICBmbG9hdCBwYXJhbV83MSA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF80NjUgPSBkb0FPKHBhcmFtXzY2LCBwYXJhbV82NywgcGFyYW1fNjgsIHBhcmFtXzY5LCBwYXJhbV83MCwgcGFyYW1fNzEpOwogICAgZ2xfRnJhZ0RhdGFbMF0ueCArPSBfNDY1OwogICAgZ2xfRnJhZ0RhdGFbMF0ueCAqPSAwLjAwODMzMzMzMzc2Nzk1MDUzNDgyMDU1NjY0MDYyNTsKICAgIGdsX0ZyYWdEYXRhWzBdLnggPSBtYXgoMC4wLCAxLjAgLSBnbF9GcmFnRGF0YVswXS54KTsKfQoK";
kha_Shaders.ssao_pass_fragData2 = "s8395:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzIgYXNwZWN0UmF0aW87CnVuaWZvcm0gbWVkaXVtcCBzYW1wbGVyMkQgZ2J1ZmZlckQ7CnVuaWZvcm0gdmVjMyBleWU7CnVuaWZvcm0gbWF0NCBpbnZWUDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBnYnVmZmVyMDsKdW5pZm9ybSBtZWRpdW1wIHNhbXBsZXIyRCBzbm9pc2U7CnVuaWZvcm0gdmVjMiBzY3JlZW5TaXplOwoKaW4gdmVjMiB0ZXhDb29yZDsKb3V0IHZlYzQgZnJhZ0NvbG9yOwoKdmVjMiBvY3RhaGVkcm9uV3JhcCh2ZWMyIHYpCnsKICAgIHJldHVybiAodmVjMigxLjApIC0gYWJzKHYueXgpKSAqIHZlYzIoKHYueCA%PSAwLjApID8gMS4wIDogLTEuMCwgKHYueSA%PSAwLjApID8gMS4wIDogLTEuMCk7Cn0KCnZlYzMgZ2V0UG9zMk5vRXllKHZlYzMgZXllXzEsIG1hdDQgaW52VlBfMSwgZmxvYXQgZGVwdGgsIHZlYzIgY29vcmQpCnsKICAgIHZlYzQgcG9zID0gdmVjNCgoY29vcmQgKiAyLjApIC0gdmVjMigxLjApLCBkZXB0aCwgMS4wKTsKICAgIHBvcyA9IGludlZQXzEgKiBwb3M7CiAgICB2ZWMzIF83NCA9IHBvcy54eXogLyB2ZWMzKHBvcy53KTsKICAgIHBvcyA9IHZlYzQoXzc0LngsIF83NC55LCBfNzQueiwgcG9zLncpOwogICAgcmV0dXJuIHBvcy54eXogLSBleWVfMTsKfQoKZmxvYXQgZG9BTyhpbm91dCB2ZWMyIGtlcm5lbFZlYywgdmVjMiByYW5kb21WZWMsIG1hdDIgcm90TWF0LCB2ZWMzIGN1cnJlbnRQb3MsIHZlYzMgbiwgZmxvYXQgY3VycmVudERpc3RhbmNlKQp7CiAgICBrZXJuZWxWZWMgKj0gYXNwZWN0UmF0aW87CiAgICBmbG9hdCByYWRpdXMgPSAwLjExOTk5OTk5NzMxNzc5MDk4NTEwNzQyMTg3NSAqIHJhbmRvbVZlYy55OwogICAga2VybmVsVmVjID0gKChyb3RNYXQgKiBrZXJuZWxWZWMpIC8gdmVjMihjdXJyZW50RGlzdGFuY2UpKSAqIHJhZGl1czsKICAgIHZlYzIgY29vcmQgPSB0ZXhDb29yZCArIGtlcm5lbFZlYzsKICAgIGZsb2F0IGRlcHRoID0gKHRleHR1cmUoZ2J1ZmZlckQsIGNvb3JkKS54ICogMi4wKSAtIDEuMDsKICAgIHZlYzMgcG9zID0gZ2V0UG9zMk5vRXllKGV5ZSwgaW52VlAsIGRlcHRoLCBjb29yZCkgLSBjdXJyZW50UG9zOwogICAgZmxvYXQgYW5nbGUgPSBkb3QocG9zLCBuKTsKICAgIGFuZ2xlICo9IHN0ZXAoMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUsIGFuZ2xlIC8gbGVuZ3RoKHBvcykpOwogICAgYW5nbGUgLT0gKGN1cnJlbnREaXN0YW5jZSAqIDAuMDAxMDAwMDAwMDQ3NDk3NDUxMzA1Mzg5NDA0Mjk2ODc1KTsKICAgIGFuZ2xlID0gbWF4KDAuMCwgYW5nbGUpOwogICAgYW5nbGUgLz0gKChkb3QocG9zLCBwb3MpIC8gbWluKGN1cnJlbnREaXN0YW5jZSAqIDAuMjUsIDEuMCkpICsgMC4wMDEwMDAwMDAwNDc0OTc0NTEzMDUzODk0MDQyOTY4NzUpOwogICAgcmV0dXJuIGFuZ2xlOwp9Cgp2b2lkIG1haW4oKQp7CiAgICBmbG9hdCBkZXB0aCA9ICh0ZXh0dXJlKGdidWZmZXJELCB0ZXhDb29yZCkueCAqIDIuMCkgLSAxLjA7CiAgICBpZiAoZGVwdGggPT0gMS4wKQogICAgewogICAgICAgIGZyYWdDb2xvci54ID0gMS4wOwogICAgICAgIHJldHVybjsKICAgIH0KICAgIHZlYzIgZW5jID0gdGV4dHVyZShnYnVmZmVyMCwgdGV4Q29vcmQpLnh5OwogICAgdmVjMyBuOwogICAgbi56ID0gKDEuMCAtIGFicyhlbmMueCkpIC0gYWJzKGVuYy55KTsKICAgIHZlYzIgXzE5NTsKICAgIGlmIChuLnogPj0gMC4wKQogICAgewogICAgICAgIF8xOTUgPSBlbmM7CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgXzE5NSA9IG9jdGFoZWRyb25XcmFwKGVuYyk7CiAgICB9CiAgICBuID0gdmVjMyhfMTk1LngsIF8xOTUueSwgbi56KTsKICAgIG4gPSBub3JtYWxpemUobik7CiAgICB2ZWMzIGN1cnJlbnRQb3MgPSBnZXRQb3MyTm9FeWUoZXllLCBpbnZWUCwgZGVwdGgsIHRleENvb3JkKTsKICAgIGZsb2F0IGN1cnJlbnREaXN0YW5jZSA9IGxlbmd0aChjdXJyZW50UG9zKTsKICAgIHZlYzIgcmFuZG9tVmVjID0gdGV4dHVyZShzbm9pc2UsICh0ZXhDb29yZCAqIHNjcmVlblNpemUpIC8gdmVjMig4LjApKS54eTsKICAgIHJhbmRvbVZlYyA9IChyYW5kb21WZWMgKiAyLjApIC0gdmVjMigxLjApOwogICAgbWF0MiByb3RNYXQgPSBtYXQyKHZlYzIodmVjMihjb3MocmFuZG9tVmVjLnggKiAzLjE0MTU5Mjc0MTAxMjU3MzI0MjE4NzUpLCAtc2luKHJhbmRvbVZlYy54ICogMy4xNDE1OTI3NDEwMTI1NzMyNDIxODc1KSkpLCB2ZWMyKHZlYzIoc2luKHJhbmRvbVZlYy54ICogMy4xNDE1OTI3NDEwMTI1NzMyNDIxODc1KSwgY29zKHJhbmRvbVZlYy54ICogMy4xNDE1OTI3NDEwMTI1NzMyNDIxODc1KSkpKTsKICAgIHZlYzIgcGFyYW0gPSB2ZWMyKDEuMCwgMC4wKTsKICAgIHZlYzIgcGFyYW1fMSA9IHJhbmRvbVZlYzsKICAgIG1hdDIgcGFyYW1fMiA9IHJvdE1hdDsKICAgIHZlYzMgcGFyYW1fMyA9IGN1cnJlbnRQb3M7CiAgICB2ZWMzIHBhcmFtXzQgPSBuOwogICAgZmxvYXQgcGFyYW1fNSA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF8yNzUgPSBkb0FPKHBhcmFtLCBwYXJhbV8xLCBwYXJhbV8yLCBwYXJhbV8zLCBwYXJhbV80LCBwYXJhbV81KTsKICAgIGZyYWdDb2xvci54ID0gXzI3NTsKICAgIHZlYzIgcGFyYW1fNiA9IHZlYzIoMC44NjYwMjUzODgyNDA4MTQyMDg5ODQzNzUsIDAuNDk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSk7CiAgICB2ZWMyIHBhcmFtXzcgPSByYW5kb21WZWM7CiAgICBtYXQyIHBhcmFtXzggPSByb3RNYXQ7CiAgICB2ZWMzIHBhcmFtXzkgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV8xMCA9IG47CiAgICBmbG9hdCBwYXJhbV8xMSA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF8yOTEgPSBkb0FPKHBhcmFtXzYsIHBhcmFtXzcsIHBhcmFtXzgsIHBhcmFtXzksIHBhcmFtXzEwLCBwYXJhbV8xMSk7CiAgICBmcmFnQ29sb3IueCArPSBfMjkxOwogICAgdmVjMiBwYXJhbV8xMiA9IHZlYzIoMC41LCAwLjg2NjAyNTM4ODI0MDgxNDIwODk4NDM3NSk7CiAgICB2ZWMyIHBhcmFtXzEzID0gcmFuZG9tVmVjOwogICAgbWF0MiBwYXJhbV8xNCA9IHJvdE1hdDsKICAgIHZlYzMgcGFyYW1fMTUgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV8xNiA9IG47CiAgICBmbG9hdCBwYXJhbV8xNyA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF8zMDkgPSBkb0FPKHBhcmFtXzEyLCBwYXJhbV8xMywgcGFyYW1fMTQsIHBhcmFtXzE1LCBwYXJhbV8xNiwgcGFyYW1fMTcpOwogICAgZnJhZ0NvbG9yLnggKz0gXzMwOTsKICAgIHZlYzIgcGFyYW1fMTggPSB2ZWMyKDAuMCwgMS4wKTsKICAgIHZlYzIgcGFyYW1fMTkgPSByYW5kb21WZWM7CiAgICBtYXQyIHBhcmFtXzIwID0gcm90TWF0OwogICAgdmVjMyBwYXJhbV8yMSA9IGN1cnJlbnRQb3M7CiAgICB2ZWMzIHBhcmFtXzIyID0gbjsKICAgIGZsb2F0IHBhcmFtXzIzID0gY3VycmVudERpc3RhbmNlOwogICAgZmxvYXQgXzMyNiA9IGRvQU8ocGFyYW1fMTgsIHBhcmFtXzE5LCBwYXJhbV8yMCwgcGFyYW1fMjEsIHBhcmFtXzIyLCBwYXJhbV8yMyk7CiAgICBmcmFnQ29sb3IueCArPSBfMzI2OwogICAgdmVjMiBwYXJhbV8yNCA9IHZlYzIoLTAuNDk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSwgMC44NjYwMjUzODgyNDA4MTQyMDg5ODQzNzUpOwogICAgdmVjMiBwYXJhbV8yNSA9IHJhbmRvbVZlYzsKICAgIG1hdDIgcGFyYW1fMjYgPSByb3RNYXQ7CiAgICB2ZWMzIHBhcmFtXzI3ID0gY3VycmVudFBvczsKICAgIHZlYzMgcGFyYW1fMjggPSBuOwogICAgZmxvYXQgcGFyYW1fMjkgPSBjdXJyZW50RGlzdGFuY2U7CiAgICBmbG9hdCBfMzQ0ID0gZG9BTyhwYXJhbV8yNCwgcGFyYW1fMjUsIHBhcmFtXzI2LCBwYXJhbV8yNywgcGFyYW1fMjgsIHBhcmFtXzI5KTsKICAgIGZyYWdDb2xvci54ICs9IF8zNDQ7CiAgICB2ZWMyIHBhcmFtXzMwID0gdmVjMigtMC44NjYwMjUzODgyNDA4MTQyMDg5ODQzNzUsIDAuNSk7CiAgICB2ZWMyIHBhcmFtXzMxID0gcmFuZG9tVmVjOwogICAgbWF0MiBwYXJhbV8zMiA9IHJvdE1hdDsKICAgIHZlYzMgcGFyYW1fMzMgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV8zNCA9IG47CiAgICBmbG9hdCBwYXJhbV8zNSA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF8zNjIgPSBkb0FPKHBhcmFtXzMwLCBwYXJhbV8zMSwgcGFyYW1fMzIsIHBhcmFtXzMzLCBwYXJhbV8zNCwgcGFyYW1fMzUpOwogICAgZnJhZ0NvbG9yLnggKz0gXzM2MjsKICAgIHZlYzIgcGFyYW1fMzYgPSB2ZWMyKC0xLjAsIDAuMCk7CiAgICB2ZWMyIHBhcmFtXzM3ID0gcmFuZG9tVmVjOwogICAgbWF0MiBwYXJhbV8zOCA9IHJvdE1hdDsKICAgIHZlYzMgcGFyYW1fMzkgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV80MCA9IG47CiAgICBmbG9hdCBwYXJhbV80MSA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF8zNzkgPSBkb0FPKHBhcmFtXzM2LCBwYXJhbV8zNywgcGFyYW1fMzgsIHBhcmFtXzM5LCBwYXJhbV80MCwgcGFyYW1fNDEpOwogICAgZnJhZ0NvbG9yLnggKz0gXzM3OTsKICAgIHZlYzIgcGFyYW1fNDIgPSB2ZWMyKC0wLjg2NjAyNTM4ODI0MDgxNDIwODk4NDM3NSwgLTAuNDk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSk7CiAgICB2ZWMyIHBhcmFtXzQzID0gcmFuZG9tVmVjOwogICAgbWF0MiBwYXJhbV80NCA9IHJvdE1hdDsKICAgIHZlYzMgcGFyYW1fNDUgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV80NiA9IG47CiAgICBmbG9hdCBwYXJhbV80NyA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF8zOTYgPSBkb0FPKHBhcmFtXzQyLCBwYXJhbV80MywgcGFyYW1fNDQsIHBhcmFtXzQ1LCBwYXJhbV80NiwgcGFyYW1fNDcpOwogICAgZnJhZ0NvbG9yLnggKz0gXzM5NjsKICAgIHZlYzIgcGFyYW1fNDggPSB2ZWMyKC0wLjUsIC0wLjg2NjAyNTM4ODI0MDgxNDIwODk4NDM3NSk7CiAgICB2ZWMyIHBhcmFtXzQ5ID0gcmFuZG9tVmVjOwogICAgbWF0MiBwYXJhbV81MCA9IHJvdE1hdDsKICAgIHZlYzMgcGFyYW1fNTEgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV81MiA9IG47CiAgICBmbG9hdCBwYXJhbV81MyA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF80MTQgPSBkb0FPKHBhcmFtXzQ4LCBwYXJhbV80OSwgcGFyYW1fNTAsIHBhcmFtXzUxLCBwYXJhbV81MiwgcGFyYW1fNTMpOwogICAgZnJhZ0NvbG9yLnggKz0gXzQxNDsKICAgIHZlYzIgcGFyYW1fNTQgPSB2ZWMyKDAuMCwgLTEuMCk7CiAgICB2ZWMyIHBhcmFtXzU1ID0gcmFuZG9tVmVjOwogICAgbWF0MiBwYXJhbV81NiA9IHJvdE1hdDsKICAgIHZlYzMgcGFyYW1fNTcgPSBjdXJyZW50UG9zOwogICAgdmVjMyBwYXJhbV81OCA9IG47CiAgICBmbG9hdCBwYXJhbV81OSA9IGN1cnJlbnREaXN0YW5jZTsKICAgIGZsb2F0IF80MzEgPSBkb0FPKHBhcmFtXzU0LCBwYXJhbV81NSwgcGFyYW1fNTYsIHBhcmFtXzU3LCBwYXJhbV81OCwgcGFyYW1fNTkpOwogICAgZnJhZ0NvbG9yLnggKz0gXzQzMTsKICAgIHZlYzIgcGFyYW1fNjAgPSB2ZWMyKDAuNDk5OTk5OTEwNTkzMDMyODM2OTE0MDYyNSwgLTAuODY2MDI1Mzg4MjQwODE0MjA4OTg0Mzc1KTsKICAgIHZlYzIgcGFyYW1fNjEgPSByYW5kb21WZWM7CiAgICBtYXQyIHBhcmFtXzYyID0gcm90TWF0OwogICAgdmVjMyBwYXJhbV82MyA9IGN1cnJlbnRQb3M7CiAgICB2ZWMzIHBhcmFtXzY0ID0gbjsKICAgIGZsb2F0IHBhcmFtXzY1ID0gY3VycmVudERpc3RhbmNlOwogICAgZmxvYXQgXzQ0OCA9IGRvQU8ocGFyYW1fNjAsIHBhcmFtXzYxLCBwYXJhbV82MiwgcGFyYW1fNjMsIHBhcmFtXzY0LCBwYXJhbV82NSk7CiAgICBmcmFnQ29sb3IueCArPSBfNDQ4OwogICAgdmVjMiBwYXJhbV82NiA9IHZlYzIoMC44NjYwMjUzODgyNDA4MTQyMDg5ODQzNzUsIC0wLjUpOwogICAgdmVjMiBwYXJhbV82NyA9IHJhbmRvbVZlYzsKICAgIG1hdDIgcGFyYW1fNjggPSByb3RNYXQ7CiAgICB2ZWMzIHBhcmFtXzY5ID0gY3VycmVudFBvczsKICAgIHZlYzMgcGFyYW1fNzAgPSBuOwogICAgZmxvYXQgcGFyYW1fNzEgPSBjdXJyZW50RGlzdGFuY2U7CiAgICBmbG9hdCBfNDY1ID0gZG9BTyhwYXJhbV82NiwgcGFyYW1fNjcsIHBhcmFtXzY4LCBwYXJhbV82OSwgcGFyYW1fNzAsIHBhcmFtXzcxKTsKICAgIGZyYWdDb2xvci54ICs9IF80NjU7CiAgICBmcmFnQ29sb3IueCAqPSAwLjAwODMzMzMzMzc2Nzk1MDUzNDgyMDU1NjY0MDYyNTsKICAgIGZyYWdDb2xvci54ID0gbWF4KDAuMCwgMS4wIC0gZnJhZ0NvbG9yLngpOwp9Cgo";
kha_Shaders.ssao_pass_vertData0 = "s214:I3ZlcnNpb24gMTAwCgp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHBvczsKCnZvaWQgbWFpbigpCnsKICAgIHRleENvb3JkID0gKHBvcyAqIHZlYzIoMC41KSkgKyB2ZWMyKDAuNSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQocG9zLCAwLjAsIDEuMCk7Cn0KCg";
kha_Shaders.ssao_pass_vertData1 = "s235:I3ZlcnNpb24gMTAwCgp2YXJ5aW5nIG1lZGl1bXAgdmVjMiB0ZXhDb29yZDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMiBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICB0ZXhDb29yZCA9IChwb3MgKiB2ZWMyKDAuNSkpICsgdmVjMigwLjUpOwogICAgZ2xfUG9zaXRpb24gPSB2ZWM0KHBvcywgMC4wLCAxLjApOwp9Cgo";
kha_Shaders.ssao_pass_vertData2 = "s224:I3ZlcnNpb24gMzAwIGVzCgpvdXQgbWVkaXVtcCB2ZWMyIHRleENvb3JkOwppbiBtZWRpdW1wIHZlYzIgcG9zOwoKdm9pZCBtYWluKCkKewogICAgdGV4Q29vcmQgPSAocG9zICogdmVjMigwLjUpKSArIHZlYzIoMC41KTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTsKfQoK";
kha_Shaders.world_fragData0 = "s363:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIGJhY2tncm91bmRDb2w7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzMgbm9ybWFsOwoKdm9pZCBtYWluKCkKewogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KGJhY2tncm91bmRDb2wueCwgYmFja2dyb3VuZENvbC55LCBiYWNrZ3JvdW5kQ29sLnosIGdsX0ZyYWdEYXRhWzBdLncpOwp9Cgo";
kha_Shaders.world_fragData1 = "s342:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzMgYmFja2dyb3VuZENvbDsKdW5pZm9ybSBmbG9hdCBlbnZtYXBTdHJlbmd0aDsKCnZhcnlpbmcgdmVjMyBub3JtYWw7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoYmFja2dyb3VuZENvbC54LCBiYWNrZ3JvdW5kQ29sLnksIGJhY2tncm91bmRDb2wueiwgZ2xfRnJhZ0RhdGFbMF0udyk7Cn0KCg";
kha_Shaders.world_fragData2 = "s352:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIHZlYzMgYmFja2dyb3VuZENvbDsKdW5pZm9ybSBmbG9hdCBlbnZtYXBTdHJlbmd0aDsKCm91dCB2ZWM0IGZyYWdDb2xvcjsKaW4gdmVjMyBub3JtYWw7Cgp2b2lkIG1haW4oKQp7CiAgICBmcmFnQ29sb3IgPSB2ZWM0KGJhY2tncm91bmRDb2wueCwgYmFja2dyb3VuZENvbC55LCBiYWNrZ3JvdW5kQ29sLnosIGZyYWdDb2xvci53KTsKfQoK";
kha_Shaders.world_vertData0 = "s278:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgU01WUDsKCnZhcnlpbmcgdmVjMyBub3JtYWw7CmF0dHJpYnV0ZSB2ZWMzIG5vcjsKYXR0cmlidXRlIHZlYzMgcG9zOwoKdm9pZCBtYWluKCkKewogICAgbm9ybWFsID0gbm9yOwogICAgdmVjNCBwb3NpdGlvbiA9IFNNVlAgKiB2ZWM0KHBvcywgMS4wKTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3NpdGlvbik7Cn0KCg";
kha_Shaders.world_vertData1 = "s331:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBTTVZQOwoKdmFyeWluZyBtZWRpdW1wIHZlYzMgbm9ybWFsOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWMzIG5vcjsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBub3JtYWwgPSBub3I7CiAgICBtZWRpdW1wIHZlYzQgcG9zaXRpb24gPSBTTVZQICogdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQocG9zaXRpb24pOwp9Cgo";
kha_Shaders.world_vertData2 = "s311:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBTTVZQOwoKb3V0IG1lZGl1bXAgdmVjMyBub3JtYWw7CmluIG1lZGl1bXAgdmVjMyBub3I7CmluIG1lZGl1bXAgdmVjMyBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBub3JtYWwgPSBub3I7CiAgICBtZWRpdW1wIHZlYzQgcG9zaXRpb24gPSBTTVZQICogdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IHZlYzQocG9zaXRpb24pOwp9Cgo";
kha_Shaders.painter_colored_fragData0 = "s198:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IGZyYWdtZW50Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_fragData1 = "s192:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gZnJhZ21lbnRDb2xvcjsKfQoK";
kha_Shaders.painter_colored_fragData2 = "s210:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CgpvdXQgdmVjNCBGcmFnQ29sb3I7CmluIHZlYzQgZnJhZ21lbnRDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIEZyYWdDb2xvciA9IGZyYWdtZW50Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_vertData0 = "s331:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData1 = "s374:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIG1lZGl1bXAgdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_vertData2 = "s354:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKaW4gbWVkaXVtcCB2ZWMzIHZlcnRleFBvc2l0aW9uOwpvdXQgbWVkaXVtcCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIG1lZGl1bXAgdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_image_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData1 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_image_fragData2 = "s452:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCmluIHZlYzIgdGV4Q29vcmQ7CmluIHZlYzQgY29sb3I7Cm91dCB2ZWM0IEZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBGcmFnQ29sb3IgPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_image_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData1 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData2 = "s444:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKaW4gbWVkaXVtcCB2ZWMzIHZlcnRleFBvc2l0aW9uOwpvdXQgbWVkaXVtcCB2ZWMyIHRleENvb3JkOwppbiBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247Cm91dCBtZWRpdW1wIHZlYzQgY29sb3I7CmluIG1lZGl1bXAgdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_fragData0 = "s351:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChmcmFnbWVudENvbG9yLnh5eiwgdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_fragData1 = "s340:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjNCBmcmFnbWVudENvbG9yOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoZnJhZ21lbnRDb2xvci54eXosIHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKS54ICogZnJhZ21lbnRDb2xvci53KTsKfQoK";
kha_Shaders.painter_text_fragData2 = "s348:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCm91dCB2ZWM0IEZyYWdDb2xvcjsKaW4gdmVjNCBmcmFnbWVudENvbG9yOwppbiB2ZWMyIHRleENvb3JkOwoKdm9pZCBtYWluKCkKewogICAgRnJhZ0NvbG9yID0gdmVjNChmcmFnbWVudENvbG9yLnh5eiwgdGV4dHVyZSh0ZXgsIHRleENvb3JkKS54ICogZnJhZ21lbnRDb2xvci53KTsKfQoK";
kha_Shaders.painter_text_vertData0 = "s436:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_vertData1 = "s500:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGZyYWdtZW50Q29sb3I7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_vertData2 = "s466:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKaW4gbWVkaXVtcCB2ZWMzIHZlcnRleFBvc2l0aW9uOwpvdXQgbWVkaXVtcCB2ZWMyIHRleENvb3JkOwppbiBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247Cm91dCBtZWRpdW1wIHZlYzQgZnJhZ21lbnRDb2xvcjsKaW4gbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_video_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_fragData1 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_video_fragData2 = "s452:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCmluIHZlYzIgdGV4Q29vcmQ7CmluIHZlYzQgY29sb3I7Cm91dCB2ZWM0IEZyYWdDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIHZlYzQgdGV4Y29sb3IgPSB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBGcmFnQ29sb3IgPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_video_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData1 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData2 = "s444:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKaW4gbWVkaXVtcCB2ZWMzIHZlcnRleFBvc2l0aW9uOwpvdXQgbWVkaXVtcCB2ZWMyIHRleENvb3JkOwppbiBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247Cm91dCBtZWRpdW1wIHZlYzQgY29sb3I7CmluIG1lZGl1bXAgdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.backgroundListeners = [];
kha_SystemImpl.mobile = false;
kha_SystemImpl.mobileAudioPlaying = false;
kha_SystemImpl.chrome = false;
kha_SystemImpl.firefox = false;
kha_SystemImpl.insideInputEvent = false;
kha_SystemImpl.leftMouseCtrlDown = false;
kha_SystemImpl.minimumScroll = 999;
kha_SystemImpl.lastFirstTouchX = 0;
kha_SystemImpl.lastFirstTouchY = 0;
kha_SystemImpl.iosSoundEnabled = false;
kha_audio2_ogg_vorbis_VorbisDecodeState.INVALID_BITS = -1;
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_graphics4_CubeMap.GL_RGBA16F = 34842;
kha_graphics4_CubeMap.GL_RGBA32F = 34836;
kha_graphics4_CubeMap.GL_R16F = 33325;
kha_graphics4_CubeMap.GL_R32F = 33326;
kha_graphics4_CubeMap.GL_DEPTH_COMPONENT24 = 33190;
kha_graphics4_CubeMap.GL_DEPTH24_STENCIL8 = 35056;
kha_graphics4_CubeMap.GL_DEPTH32F_STENCIL8 = 36013;
kha_graphics4_ImageShaderPainter.bufferSize = 1500;
kha_graphics4_ColoredShaderPainter.bufferSize = 100;
kha_graphics4_ColoredShaderPainter.triangleBufferSize = 100;
kha_graphics4_TextShaderPainter.bufferSize = 100;
kha_input_Gamepad.__meta__ = { fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendPressEvent : { input : null}}};
kha_input_Mouse.__meta__ = { fields : { sendLeaveEvent : { input : null}, sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_internal_HdrFormat.exposurePattern = new EReg("EXPOSURE=\\s*([0-9]*[.][0-9]*)","i");
kha_internal_HdrFormat.formatPattern = new EReg("FORMAT=32-bit_rle_rgbe","i");
kha_internal_HdrFormat.widthHeightPattern = new EReg("-Y ([0-9]+) \\+X ([0-9]+)","i");
kha_js_AEAudioChannel.todo = [];
kha_js_Sound.loading = [];
kha_network_ControllerBuilder.nextId = 0;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
